[{"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js":"1","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js":"2","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js":"3","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js":"4","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js":"5","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js":"6","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js":"7","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js":"8","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js":"9","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js":"10","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js":"11","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js":"12","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js":"13","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js":"14","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js":"15","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js":"16","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js":"17","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js":"18","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js":"19","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js":"20","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js":"21","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js":"22","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js":"23","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js":"24","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js":"25","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js":"26","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js":"27","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js":"28","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js":"29","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js":"30","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js":"31","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js":"32","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js":"33","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js":"34","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js":"35","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js":"36","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js":"37","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js":"38","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js":"39","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js":"40","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js":"41","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js":"42","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js":"43","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js":"44","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js":"45","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js":"46","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js":"47","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js":"48","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js":"49","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Sites.js":"50","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\SitesAllTime.js":"51","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\byHoursChart.js":"52","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js":"53","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamSumChart.js":"54","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Mock.js":"55","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\date.service.js":"56","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\efficiency.service.js":"57"},{"size":304,"mtime":1610887316445,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":499162500000,"results":"60","hashOfConfig":"59"},{"size":1269,"mtime":1612089056656,"results":"61","hashOfConfig":"59"},{"size":6092,"mtime":1614442195196,"results":"62","hashOfConfig":"59"},{"size":9780,"mtime":1614443544594,"results":"63","hashOfConfig":"59"},{"size":0,"mtime":1610794371600,"results":"64","hashOfConfig":"59"},{"size":5339,"mtime":1610898212229,"results":"65","hashOfConfig":"59"},{"size":381,"mtime":1611166097561,"results":"66","hashOfConfig":"59"},{"size":2918,"mtime":1614443627462,"results":"67","hashOfConfig":"59"},{"size":1851,"mtime":1614417520423,"results":"68","hashOfConfig":"59"},{"size":572,"mtime":1614432394837,"results":"69","hashOfConfig":"59"},{"size":1213,"mtime":1612429174836,"results":"70","hashOfConfig":"59"},{"size":490,"mtime":1612086572575,"results":"71","hashOfConfig":"59"},{"size":14131,"mtime":1616249022250,"results":"72","hashOfConfig":"59"},{"size":4927,"mtime":1611988694040,"results":"73","hashOfConfig":"59"},{"size":1949,"mtime":1616232276492,"results":"74","hashOfConfig":"59"},{"size":1241,"mtime":1611210764155,"results":"75","hashOfConfig":"59"},{"size":475,"mtime":1611836008938,"results":"76","hashOfConfig":"59"},{"size":840,"mtime":1614418743941,"results":"77","hashOfConfig":"59"},{"size":739,"mtime":1610788731112,"results":"78","hashOfConfig":"59"},{"size":814,"mtime":1610788731113,"results":"79","hashOfConfig":"59"},{"size":753,"mtime":1610788731112,"results":"80","hashOfConfig":"59"},{"size":479,"mtime":1611483274995,"results":"81","hashOfConfig":"59"},{"size":920,"mtime":1610788731115,"results":"82","hashOfConfig":"59"},{"size":802,"mtime":1610788731114,"results":"83","hashOfConfig":"59"},{"size":1031,"mtime":1611491652139,"results":"84","hashOfConfig":"59"},{"size":1700,"mtime":1614428934717,"results":"85","hashOfConfig":"59"},{"size":3885,"mtime":1611209860652,"results":"86","hashOfConfig":"59"},{"size":2471,"mtime":1611847034039,"results":"87","hashOfConfig":"59"},{"size":18479,"mtime":1614429050627,"results":"88","hashOfConfig":"59"},{"size":1100,"mtime":1615204439986,"results":"89","hashOfConfig":"59"},{"size":484,"mtime":1611835645826,"results":"90","hashOfConfig":"59"},{"size":1267,"mtime":1612088461751,"results":"91","hashOfConfig":"59"},{"size":2806,"mtime":1615204442136,"results":"92","hashOfConfig":"59"},{"size":3407,"mtime":1616234938023,"results":"93","hashOfConfig":"59"},{"size":3202,"mtime":1616232275630,"results":"94","hashOfConfig":"59"},{"size":17328,"mtime":1613917710899,"results":"95","hashOfConfig":"59"},{"size":12161,"mtime":1616325616351,"results":"96","hashOfConfig":"59"},{"size":7097,"mtime":1613903117605,"results":"97","hashOfConfig":"59"},{"size":8933,"mtime":1614423430349,"results":"98","hashOfConfig":"59"},{"size":1081,"mtime":1616225245121,"results":"99","hashOfConfig":"59"},{"size":9027,"mtime":1614425123587,"results":"100","hashOfConfig":"59"},{"size":3584,"mtime":1614190054724,"results":"101","hashOfConfig":"59"},{"size":6327,"mtime":1614425122400,"results":"102","hashOfConfig":"59"},{"size":14204,"mtime":1614421940513,"results":"103","hashOfConfig":"59"},{"size":7026,"mtime":1616327462482,"results":"104","hashOfConfig":"59"},{"size":8862,"mtime":1613990955110,"results":"105","hashOfConfig":"59"},{"size":10337,"mtime":1616326388602,"results":"106","hashOfConfig":"59"},{"size":3993,"mtime":1614239510725,"results":"107","hashOfConfig":"59"},{"size":19346,"mtime":1614442143492,"results":"108","hashOfConfig":"59"},{"size":22497,"mtime":1614428510018,"results":"109","hashOfConfig":"59"},{"size":3837,"mtime":1614244748301,"results":"110","hashOfConfig":"59"},{"size":13305,"mtime":1616309170190,"results":"111","hashOfConfig":"59"},{"size":3596,"mtime":1614238520437,"results":"112","hashOfConfig":"59"},{"size":5109,"mtime":1614241461849,"results":"113","hashOfConfig":"59"},{"size":638,"mtime":1616226677436,"results":"114","hashOfConfig":"59"},{"size":2518,"mtime":1616251113387,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1xyr1rt",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"118"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"118"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"118"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"118"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"118"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"118"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"118"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"118"},"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js",[],["267","268"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js",[],["269","270"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js",["271","272"],"import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport AuthService from \"./services/auth.service\"\n\n\nimport Dashboard from './pages/dashboard';\nimport Employees from './pages/employees';\nimport Profile from './pages/profile';\nimport Leaders from './pages/leaders';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  render(){\n    return (\n\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path=\"/sign-in\" component={Login} />\n                  <Route path=\"/sign-up\" component={SignUp} />\n                  <Route path='/dashboard'>\n                    <Dashboard/>\n                  </Route>\n                  <Route path='/employees' component={Employees}/>\n                  <Route path='/leaders' component={Leaders}/>\n                  <Route path='/profile'>\n                    <Profile/>\n                  </Route>\n                </Switch>      \n    );\n  }\n}\n\nexport default App;","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js",["273","274","275","276","277","278","279","280"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    buuttonSignIn: {\r\n        width: '100%',\r\n        margin: theme.spacing(2),\r\n        backgroundColor: '#060b26', \r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: \"#000361\",\r\n            cursor: 'default'\r\n        },\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignIn(props){\r\n\r\n        const  classes  = styles();\r\n\r\n        const [email, setEmail] = React.useState(\"\")\r\n        const [password, setPassword] = React.useState(\"\")\r\n        const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n        const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n        const [redirect, setRedirect] = React.useState(null)\r\n        const [valid, setValid] = React.useState(false)\r\n        const [notify, setNotify] = \r\n        React.useState(props && props.location && props.location.state && props.location.state.notify ? \r\n            {isOpen: true, message: 'You are successfully registered', type: \"success\"}\r\n            :{ isOpen: false, message: '', type: '' })\r\n\r\n        const handleSubmit = (e)=>{\r\n            e.preventDefault()\r\n            AuthService.login(email, password)\r\n                .then(()=>{\r\n                    setRedirect(\"/dashboard\")\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 401) resMessage = \"Bad credentials\"\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                    }\r\n                    else{\r\n                        resMessage = \"Server is not available\"\r\n                    }\r\n                    setNotify({\r\n                        isOpen:true,\r\n                        message:resMessage,\r\n                        type: 'error'})\r\n                  }\r\n                );\r\n        }\r\n\r\n        const handleChangeEmail = (e)=>{\r\n            setEmail(e.target.value)\r\n        }\r\n        \r\n        const handleChangePassword = (e) =>{\r\n            setPassword(e.target.value)\r\n        }\r\n\r\n        if (redirect){\r\n            return(\r\n            <div>\r\n                {/* <Switch>\r\n                <Route exact path='/dashboard'>\r\n                    <Dashboard/>\r\n                  </Route>\r\n                  <Route path='/profile'>\r\n                    <Profile/>\r\n                  </Route>\r\n                  </Switch> */}\r\n                 <Redirect to={redirect}/>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner-singin\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid  container justify=\"center\">\r\n                        <Grid item>\r\n                            <TextField required  \r\n                            label=\"Email\" \r\n                            style={{width: '100%', color: 'red'}}\r\n                                margin=\"normal\" \r\n                                onChange={handleChangeEmail}\r\n                                helperText={emailErrMessage}/>\r\n                            <TextField required  label=\"Password\" style={{width: '100%'}} type=\"password\"\r\n                                margin=\"normal\" onChange={handleChangePassword}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container  justify=\"center\" md={12}>\r\n                        {/* <Link to={\"/dashboard\"} variant=\"body2\"> */}\r\n                            <Button className={classes.buuttonSignIn} variant=\"contained\" type=\"submit\">Sign In</Button>    \r\n                        {/* </Link> */}\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        {/* <Grid item>\r\n                                <Link to={\"/sign-in\"} variant=\"body2\">\r\n                                    <Typography variant=\"caption\">\r\n                                        Forgot password?\r\n                                    </Typography>\r\n                                </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link to={\"/sign-up\"} variant=\"body2\" style={{color: '#060b26'}}>\r\n\r\n                                    <Typography variant=\"caption\" >\r\n                                        Don't have an account? Sign up.\r\n                                    </Typography>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js",["281","282","283","284","285"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, InputLabel, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { SubdirectoryArrowLeftRounded } from \"@material-ui/icons\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n    //   margin: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    signUpButton:{\r\n        width: '100%',\r\n        backgroundColor: '#060b26', \r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: \"#000361\",\r\n            cursor: 'default'\r\n        },\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [redirect, setRedirect] = React.useState('');\r\n\r\n    const [fullName, setFullName] = React.useState(null);\r\n    const [email, setEmail] = React.useState(null);\r\n    const [password, setPassword] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [position, setPosition] = React.useState(null);\r\n    const [role, setRole] = React.useState(null);\r\n\r\n    const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n    const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n    const [valid, setValid] = React.useState(false)\r\n    const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const emailValidate = (emailValue) => {\r\n        let err = \"\"\r\n        if ((/$^|.+@.+..+/).test(emailValue)){\r\n            err = \"\"\r\n            setValid(true)\r\n        }\r\n        else{\r\n            err=\"Email is no valid\"\r\n            setValid(false)\r\n        }\r\n        setEmailErrMessage(err)\r\n    }\r\n\r\n    const passwordValidate = (passwordValue) => {\r\n        let err = \"\"\r\n        if (passwordValue.length >= 6 || passwordValue.length < 1){\r\n            err = \"\"\r\n            setValid(true) \r\n        }\r\n        else{\r\n            err = \"Password should consist more than 6 symbols\"\r\n            setValid(false)\r\n        }   \r\n        setPasswordErrMessage(err)\r\n    }\r\n\r\n\r\n    const handleFullNameChange = (event) => {\r\n        setFullName(event.target.value)\r\n    }\r\n\r\n    const handlePositionChange = (event) => {\r\n        setPosition(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event) =>{\r\n        emailValidate(event.target.value)\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) =>{\r\n        passwordValidate(event.target.value)\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleDepartmentChange = (event)=>{\r\n        setDepartment(event.target.value)\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n      setRole(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(valid){\r\n            AuthService.register(\r\n                email,\r\n                password,\r\n                fullName,\r\n                department,\r\n                position,\r\n                role\r\n            )\r\n            .then((response)=>{\r\n                    if (role === 'employee') setRedirect(\"/leaders\")\r\n                    else setRedirect(\"/dashboard\")\r\n                    // console.log(response)\r\n\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                        else resMessage = error.response.data.message\r\n                    }\r\n                    else resMessage=\"Server is not available\"\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: resMessage,\r\n                        type: \"error\"\r\n                    })\r\n                    \r\n                    setMessage(resMessage);\r\n                })\r\n        }\r\n    }\r\n    if(redirect){        \r\n        return (\r\n            <div>\r\n                <Redirect to={redirect}/>\r\n                {/* <Redirect to={{\r\n                        pathname: redirect,\r\n                        state: {\r\n                            notify: true\r\n                        }\r\n                    }}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n    <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner-singup\">\r\n\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input\r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Email\" \r\n                            margin=\"normal\"\r\n                            onChange={handleEmailChange}\r\n                            error={emailErrMessage}\r\n                            errorText=\"table\"\r\n                            errorStyle=\"relative\"/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                                \r\n                                <Controls.Input \r\n                                    required \r\n                                    margin=\"normal\"\r\n                                    className={classes.inputField}\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={handlePasswordChange}\r\n                                    error={passwordErrMessage}\r\n                                />\r\n                        </Grid>\r\n                        \r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Full name\"  \r\n                            margin=\"normal\"\r\n                            onChange={handleFullNameChange}/>\r\n                                {/* <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" /> */}\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n \r\n                            className={classes.inputField} \r\n                            label=\"Department\" \r\n                            margin=\"normal\"\r\n                            onChange={handleDepartmentChange}/>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <FormControl \r\n                                margin=\"normal\" \r\n                                className={classes.formControl}>\r\n                                    <InputLabel required>Position type</InputLabel>\r\n                                    <Select\r\n                                    value={role}\r\n                                    onChange={handleRoleChange}\r\n                                    >\r\n                                        <MenuItem value={\"leader\"}>Manager</MenuItem>\r\n                                        <MenuItem value={\"employee\"}>Employee</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            className={classes.inputField} \r\n                            label=\"Position\" \r\n                            margin=\"normal\"\r\n                            onChange={handlePositionChange}/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container md={12} >\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.signUpButton} style={{width: '100%'}} type=\"submit\">Sign Up</Button>    \r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                        <Link to={\"/sign-in\"} variant=\"body2\">\r\n                            <Typography variant=\"caption\" style={{color: '#060b26'}}>\r\n                                Already have an account? Sign in\r\n                            </Typography>\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js",["286","287","288","289","290"],"import React from 'react';\r\n\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography,\r\n  Container, \r\n  IconButton, \r\n  Button,\r\n  Box, MenuItem, Select\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    route:{\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1)\r\n    }, \r\n    title: { \r\n      flexGrow: 1\r\n    },\r\n  }))\r\n\r\nexport default function TopBar(props) {\r\n        const classes = useStyles();\r\n        const [openProfile, setOpenProfile] = React.useState(null);\r\n        const handleClickProfile = event => {\r\n          if (openProfile && openProfile.contains(event.target)) {\r\n            setOpenProfile(null);\r\n          } else {\r\n            setOpenProfile(event.currentTarget);\r\n          }\r\n        };\r\n        const handleCloseProfile = () => {\r\n          setOpenProfile(null);\r\n        };\r\n    \r\n        return(\r\n            <>\r\n                <AppBar position=\"fixed\">\r\n                        <Container fixed>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\r\n                            </IconButton>\r\n                            {/* Компонент куда записываем текст */}\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                            Time Tracker\r\n                            </Typography>\r\n                            {/* <Box mr={3}>\r\n                            <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\r\n                            </Box> */}\r\n                            {/* <Button color=\"secondary\" variant=\"contained\">Sign Up</Button> */}\r\n                            <div className={classes.manager}>\r\n                                <Button\r\n                                    style={{color:\"black\"}}\r\n                                    onClick={handleClickProfile}\r\n                                    className={classes.buttonLink}\r\n                                >\r\n                                    <Person style={{color:\"black\"}}className={classes.icons} />\r\n                                </Button>\r\n                                <Poppers\r\n                                    open={Boolean(openProfile)}\r\n                                    anchorEl={openProfile}\r\n                                    transition\r\n                                    disablePortal\r\n                                >\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                                        <MenuList role=\"menu\">\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-in\"} style={{color:\"black\"}}>\r\n                                                    Log in\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-up\"} style={{color:\"black\"}}>\r\n                                                        Sign up\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <Divider light />\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                \r\n                                            Forgot password\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                    // </Grow>\r\n                                )}\r\n                                </Poppers>\r\n                            </div>\r\n\r\n                            \r\n                        </Toolbar>\r\n                        </Container>\r\n                </AppBar>\r\n            </>\r\n        )\r\n}\r\n",["291","292"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js",["293","294"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         height: '90vh'\r\n//       }}\r\n//     >\r\n//       <h1>Home</h1>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js",["295","296","297","298"],"import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography, IconButton } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    // position: 'relative',\r\n    // top: '0px',\r\n    // left: '0px',\r\n    // position: 'fixed',\r\n    // top: '0px',\r\n    // width: '100%',\r\n    marginBottom: '-1px'\r\n  },\r\n  navMenu:{\r\n    // display: 'flex',\r\n    // justifyContent: 'space-between',\r\n    marginLeft: '56px'\r\n  },\r\n  // signOut:{\r\n  //   marginRight: '62px',\r\n  //   // marginTop: '12px',\r\n  //   display: 'flex',\r\n  //   alignItems: 'center',\r\n  //   height: '40px',\r\n  //   background: '#00a6fb',\r\n  //   color: 'black'\r\n  // }\r\n\r\n  exitIcon: {\r\n    fontSize: '32px',\r\n    '&:hover': {\r\n      color: \"#f50057\",\r\n      // cursor: 'default'\r\n  }\r\n  }\r\n}));\r\n\r\nconst handleLogOut = e =>{\r\n  AuthService.logout()\r\n}\r\n\r\nconst Navbar = () => {\r\n  const user = AuthService.getCurrentUser().userInfo;\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Nav  className={classes.navbar}>\r\n        <Bars />\r\n        <NavMenu className={classes.navMenu}>\r\n          {/* <div> */}\r\n          {user.userRole === 'LEADER' && \r\n            <NavLink to='/dashboard' activeStyle>\r\n              Dashboard\r\n            </NavLink>}\r\n\r\n\r\n            {user.userRole === \"LEADER\" ?\r\n                (<NavLink to='/employees' activeStyle>\r\n                  Employees\r\n                </NavLink>)\r\n                :\r\n                (<NavLink to='/leaders' activeStyle>\r\n                  Managers\r\n                </NavLink>)\r\n            }\r\n            <NavLink to='/profile' activeStyle>\r\n              Profile\r\n            </NavLink>\r\n          {/* </div> */}\r\n        </NavMenu>\r\n            {/* <Button>\r\n              <Link  to={'/sign-in'} variant=\"body2\" className={classes.signOut}>>\r\n\r\n              </Link>\r\n            </Button> */}\r\n\r\n          <div>\r\n            <Typography variant='h6' style={{color: 'white', display: 'inline-block', marginRight: '24px', fontWeight:'500', marginTop: '15px'}}>{user.email}</Typography>\r\n            <IconButton component={ Link } to=\"/sign-in\" variant=\"contained\" style={{display: 'inline-block', color: 'white', marginRight: '48px'}}>\r\n                <ExitToAppOutlinedIcon className={classes.exitIcon}/>\r\n            </IconButton>\r\n          </div>\r\n          {/* <Link to={'/sign-in'} variant=\"body2\" className={classes.signOut}>\r\n              <Button variant=\"contained\" color=\"primary\"  onClick={handleLogOut}>Sign Out</Button>   \r\n          </Link> */}\r\n\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js",["299"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DashboardEfficiency from '../components/Dashboard/dashboardEfficiency'\r\nimport Sites from '../components/Dashboard/Sites'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  const user = AuthService.getCurrentUser();\r\n  if(user)\r\n  {\r\n      return (\r\n      <>\r\n      <Navbar/>\r\n      <DashboardEfficiency/>\r\n      </>\r\n    );\r\n  }\r\n  return(\r\n    <Redirect to=\"sign-in\"/>\r\n  )\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js",["300","301"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport EmployeesComponent from './Employees/EmployeesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#333996\",\r\n      light: '#3c44b126'\r\n    },\r\n    secondary: {\r\n      main: \"#f83245\",\r\n      light: '#f8324526'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  },\r\n  overrides:{\r\n    MuiAppBar:{\r\n      root:{\r\n        transform:'translateZ(0)'\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    MuiIconButton:{\r\n      disableRipple:true\r\n    }\r\n  }\r\n})\r\n\r\nconst Employees = () => {\r\n\r\n  // const user = AuthService.getCurrentUser();\r\n\r\n\r\n  // if(user && user.userInfo.userRole === \"LEADER\"){\r\n    return (\r\n      <>\r\n      <Navbar position=\"fixed\"/>\r\n      <ThemeProvider theme={theme}>        \r\n        <EmployeesComponent/>\r\n      </ThemeProvider>\r\n      </>\r\n    );\r\n  // }\r\n  // else if (user && user.userInfo.userRole === \"EMPLOYEE\") return(<div/>)\r\n  // return (<Redirect to =\"sign-in\"/>)\r\n};\r\n\r\nexport default Employees;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js",["302","303","304","305","306"],"import React, { useState, useEffect } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, TextField} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Notification from \"../../components/employees/Notification\";\r\nimport ConfirmDialog from \"../../components/employees/ConfirmDialog\";\r\nimport Popup from \"../../components/employees/Popup\";\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport ManagerService from \"../../services/manager.service\";\r\nimport SitesAllTime from \"../../components/Dashboard/SitesAllTime\"\r\n\r\nimport WebAssetIcon from '@material-ui/icons/WebAsset';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        // padding: theme.spacing(3),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n    },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(3),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n    appBar: {\r\n        position: 'relative',\r\n      },\r\n      title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n      },\r\n    searchInput: {\r\n        width: '176px',\r\n        paddingLeft: '48px',\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(1),\r\n        // top: '60px',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        // top: '40px',\r\n        // marginTop: theme.spacing(3),\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', alignRight: false, disablePadding: true, label: 'Employee Name'},\r\n    { id: 'email', alignRight: false, disablePadding: false, label: 'Email Adress' },\r\n    { id: 'department', alignRight: false, disablePadding: false, label: 'Department'},\r\n    { id: 'position', alignRight: false, disablePadding: false, label: 'Position' },\r\n    { id: 'actions', alignRight: false, disablePadding: false, label: 'Actions' },\r\n  ];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\nfunction getComparator(order, orderBy) {\r\nreturn order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\nconst stabilizedThis = array.map((el, index) => [el, index]);\r\nstabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n});\r\nreturn stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.alignRight ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default function EmployeesComponent() {\r\n\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n\r\n    const [rows, setRows] = useState(AuthService.getCurrentUser().employees)\r\n\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [openSitesDialog, setOpenSitesDialog] = useState(false)\r\n    const [employee, setEmployee] = useState(null)\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('name');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n    \r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n\r\n      const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    \r\n    useEffect(()=>{\r\n        ManagerService.getEmployeesRest()\r\n        .then((response) =>{        \r\n            // console.log(\"ASd\",response.status)\r\n            setRows(response)\r\n        },\r\n        error =>{\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        // console.log(\"R\", rows)\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateEmployee = (employeeInfo) => {\r\n        setOpenPopup(false)\r\n        setRows(ManagerService.updateEmployeeInfo(employeeInfo))\r\n        ManagerService.updateEmployeeInfoRest(employeeInfo)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = employeeId => {\r\n\r\n        setRows(ManagerService.deleteEmployee(employeeId))\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        ManagerService.deleteEmployeeRest(employeeId)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const handleCloseSitesDialog = () => {\r\n        setOpenSitesDialog(false);\r\n    };\r\n\r\n\r\nreturn(\r\n    <div style={{paddingRight: '32px', paddingLeft:'32px'}}>\r\n        <Paper className={classes.pageContent}>\r\n            <TextField style={{width: '27%', marginLeft: '48px', marginBottom: '16px', marginTop: '16px'}} label=\"Search employee\" onChange={handleSearch}>\r\n            </TextField>\r\n            <div className={classes.root}>\r\n                <TableContainer>\r\n                <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    aria-label=\"enhanced table\"\r\n                >\r\n                    <EnhancedTableHead\r\n                        classes={classes}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onRequestSort={handleRequestSort}\r\n                        rowCount={rows.length}\r\n                    />\r\n\r\n\r\n                    <TableBody>\r\n                    {stableSort(filterFn.fn(rows), getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                        return (\r\n                            <TableRow\r\n                            hover\r\n                            role=\"checkbox\"\r\n                            tabIndex={-1}\r\n                            key={row.fullName}\r\n                            >\r\n                            <TableCell padding=\"checkbox\">\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.fullName}\r\n                            </TableCell>\r\n                            <TableCell>{row.email}</TableCell>\r\n                            <TableCell>{row.department}</TableCell>\r\n                            <TableCell>{row.position}</TableCell>\r\n                            <TableCell>\r\n\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => { openInPopup(row)}}>\r\n                                                    <InfoOutlinedIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n\r\n                                                <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => { setOpenSitesDialog(true)\r\n                                                    setEmployee(row) }}>\r\n                                                    <WebAssetIcon fontSize=\"small\" />\r\n                                                </Controls.ActionButton>\r\n\r\n                                                <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => { onDelete(row.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        );\r\n                        })}\r\n                    {/* {emptyRows > 0 && (\r\n                        <TableRow >\r\n                        <TableCell colSpan={6} />\r\n                        </TableRow>\r\n                    )} */}\r\n                    </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </div>\r\n        </Paper>\r\n        <Popup\r\n            title=\"Employee full inforamtion\"\r\n            openPopup={openPopup}\r\n            setOpenPopup={setOpenPopup}\r\n        >\r\n            <EmployeeForm\r\n                recordForEdit={recordForEdit}\r\n                updateEmployee={updateEmployee} />\r\n        </Popup>\r\n\r\n        <Notification\r\n            notify={notify}\r\n            setNotify={setNotify}\r\n        />\r\n        <ConfirmDialog\r\n            confirmDialog={confirmDialog}\r\n            setConfirmDialog={setConfirmDialog}\r\n        />\r\n        <SitesDialog open={openSitesDialog} employee={employee} onClose={handleCloseSitesDialog}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\nfunction SitesDialog(props) {\r\n\r\n    const open = props.open\r\n    const onClose = props.onClose\r\n    const employee = props.employee\r\n    \r\n    const handleClose = () => {\r\n      onClose()\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n            <SitesAllTime onMainDialogClose={handleClose} employee={employee}/>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js",["307","308","309","310","311","312","313"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport { useForm, Form } from '../../components/employees/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'MALE', title: 'Male' },\r\n    { id: 'FEMALE', title: 'Female' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    department: '',\r\n    position: '',\r\n    gender: 'male',\r\n    hireDate: new Date(),\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { updateEmployee, recordForEdit } = props\r\n    // const [userInfo, setUserInfo] = useState(Auth)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    // console.log(initialFValues)\r\n\r\n    // console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateEmployee(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={values.department}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Position\"\r\n                        name=\"position\"\r\n                        value={values.position}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    {/* <Controls.OutlinedInput\r\n                        name=\"mobile\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        // options={employeeService.getDepartmentCollection()}\r\n                        error={errors.mobile}\r\n                    /> */}\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" \r\n                            color=\"secondary\"/>\r\n                        {/* <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} /> */}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js",["314","315","316","317","318"],"const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nlet data = {\r\n    city: \"dfgdsfhtrjrjf\",\r\n    email: \"sdfsdgdfherhe@dsfgdfg\",\r\n    fullName: \"dfgdfgdf\",\r\n    gender: \"male\",\r\n    hireDate: \"2021-01-20T19:08:16.404Z\",\r\n    id: 12,\r\n    isPermanent: false,\r\n    mobile: \"3453453542\",\r\n  };\r\n  \r\n  let json = JSON.stringify(data);\r\n  let arr = [];\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    // let employees = JSON.parse(json)\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    arr.push(data)\r\n    // console.log(employees)\r\n    // console.log(arr)\r\n\r\n\r\n    // return employees.map(x => ({\r\n    //     ...x,\r\n    //     department: departments[x.departmentId - 1].title\r\n    // }))\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js",["319"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, IconButton} from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        // padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle} style={{color: 'white', backgroundColor: '#060b26'}}>\r\n                <div style={{ display: 'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1, fontWeight: '600', marginTop: '8px' }}>\r\n                        {title}\r\n                    </Typography>\r\n\r\n                    <IconButton size=\"small\" color = \"secondary\" style={{marginRight: '16px'}} onClick={()=>{setOpenPopup(false)}} >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {/* <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton> */}\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js",["320","321"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                    {/* < PermIdentityOutlinedIcon/> */}\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js",["322","323","324","325","326","327","328","329","330","331","332","333","334","335"],"import React, { useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Paper, IconButton, Icon, Button, DialogContent, Container, Typography} from \"@material-ui/core\";\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Notification from \"./employees/Notification\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Form } from './employees/useForm';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center',\r\n        backgroundColor: '#060b26',\r\n        color: 'white'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        padding: \"auto\",\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        // backgroundColor: \"#f8324526\",#060b26\r\n        // backgroundColor: \"#4aedc4\",\r\n        backgroundColor: \"whie\",\r\n        marginTop: '20px',\r\n\r\n        color: \"#060b26\",\r\n        justify:\"center\",\r\n        // '&:hover': {\r\n        //     backgroundColor: \"#00b0ff\",\r\n        //     cursor: 'default'\r\n        // },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '10rem',\r\n        }\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(3),\r\n      //   margin: theme.spacing(3),\r\n        minWidth: '30ch',\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      avatar: {\r\n          marginBottom: theme.spacing(1),\r\n          marginLeft: theme.spacing(2),\r\n          backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      inputField:{\r\n          width: '40ch',\r\n      },\r\n\r\n      settings: {\r\n        paddingLeft: theme.spacing(9),\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n      },\r\n}))\r\n\r\n\r\nChangePassword.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n  };\r\n\r\n\r\nexport default function ProfileInfo(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [userInfo, setUserInfo] = useState(AuthService.getCurrentUser().userInfo);\r\n    const [errors, setErrors] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(null);\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const genderItems = [\r\n        { id: 'MALE', title: 'male' },\r\n        { id: 'FEMALE', title: 'female' },\r\n    ]\r\n    const validateOnChange = true\r\n\r\n    const validate = (fieldValues = userInfo) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == userInfo)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserService.getUserInfo(userInfo.id)\r\n        .then((response) =>{\r\n            setUserInfo(response)\r\n        },\r\n        error =>{\r\n            console.log(\"ERROR\", error.response)\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n    \r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (value) => {\r\n      setOpen(false);\r\n      setSelectedValue(value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            UserService.updateUserInfo(userInfo)\r\n            .then(\r\n                (response) =>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                },\r\n                error =>{\r\n                    console.log(\"ERROR\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n                }\r\n            );\r\n        }\r\n    }\r\n    if (userInfo.userRole === 'LEADER'){\r\n        return(\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PersonRoundedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.settings}>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item xs={12} sm={6} md={6} >\r\n                                <Controls.Input\r\n                                    className={classes.inputField}\r\n                                    name=\"fullName\"\r\n                                    label=\"Full Name\"\r\n                                    value={userInfo.fullName}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.fullName}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input\r\n                                    disabled\r\n                                    className={classes.inputField}\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={userInfo.email}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.email}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input \r\n                                    className={classes.inputField}\r\n                                    name=\"department\" \r\n                                    label=\"Department\" \r\n                                    value={userInfo.department}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <TextField\r\n                                        className={classes.inputField}\r\n                                        label=\"Position\"\r\n                                        name=\"position\"\r\n                                        value={userInfo.position}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                </div>  \r\n            <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\", backgroundColor: 'white'}}>Change Password</Button>\r\n                    </Grid>\r\n            </Grid>\r\n            </form>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PersonRoundedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <Form onSubmit={handleSubmit}>\r\n            <div className={classes.settings} justifyContent=\"center\" justify=\"center\">\r\n\r\n                <Grid container justify=\"center\" justifyContent=\"center\">\r\n                    <Grid item xs={6}>\r\n\r\n                        <Controls.Input\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            value={userInfo.email}\r\n                            onChange={handleInputChange}\r\n                            error={errors.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        \r\n                        <Controls.Input\r\n                            label=\"Department\"\r\n                            name=\"department\"\r\n                            value={userInfo.department}\r\n                            onChange={handleInputChange}\r\n                            // error={errors.department}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            label=\"Position\"\r\n                            name=\"position\"\r\n                            value={userInfo.position}\r\n                            onChange={handleInputChange}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n\r\n                    <Controls.Input\r\n                            name=\"fullName\"\r\n                            label=\"Full Name\"\r\n                            value={userInfo.fullName}\r\n                            onChange={handleInputChange}\r\n                            error={errors.fullName}\r\n                            variant=\"outlined\"\r\n                            />\r\n\r\n                        <Controls.DatePicker\r\n                            name=\"hireDate\"\r\n                            label=\"Hire Date\"\r\n                            value={userInfo.hireDate}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <Controls.RadioGroup\r\n                            name=\"gender\"\r\n                            label=\"Gender\"\r\n                            value={userInfo.gender}\r\n                            onChange={handleInputChange}\r\n                            items={genderItems}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\"}}>Change Password</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </Form>\r\n            \r\n\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        \r\n    )}\r\n\r\n\r\n    function ChangePassword(props) {\r\n        const classes = useStyles()\r\n    \r\n        const onClose = props.onClose\r\n        const selectedValue = props.selectedValue\r\n        const open = props.open\r\n        const userEmail = props.userEmail;\r\n    \r\n        const [errMessageNew, setErrMessageNew] = useState(\"\") \r\n        const [errMessageConfirm, setErrMessageConfirm] = useState(\"\") \r\n        const [newPassword, setNewPassword] = useState(\"\") \r\n        const [password, setPassword] = useState(\"\")\r\n        const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n      \r\n        const handleClose = () => {\r\n          onClose(selectedValue);\r\n        };\r\n      \r\n        const handleInputNewPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value.length < 6 ) \r\n                setErrMessageNew(\"the minimum password length must be 6\")\r\n            else {\r\n                setErrMessageNew(\"\")\r\n                setNewPassword(value)\r\n            }\r\n        }\r\n        const handleInputConfirmPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value !== newPassword) setErrMessageConfirm(\"Passwords do not match\")\r\n            else setErrMessageConfirm(\"\")\r\n        }\r\n    \r\n        const handlePasswordSubmit = e =>{\r\n            e.preventDefault()\r\n            console.log(errMessageNew, errMessageConfirm)\r\n            const body = {\r\n                email: userEmail,\r\n                password: password,\r\n                newPassword: newPassword\r\n            }\r\n            if (!errMessageNew \r\n                && !errMessageConfirm \r\n                && password.length > 0 \r\n                && newPassword.length > 0){\r\n                UserService.updateUserPassword(body)\r\n                .then((response)=>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                    console.log(\"Response\", response.data)\r\n                }\r\n                ,\r\n                error=>{\r\n                    console.log(\"RESP\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n\r\n                }\r\n                )\r\n            }\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n          <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}><Typography variant=\"h6\">Change password</Typography></DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n    \r\n                <form onSubmit={handlePasswordSubmit}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={8} >\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            />\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}    \r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassword}\r\n                            error={errMessageNew}\r\n                            variant=\"outlined\"/>   \r\n                        <Controls.Input   \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Confirm new password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputConfirmPassword}\r\n                            error={errMessageConfirm}\r\n                            variant=\"outlined\"/>  \r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\" \r\n                            style={{width:\"50%\", marginTop: \"8px\"}} \r\n                            onClick={handleClose}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n    \r\n            </DialogContent>\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js",["336"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\nclass User{\r\n\r\n\r\n    getUserInfo(userId){\r\n        return axios.get(API_URL + \"/getUserInfo\",{ \r\n                                                    params:{userId:userId},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                  })\r\n        .then(response =>{\r\n            if (response.data.id){\r\n                let user = JSON.parse(sessionStorage.getItem('user'))\r\n                response.data.token = user.userInfo.token;\r\n                user.userInfo = response.data\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n            }\r\n            return response.data\r\n        })\r\n    }\r\n\r\n    updateUserInfo(newUserInfo) {\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        user.userInfo = newUserInfo\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        console.log(\"USER\",user)\r\n\r\n        return axios.post(API_URL + \"/update/info\", newUserInfo, this.config())\r\n        .then(response => {\r\n            return response.data})\r\n    }\r\n\r\n    updateUserPassword(body){\r\n        return axios.post(API_URL + \"/update/password\", body, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new User()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js",["337","338"],"// import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8090/user\"\r\n\r\n\r\nclass Manager{\r\n\r\n    getEmployeesRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getEmployees\",{ \r\n                                                    params:{userId:user.userInfo.id},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n            .then(response =>{\r\n                    user.employees = response.data\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                    return response.data}\r\n            )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n\r\n    updateEmployeeInfoRest(employeeInfo){    \r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n    \r\n    deleteEmployeeRest(employeeId){\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n\r\n\r\n    getEmployeeInfoFromSessionStorage(employeeId){\r\n        \r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let employee of user.employees){\r\n            // console.log(\"EM\", employee)\r\n            if (employee.id == employeeId) {\r\n                // console.log('LLKL')\r\n                return employee\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Manager()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js",["339","340"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8090/user\"\r\n\r\n\r\nclass EmployeeService{\r\n\r\n    getAllManagersRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getAllManagers\",{headers: {Authorization: \"Bearer \"+ this.getToken()}})\r\n                .then(response =>{\r\n                        user.managers = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    getManagerRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getManager\",{ \r\n                                                        params:{userId:user.userInfo.id},\r\n                                                        headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n                .then(response =>{\r\n                        user.userManager = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    chooseManagerRest(manager){\r\n         let user = AuthService.getCurrentUser();\r\n         user.userManager = manager;\r\n         sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n         let body = {\r\n             \"userId\": user.userInfo.id,\r\n             \"managerId\": manager.id\r\n         }\r\n\r\n         return axios.post(API_URL + \"/addManager\", body, this.config())\r\n         .then((response) => {return this.buildNotification(response)},\r\n            (error) => {return this.buildErrorNotification(error)})\r\n    }\r\n\r\n    deleteManagerRest(){\r\n        let user = AuthService.getCurrentUser();\r\n        user.userManager = null;\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        let body = {\r\n            \"userId\": user.userInfo.id,\r\n        }\r\n\r\n        return axios.post(API_URL + \"/deleteManager\", body, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    getUserManger(){\r\n        return JSON.parse(sessionStorage.getItem(\"user\")).userManager\r\n    }\r\n\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js",["341","342","343","344","345","346","347"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Typography, TextField} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\n\r\nimport Notification from \"../components/employees/Notification\";\r\nimport ConfirmDialog from \"../components/employees/ConfirmDialog\";\r\nimport Controls from \"../components/employees/controls/Controls\";\r\nimport useTable from \"../components/employees/useTable\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport EmployeeService from \"../services/employee.service\";\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n    },\r\n    searchInput: {\r\n        width: '176px',\r\n        paddingLeft: '48px',\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        width: '100%',\r\n        position: 'absolute',\r\n      },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(3),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n}))\r\n\r\n\r\n\r\nconst headCells = [\r\n    { id: 'email', alignRight: false, disablePadding: true, label: 'Email Adress' },\r\n    { id: 'fullName', alignRight: false, disablePadding: false, label: 'Manager Name'},\r\n    { id: 'department', alignRight: false, disablePadding: false, label: 'Department'},\r\n    { id: 'position', alignRight: false, disablePadding: false, label: 'Position' },\r\n    { id: 'action', alignRight: false, disablePadding: false, label: 'Action' },\r\n  ];\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.alignRight ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nexport default function LeadersComponent() {\r\n\r\n    const [rows, setRows] = useState(AuthService.getCurrentUser().managers)\r\n\r\n    const classes = useStyles();\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [userManager, setUserManager ]=useState(AuthService.getCurrentUser().userManager)\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('name');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(rows, headCells, filterFn);\r\n\r\n\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n    \r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        EmployeeService.getManagerRest()\r\n        .then((response) =>{\r\n            setUserManager(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n\r\n        EmployeeService.getAllManagersRest()\r\n        .then((response) =>{\r\n            setRows(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.email.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const chooseManager = (item) => {\r\n        setUserManager(item)\r\n        EmployeeService.chooseManagerRest(item)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const deleteManager = () => {\r\n        setUserManager(null)\r\n        EmployeeService.deleteManagerRest()\r\n        .then((response) => {\r\n            setNotify(response)})\r\n\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    if(userManager){\r\n        return(\r\n            <>\r\n            <Paper className={classes.pageContent}>\r\n            <Typography style={{paddingLeft: '64px', paddingTop: '24px', paddingBottom: '24px'}} variant=\"h4\">Your manager</Typography>\r\n\r\n                <div className={classes.root}>\r\n                    <TableContainer>\r\n\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell padding=\"checkbox\"></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Email</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Full name</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Department</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Position</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Action</Typography></TableCell>\r\n\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            <TableRow key={userManager.id}>\r\n                                <TableCell padding=\"checkbox\"></TableCell>\r\n                                <TableCell>{userManager.email}</TableCell>\r\n                                <TableCell>{userManager.fullName}</TableCell>\r\n                                <TableCell>{userManager.department}</TableCell>\r\n                                <TableCell>{userManager.position}</TableCell>\r\n                                \r\n                                <TableCell>\r\n                                <Controls.ActionButton\r\n                                                color=\"secondary\"\r\n                                                onClick={() => {\r\n                                                    setConfirmDialog({\r\n                                                        isOpen: true,\r\n                                                        title: 'Are you sure to delete this record?',\r\n                                                        onConfirm: () => {deleteManager() }\r\n                                                    })\r\n                                                }}>\r\n                                                <CloseIcon fontSize=\"small\" />\r\n                                            </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </Paper>\r\n\r\n            {/* <Paper className={classes.pageContent}>\r\n                <h4>Your manager</h4>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        <TableRow key={userManager.id}>\r\n                            <TableCell>{userManager.email}</TableCell>\r\n                            <TableCell>{userManager.fullName}</TableCell>\r\n                            <TableCell>{userManager.department}</TableCell>\r\n                            <TableCell>{userManager.position}</TableCell>\r\n                            \r\n                            <TableCell>\r\n                            <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => {deleteManager() }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </TblContainer>\r\n            </Paper>  */}\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            </>\r\n        )\r\n    }\r\n    else\r\n    return (\r\n        <>\r\n        <div style={{paddingRight: '32px', paddingLeft:'32px'}}>\r\n            <Paper className={classes.pageContent}>\r\n                <TextField style={{width: '27%', marginLeft: '48px', marginBottom: '16px', marginTop: '16px'}} label=\"Search employee\" onChange={handleSearch}>\r\n                </TextField>\r\n                <div className={classes.root}>\r\n                    <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                        {stableSort(filterFn.fn(rows), getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((item, index) => {\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    role=\"checkbox\"\r\n                                    tabIndex={-1}\r\n                                    key={item.fullName}\r\n                                >\r\n                                <TableCell padding=\"checkbox\">\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                    {item.email}\r\n                                </TableCell>\r\n                                <TableCell>{item.fullName}</TableCell>\r\n                                <TableCell>{item.department}</TableCell>\r\n                                <TableCell>{item.position}</TableCell>\r\n                                <TableCell>\r\n\r\n                                            <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => { chooseManager(item) }}>\r\n                                                <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                            </Controls.ActionButton>\r\n\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n\r\n\r\n\r\n\r\n            {/* <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search manager by email\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((item, index )=>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    \r\n                                    <TableCell>\r\n\r\n                                        <Controls.ActionButton\r\n                                                color=\"primary\"\r\n                                                onClick={() => { chooseManager(item) }}>\r\n                                        <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper> */}\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js",["348","349","350","351","352","353","354"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js",["355","356","357","358","359","360","361","362","363","364","365","366","367"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input, Typography, Card } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classnames from \"classnames\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\n\r\nconst useStyles =  makeStyles((theme) => ({\r\n  totalValueContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  card:{\r\n    boxShadow: \"0px 7px 20px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"20px\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  title:{\r\n    paddingTop: theme.spacing(2),\r\n    // paddingBottom: theme.spacing(2),\r\n  },\r\n  totalValue: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  bottomTypography:{\r\n    fontWeight: '600',\r\n    fontSize: '12px',\r\n    fontFamily: 'Poppins, sans-serif'\r\n  },\r\n  bottomStatsContainer:{\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n}));\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nexport default function BigStat(props) {\r\n  var { category, total, percentage} = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n\r\n  return (\r\n\r\n    \r\n    <Card className={classes.card}>\r\n        <div className={classes.title}>\r\n            <Typography style={{fontFamily: 'Poppins, sans-serif', fontWeight: '600',}} variant=\"h6\">{category}</Typography>\r\n        </div>\r\n        <div className={classes.totalValueContainer}>\r\n          <div className={classes.totalValue}>\r\n            <Typography variant=\"h4\" style={{fontFamily: 'Poppins, sans-serif', marginRight:'12px', fontWeight: '900'}}>\r\n              {minutesToHours(total.value)}\r\n            </Typography>\r\n          </div>\r\n          {(category === 'Effective' || category === 'Neutral')&& \r\n                (total.percent.profit\r\n                      ? \r\n                <div>\r\n                  <ArrowUpwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                  <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div> : \r\n                <div>\r\n                    <ArrowDownwardIcon style={{color: 'crimson'}}/>\r\n                    <Typography style={{color:\"crimson\", display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>)\r\n            }\r\n            {/* {category === 'Neutral' && \r\n                (total.percent.profit\r\n                      ? \r\n                <div style={{marginRight: '90px'}}>\r\n                  <ArrowUpwardIcon style={{marginTop: '-8px'}}/>\r\n                  <Typography style={{ display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div> : \r\n                <div>\r\n                    <ArrowDownwardIcon/>\r\n                    <Typography style={{display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>)\r\n            } */}\r\n            {(category === 'Ineffective' || category === 'Without') && \r\n                (total.percent.profit\r\n                      ? \r\n                <div >\r\n                  <ArrowUpwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                  <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div> : \r\n                <div>\r\n                    <ArrowDownwardIcon style={{color: '#00cc65'}}/>\r\n                    <Typography style={{color:\"#00cc65\", display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>)\r\n            }\r\n        </div>\r\n\r\n        <div className={classes.totalValueContainer}>\r\n          <Typography className=\"text-black-50\" style={{fontSize:'20 px', marginRight:'12px'}}>{percentage.value}%</Typography>\r\n          <div style={{marginRight: '90px'}}>\r\n            {(category === 'Effective' || category === 'Neutral') && (percentage.percent.profit ? \r\n                    (<div>\r\n                      <ArrowUpwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                          {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (<div>\r\n                      <ArrowDownwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            }\r\n            {/* {category === 'Neutral' && (percentage.percent.profit ? \r\n                    (<div>\r\n                      <ArrowUpwardIcon style={{marginTop: '-8px'}}/>\r\n                      <Typography style={{display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (<div>\r\n                      <ArrowDownwardIcon style={{ marginTop: '-8px'}}/>\r\n                      <Typography style={{display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            } */}\r\n            {(category === 'Ineffective' || category === 'Without') && (percentage.percent.profit ? \r\n                    (<div>\r\n                      <ArrowUpwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (<div>\r\n                      <ArrowDownwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            }\r\n            \r\n          </div>\r\n        </div>\r\n      </Card>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst dataA = [43,23,34,25,53,12,34,13, 23, 20, 8, 13, 27,31,37,24,28,20,10,19,16,14,19,54]\r\nconst dataB = [13,23,20,8,13,27,31,37,24,28,20,10,19,27,31,37,24,28,20,10,19,16,14,19,54]\r\nconst dataC = [11,17,15,15,21,14,14,17,22,20,15,31,9, 13, 23, 20, 8, 13, 27,31,37,24,28,20,47]\r\nconst categories = [['00:00 - 01:00'],['01:00 - 2:00'], ['02:00 - 3:00'],['03:00 - 04:00'],['04:00 - 5:00'],['05:00 - 6:00'],['06:00 - 7:00'],\r\n['07:00 - 8:00'],['08:00 - 9:00'],['09:00 - 10:00'], ['10:00 - 11.00'], ['11:00 - 12:00'], ['12:00 - 13:00'],\r\n['13:00 - 14:00'], ['14:00 - 15:00'],['15.00 - 16:00'],['16.00 - 17:00'],['17.00 - 18:00'],\r\n['18.00 - 19:00'],['19.00 - 20:00'],['20.00 - 21:00'], ['21.00 - 22:00'], ['22.00 - 23:00'],['23.00 - 00:00']]\r\n\r\n  const seriesEffectiveDay =  [{\r\n        name: 'Effective',\r\n        data: dataA.slice(8, 20)\r\n  }]\r\n      \r\n  const seriesIneffectiveDay =  [{\r\n    name: 'Ineffective',\r\n    data: dataB.slice(8, 20)\r\n  }]\r\n\r\n  const seriesNeutralDay =  [{\r\n    name: 'Neutral',\r\n    data: dataC.slice(8, 20)\r\n  }]\r\n\r\n  const optionsEffective = {\r\n    chart: {\r\n      id: 'effective',\r\n      type: 'line',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      // colors :['#80ffdb'],\r\n      // foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 800,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n      \r\n      },\r\n      toolbar:{show: false}\r\n    },\r\n\r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {enabled: false},\r\n    legend: {show: false},\r\n    xaxis: {categories: categories.slice(8,20)},\r\n\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n\r\n    \r\n    stroke: {curve: 'smooth'},\r\n    fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n              shadeIntensity: 1,\r\n              inverseColors: false,\r\n              opacityFrom: 0.45,\r\n              opacityTo: 0.05,\r\n              stops: [70, 100, 40, 20]\r\n            },\r\n        }\r\n  }\r\n  // colors: ['#d90368', '#f5cc00', '#00cc99', '#bcb8b1'],\r\n\r\n\r\n  const optionsIneffectiveDay = {\r\n      series: seriesIneffectiveDay,\r\n      colors: ['#d90368'],\r\n  }\r\n\r\n  const optionsNeutralDay = {\r\n      series: seriesNeutralDay,\r\n      colors: ['#f5cc00']\r\n  }\r\n    \r\n  const seriesEffectiveWeek =  [{\r\n    name: 'Effective',\r\n    data: [2, 6, 7, 5, 3, 2,2]\r\n  }]\r\n\r\n\r\n  const optionsEffectiveWeek = {\r\n    series: seriesEffectiveWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 10,\r\n      tickAmount: 5,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'h' },\r\n      },\r\n    },\r\n    colors :['#00cc99'],\r\n  }\r\n\r\n\r\n  const optionsEffectiveDay = {\r\n    series: seriesEffectiveDay,\r\n    xaxis: {\r\n      categories: categories.slice(8,20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n    colors :['#00cc99']\r\n\r\n  }\r\n\r\n\r\n  const seriesMix = [{\r\n    name: 'Effective',\r\n    data: dataA.slice(8, 20)\r\n  },{\r\n    name: 'Neutral',\r\n    data: dataB.slice(8, 20)\r\n  },{\r\n    name: 'Ineffective',\r\n    data: dataC.slice(8, 20)\r\n  }]\r\n\r\n  const optionsMixDay = {\r\n    series: seriesMix,\r\n    chart: {\r\n      id: 'effective',\r\n      type: 'line',\r\n      stacked: false,\r\n      height: 350,\r\n      zoom: {\r\n        enabled: false\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8,20)\r\n    },\r\n\r\n    colors :['springgreen', 'blue', 'red'],\r\n  }\r\n\r\n\r\n\r\nexport default function EffectiveLineChart(props){\r\n\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    const [effectiveType, setEffectiveType] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'Effective',\r\n          data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"effective\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        if (beginInd == 12) return\r\n\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'Effective',\r\n            data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n          }],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', newOptions, true)\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n      let optionsEffective;\r\n      let optionsNeutral;\r\n      let optionsIneffective;\r\n      let optionsMix;\r\n    \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod && effectiveType == props.effectiveType){return}\r\n\r\n      if(props.timePeriod == 2){\r\n        optionsEffective = optionsEffectiveWeek\r\n        ///!!!\r\n        optionsNeutral = optionsNeutralDay\r\n        optionsIneffective = optionsIneffectiveDay\r\n        optionsMix = optionsMixDay\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        optionsEffective = optionsEffectiveDay\r\n        ///!!!\r\n        optionsNeutral = optionsNeutralDay\r\n        optionsIneffective = optionsIneffectiveDay\r\n        optionsMix = optionsMixDay\r\n\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      if(props.effectiveType == 1){\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', optionsEffective, true)  \r\n        setEffectiveType(1)\r\n      }\r\n      else if(props.effectiveType == 2){\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', optionsNeutral, true)  \r\n        setEffectiveType(2)\r\n      }\r\n      else if(props.effectiveType == 3){\r\n        ReactApexChart.exec('effective', 'updateOptions', optionsIneffective, true)\r\n        setEffectiveType(3)  \r\n      }\r\n      // else if(props.effectiveType == 4){\r\n      //   ReactApexChart.exec('effective', 'updateOptions', optionsMix, true)\r\n      //   setEffectiveType(4)  \r\n      // }\r\n         \r\n    });\r\n    return(\r\n      <div>\r\n          {/* {effectiveType === 4 ? <Chart options={opt}></Chart>} */}\r\n          <Chart options={optionsEffective} series={seriesEffectiveDay} type=\"area\" height={370}  width={1390}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n          <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n          <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n        </div>) : (<div></div>)}\r\n\r\n      </div>\r\n    )\r\n  }","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js",["390","391"],"import { Typography} from '@material-ui/core';\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    roboto:{\r\n        fontWeight: '400',\r\n        fontSize: '14px',\r\n        fontFamily: 'Roboto, sans-serif',\r\n    },\r\n    popins:{\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    poppinsDefault:{\r\n        fontWeight: '900',\r\n        fontSize: '16px',\r\n        fontFamily: 'Poppins, sans-serif'\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport default function MuiTypography(props){\r\n    const {value, font, weight, className, style, variant} = props\r\n    const classes = styles()\r\n    if (className){\r\n        return <Typography className={className} style={style} variant={variant}>{value}</Typography>\r\n    }\r\n    if (font === 'poppins'){\r\n        return (<Typography variant={variant} className={classes.popins} style={style}>{value}</Typography>)\r\n    }\r\n    return (<Typography className={classes.roboto} style={style} variant={variant}>{value}</Typography>)\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js",["392","393","394","395","396","397","398","399","400"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst dataEffective = [121,60,143,90,41,200,100, 131, 300, 100, 57,99]\r\nconst dataNeutral =   [136,190,101,98,230,15,240, 23, 90,20,34,90]\r\nconst dataIneffective = [100,120,10,10,15,20, 11, 0,76,1.0,80,1]\r\nconst dataWithout = [200,55,104,210,100,201,0, 100, 10,99,20,33]\r\n\r\nconst dataEffectiveWeek = [121,230,240,250,130,120,140,123,243,120,86,135]\r\nconst dataNeutralWeek = [100,212,20,80,130,270,310,107,14,78,101,100]\r\nconst dataIneffectiveWeek = [20,120,150,154,76,45,13,67,72,50,61,21]\r\nconst dataWithoutWeek = [132,11,13,53,46,97,120,53,62,78,23,109]\r\n\r\n\r\nconst maxYVal = 600\r\nconst tickAmount = 5\r\n\r\nconst categories = [['Cupcake'],['Donut'], ['Eclair'],['Frozen yoghurt'],['Gingerbread'],['Honeycomb'],['Ice cream sandwich'],\r\n['Jelly Bean'],['KitKat'],['Lollipop'], ['Marshmallow'], ['Nougat']]\r\n\r\nconst series =  [\r\n  {\r\n    name: 'Ineffective',\r\n    data: dataIneffective.slice(0,6),\r\n  },\r\n  {\r\n    name: 'Neutral',\r\n    data: dataNeutral.slice(0,6)\r\n  }, \r\n  {\r\n    name: 'Effective',\r\n    data: dataEffective.slice(0,6)\r\n  }, \r\n  {\r\n    name: 'Without',\r\n    data: dataWithout.slice(0,6)\r\n  }\r\n]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'efficiencyOfEmployees',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      // stackType: '100%',\r\n    //   foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n        categories: categories.slice(0, 6),\r\n        labels: {rotate: -45}\r\n    }\r\n    ,\r\n    yaxis:{\r\n\r\n      min: 0,\r\n      max: maxYVal,\r\n      tickAmount: tickAmount,\r\n\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return minutesToHours(value) },\r\n      },\r\n    },\r\n  \r\n    fill: {\r\n      colors: ['#d90368', '#f5cc00', '#00cc99', '#bcb8b1'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\n  function computeNewOptions(beginInd, endInd, dataEffective, dataNeutral, dataIneffective, dataWithout){\r\n    return {\r\n      series: [\r\n        {\r\n          name: 'Ineffective',\r\n          data: dataIneffective.slice(beginInd, endInd + 1)\r\n        },\r\n        {\r\n        name: 'Neutral',\r\n        data: dataNeutral.slice(beginInd, endInd + 1)\r\n      },\r\n      {\r\n        name: 'Effective',\r\n        data: dataEffective.slice(beginInd, endInd + 1)\r\n      },\r\n      {\r\n        name: 'Without category',\r\n        data: dataWithout.slice(beginInd, endInd + 1)\r\n      }],\r\n      xaxis:{\r\n        categories: categories.slice(beginInd, endInd + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(6)\r\n    const catLen = categories.length\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= categories.length -1 ? newBeginInd + 6 : categories.length - 1\r\n\r\n      let dataE, dataN, dataI, dataW\r\n      if (timePeriod === 2){\r\n        dataE = dataEffectiveWeek\r\n        dataN = dataNeutralWeek\r\n        dataI = dataIneffectiveWeek\r\n        dataW = dataWithoutWeek\r\n      }\r\n      else {\r\n        dataE = dataEffective\r\n        dataN = dataNeutral\r\n        dataI = dataIneffective\r\n        dataW = dataWithout\r\n      }\r\n      const newOpt = computeNewOptions(newBeginInd, newEndInd, dataE, dataN, dataI, dataW)\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > categories.length - 1 - 6) newEndInd = categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n        \r\n        let dataE, dataN, dataI, dataW\r\n        if (timePeriod === 2){\r\n          dataE = dataEffectiveWeek\r\n          dataN = dataNeutralWeek\r\n          dataI = dataIneffectiveWeek\r\n          dataW = dataWithoutWeek\r\n        }\r\n        else {\r\n          dataE = dataEffective\r\n          dataN = dataNeutral\r\n          dataI = dataIneffective\r\n          dataW = dataWithout\r\n        }\r\n        const newOpt = computeNewOptions(newBeginInd, newEndInd, dataE, dataN, dataI, dataW)\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        const newOpt = computeNewOptions(beginInd, endInd, dataEffectiveWeek, dataNeutralWeek, dataIneffectiveWeek, dataWithoutWeek)\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        const newOpt = computeNewOptions(beginInd, endInd, dataEffective, dataNeutral, dataIneffective, dataWithout)\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          <div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>)\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js",["401","402","403","404","405","406","407","408"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst series = [54,92,181, 171]\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'efficiencyOfEmployeesSum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective', 'Without'],\r\n  fill: {\r\n    colors: ['#d90368', '#ffee32', '#00cc99', '#bcb8b1'],  \r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return minutesToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Average',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return minutesToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors:['#020202', '#020202', '#020202', '#020202']\r\n        }\r\n      },\r\n    legend: {show: false},\r\n    tooltip: {enabled: false},\r\n}\r\n\r\n\r\nconst seriesWeek = [21,100,123, 119]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\n\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\n  export default function EfficiencySumChart(props){\r\n      const [timePeriod, setTimePeriod] = React.useState(0);\r\n      React.useEffect(() => {\r\n    \r\n        if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n        else if(props.timePeriod == 2){\r\n          ReactApexChart.exec(\"efficiencyOfEmployeesSum\", 'updateOptions', optionsWeek, true) \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n\r\n        else if(props.timePeriod == 1){\r\n          ReactApexChart.exec(\"efficiencyOfEmployeesSum\", 'updateOptions', optionsDay, true)  \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n      });\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" />\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js",["409","410","411","412","413","414","415","416","417"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst dataUsing = [121,60,143,90,41,200,100, 131, 300, 100, 57,99]\r\nconst dataWaste =   [136,190,101,98,230,15,240, 23, 90,20,34,90]\r\n// const dataIneffective = [100,120,10,10,15,20, 11, 0,76,1.0,80,1]\r\n// const dataWithout = [200,55,104,210,100,201,0, 100, 10,99,20,33]\r\n\r\nconst dataUsingWeek = [121,230,240,250,130,120,140,123,243,120,86,135]\r\nconst dataWasteWeek= [100,212,20,80,130,270,310,107,14,78,101,100]\r\n// const dataIneffectiveWeek = [20,120,150,154,76,45,13,67,72,50,61,21]\r\n// const dataWithoutWeek = [132,11,13,53,46,97,120,53,62,78,23,109]\r\n\r\n\r\nconst maxYVal = 600\r\nconst tickAmount = 5\r\n\r\nconst categories = [['Bobrov Artur'],['Kuznezova Veronika'], ['Lisa Davies'],['Maria Jones'],['Mark Evans'],['Michaylov Dmitry'],['Novikova Anna'],\r\n['David Smith'],['Paul Taylor'],['Popov Ilya'], ['Prokhorov Andrew'], ['Sorokin Alexandr']]\r\n\r\nconst series =  [\r\n  {\r\n    name: 'Using',\r\n    data: dataUsing.slice(0,6),\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: dataWaste.slice(0,6)\r\n  }\r\n]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usageTeam',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n        categories: categories.slice(0, 6),\r\n        labels: {rotate: -45}\r\n    }\r\n    ,\r\n    yaxis:{\r\n\r\n      min: 0,\r\n      max: maxYVal,\r\n      tickAmount: tickAmount,\r\n\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return minutesToHours(value) },\r\n      },\r\n    },\r\n    fill: {\r\n        colors: ['#e91e63', '#031d44'],\r\n        opacity: 1\r\n      },\r\n  }\r\n\r\n  function computeNewOptions(beginInd, endInd, dataUsing, dataWaste){\r\n    return {\r\n      series: [\r\n        {\r\n          name: 'Using',\r\n          data: dataUsing.slice(beginInd, endInd + 1)\r\n        },\r\n        {\r\n        name: 'Waste',\r\n        data: dataWaste.slice(beginInd, endInd + 1)\r\n      }],\r\n      xaxis:{\r\n        categories: categories.slice(beginInd, endInd + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(6)\r\n    const catLen = categories.length\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= categories.length -1 ? newBeginInd + 6 : categories.length - 1\r\n\r\n      let dataU, dataW\r\n      if (timePeriod === 2){\r\n        dataU = dataUsingWeek\r\n        dataW = dataWasteWeek\r\n      }\r\n      else {\r\n        dataU = dataUsing\r\n        dataW = dataWaste\r\n      }\r\n      const newOpt = computeNewOptions(newBeginInd, newEndInd, dataU, dataW)\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > categories.length - 1 - 6) newEndInd = categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n        \r\n        let dataU, dataW\r\n        if (timePeriod === 2){\r\n          dataU = dataUsingWeek\r\n          dataW = dataWasteWeek\r\n        }\r\n        else {\r\n          dataU = dataUsing\r\n          dataW = dataWaste\r\n        }\r\n        const newOpt = computeNewOptions(newBeginInd, newEndInd, dataU, dataW)\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        const newOpt = computeNewOptions(beginInd, endInd, dataUsingWeek, dataWasteWeek)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        const newOpt = computeNewOptions(beginInd, endInd,dataUsing, dataWaste)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          <div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>)\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js",["418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"// import React from 'react';\r\n// import Chart from 'react-apexcharts';\r\n// import ReactApexChart from 'apexcharts'\r\n// import {Button } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n// import KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n// import KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\n\r\n\r\n// const styles = makeStyles((theme) => ({\r\n//   bottomArrows:{\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     marginTop: theme.spacing(1)*-2\r\n//   }\r\n// }))\r\n\r\n\r\n\r\n// const dataUsing = [44, 50, 41, 37, 22, 13,12,25,21,27,21,34,12, 44, 50, 41, 37, 22, 13,12,25,21,27,21,34,12]\r\n// const dataWaste = [11, 5, 19, 20, 30, 41,43,30,19,21,30,16,48, 11, 5, 19, 20, 30, 41,43,30,19,21,30,16,48]\r\n// const categories = [['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n//         ['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n//         ['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00']]\r\n\r\n// const series =  [{\r\n//     name: 'using',\r\n//     data: dataUsing.slice(8, 20)\r\n//   },\r\n//   {\r\n//     name: 'waste',\r\n//     data: dataWaste.slice(8, 20)\r\n//   }]\r\n  \r\n//   const options = {\r\n//     chart: {\r\n//       id: 'usage',\r\n//       type: 'bar',\r\n//       height: 350,\r\n//       stacked: true,\r\n//       width: 50,\r\n//       foreColor: '#373d3f',\r\n//       animations: {\r\n//         enabled: true,\r\n//         easing: 'easeinout',\r\n//         speed: 800,\r\n//         animateGradually: {\r\n//             enabled: true,\r\n//             delay: 150\r\n//         },\r\n//         dynamicAnimation: {\r\n//             enabled: true,\r\n//             speed: 350\r\n//         }\r\n      \r\n//         },\r\n//         toolbar:{\r\n//             show: false\r\n//         }\r\n//     },\r\n  \r\n//     plotOptions: {\r\n//       bar: {\r\n//         borderRadius: 6,\r\n//         columnWidth: '25%',\r\n//       }\r\n//     },\r\n//     dataLabels: {\r\n//       enabled: false\r\n//     },\r\n//     legend: {\r\n//       show: false\r\n//     },\r\n//     states: {\r\n//       hover: {\r\n//           filter: {\r\n//               type: 'darken',\r\n//               value: 0.5,\r\n//           }\r\n//       },\r\n//     },\r\n//     xaxis: {\r\n//       categories: categories\r\n//     },\r\n  \r\n//     fill: {\r\n//         colors: ['#e91e63', '#031d44'],\r\n//         opacity: 1\r\n//       }\r\n    \r\n//   }\r\n\r\n\r\n//   const seriesWeek =  [{\r\n//     name: 'PRODUCT A',\r\n//     data: [44, 55, 41, 37, 22, 13,12],\r\n//   },\r\n//   {\r\n//     name: 'PRODUCT B',\r\n//     data: [16, 5, 19, 23, 38, 47,48]\r\n//   }]\r\n\r\n//   const optionsWeek = {\r\n//     series: seriesWeek,\r\n//     xaxis: {\r\n//       categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n//     },\r\n//   }\r\n\r\n//   const optionsDay = {\r\n//     series: series,\r\n//     xaxis: {\r\n//       categories: categories\r\n//     }\r\n//   }\r\n  \r\n\r\n\r\n//   function computeNewOptions(beginInd, endInd, dataUsing, dataWaste, categories){\r\n//     return {\r\n//       series: [{\r\n//           name: 'Using',\r\n//           data: dataUsing.slice(beginInd, endInd)\r\n//         }, {\r\n//           name: 'Waste',\r\n//           data: dataWaste.slice(beginInd, endInd)\r\n//         }],\r\n//         xaxis:{\r\n//           categories: categories.slice(beginInd, endInd)\r\n//         }\r\n//       }\r\n//   }\r\n\r\n\r\n//   export default function UsageByHoursChart(props){\r\n\r\n//     const classes = styles()\r\n\r\n//     const [timePeriod, setTimePeriod] = React.useState(0)\r\n//     const [beginInd, setBeginInd] = React.useState(8)\r\n//     const [endInd, setEndInd] = React.useState(20)\r\n//     const catLen = categories.length\r\n\r\n//     // const [endInd, setEndInd] = React.useState(20)\r\n\r\n//     const handleLeftClick = event => {\r\n\r\n//       if (beginInd == 0) return\r\n\r\n//       let newBeginInd = beginInd\r\n//       if (beginInd == 8){\r\n//         newBeginInd = 0\r\n//       }\r\n//       else if (beginInd == 12){\r\n//         newBeginInd = 8\r\n//       }\r\n\r\n//       const newOpt = computeNewOptions(newBeginInd, newBeginInd + 12, dataUsing, dataWaste, categories)\r\n//       console.log(\"NO\", newOpt)\r\n//       // {\r\n//       // series: [{\r\n//       //     name: 'Effective',\r\n//       //     data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }, {\r\n//       //     name: 'Neutral',\r\n//       //     data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }, {\r\n//       //     name: 'Ineffective',\r\n//       //     data: dataC.slice(newBeginInd, newBeginInd + 12)\r\n//       //   },\r\n//       //   {\r\n//       //     name: 'Without category',\r\n//       //     data: dataD.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }],\r\n//       //   xaxis:{\r\n//       //     categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }\r\n//       // }\r\n//       setBeginInd(newBeginInd)\r\n//       setEndInd(newBeginInd + 12)\r\n//       ReactApexChart.exec(\"usage\", 'updateOptions', newOpt, true)\r\n//     }\r\n\r\n//     const handleRightClick = event => {\r\n\r\n//         if (beginInd == 12) return\r\n\r\n//         let newBeginInd = beginInd\r\n//         if (beginInd == 0) newBeginInd = 8\r\n//         else if (beginInd == 8) newBeginInd = 12\r\n\r\n//         const newOptions = computeNewOptions(newBeginInd, newBeginInd + 12, dataUsing, dataWaste, categories)\r\n//         // {\r\n//         //   series: [{\r\n//         //     name: 'Effective',\r\n//         //     data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }, {\r\n//         //     name: 'Neutral',\r\n//         //     data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }, {\r\n//         //     name: 'Ineffective',\r\n//         //     data: dataC.slice(newBeginInd, newBeginInd +12)\r\n//         //   },\r\n//         //   {\r\n//         //     name: 'Without category',\r\n//         //     data: dataD.slice(newBeginInd, newBeginInd +12)\r\n//         //   }\r\n//         // ],\r\n//         //   xaxis:{\r\n//         //     categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }\r\n//         // }\r\n//         setBeginInd(newBeginInd)\r\n//         setEndInd(newBeginInd + 12)\r\n//         ReactApexChart.exec(\"usage\", 'updateOptions', newOptions, true)\r\n//     }\r\n\r\n\r\n        \r\n//       React.useEffect(() => {\r\n    \r\n//         if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n//         else if(props.timePeriod == 2){\r\n//           ReactApexChart.exec(\"usage\", 'updateOptions', optionsWeek, true) \r\n//           setTimePeriod(props.timePeriod)\r\n//         }\r\n \r\n\r\n//         else if(props.timePeriod == 1){\r\n//           ReactApexChart.exec(\"usage\", 'updateOptions', optionsDay, true)  \r\n//           setTimePeriod(props.timePeriod)\r\n//         }\r\n\r\n//       });\r\n\r\n//       return (\r\n//         <div>\r\n//           <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n\r\n\r\n//           {timePeriod === 1 && (<div className={classes.bottomArrows}>\r\n//               {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n//               {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n//           </div>)}\r\n\r\n          \r\n//           {/* {timePeriod === 2 && (<div className={classes.bottomArrows}>\r\n//               {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n//               {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n//             </div>)} */}\r\n//         </div>\r\n//       )\r\n//   }\r\n  \r\n  \r\n\r\n\r\n\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n    // marginLeft: theme.spacing(5)\r\n  }\r\n}))\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\nconst maxYVal = 600\r\nconst tickAmount = 5\r\n\r\n\r\nconst dataUsing = [0,0,0,0,0,0,0,0, 23, 20, 8, 13, 17,11,12,12 ,20,20,10,19,16,14,19,14]\r\nconst dataWaste = [0,0,0,0,0,0,0,17,14,8,10,10,11,2,11,11,4,0,12,10,0,11,14,12,14]\r\n\r\n\r\nconst categories = [['00:00','-','01:00'],['01:00','-','2:00'], ['02:00','-','3:00'],['03:00','-','04:00'],['04:00','-','5:00'],['05:00','-','6:00'],['06:00','-','7:00'],\r\n['07:00','-','8:00'],['08:00','-','9:00'],['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00'], ['22.00','-','23:00'],['23.00','-','00:00']]\r\n\r\nconst series =  [ \r\n  {\r\n    name: 'Using',\r\n    data: dataUsing.slice(8,20)\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: dataWaste.slice(8,20)\r\n  }\r\n]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usage',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 450\r\n        }\r\n      },\r\n      toolbar:{show: false}\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n    fill: {\r\n      colors: ['#e91e63', '#031d44'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\nconst seriesWeek =  [\r\n  {\r\n    name: 'Using',\r\n    data: [320, 217, 400, 423, 314, 0,0]\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: [23, 21, 79, 85, 34, 0,0]\r\n  }\r\n]\r\n  \r\n  const optionsWeek = {\r\n    series: seriesWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: maxYVal,\r\n      tickAmount: tickAmount,\r\n      labels: {\r\n        formatter: (value) => { return minutesToHours(value) },\r\n      },\r\n    },\r\n  }\r\n\r\n  const optionsDay = {\r\n    series: series,\r\n    xaxis: {\r\n      categories:  categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        formatter: (value) => { return value + 'm'  },\r\n      },\r\n    },\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n    // const [endInd, setEndInd] = React.useState(20)\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'Using',\r\n          data: dataUsing.slice(newBeginInd, newBeginInd + 12)\r\n        }, {\r\n          name: 'Waste',\r\n          data: dataWaste.slice(newBeginInd, newBeginInd + 12)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"usage\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        if (beginInd == 12) return\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'Using',\r\n            data: dataUsing.slice(newBeginInd, newBeginInd + 12)\r\n          }, {\r\n            name: 'Waste',\r\n            data: dataWaste.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        ],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', optionsWeek, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', optionsDay, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n            <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n            <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n          </div>) : (<div></div>)}\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js",["454","455","456"],"import React from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n      marginTop: theme.spacing(3),\r\n      boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })); \r\n\r\n\r\nfunction createData(name, position, department, experience, status) {\r\n  return { name, position, department, experience, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 'Software Engineer', 'Dev', '3 years 4 mounth', true),\r\n  createData('Donut', 'ML engineer', 'ML', '0 years 3 mounth', false),\r\n  createData('Eclair', 'System Analytic', 'Analytics', '1 year 3 mounth', false),\r\n  createData('Frozen yoghurt', 'Senior System Analytic', 'Analytic', '2 years 2 mouth',true),\r\n  createData('Gingerbread', 'Juniour Software Developer', 'Dev', '0 years 2 mounth', true),\r\n  createData('Honeycomb', 'Senior Software Developer', 'Dev', '5 years 3 mounth', true),\r\n  createData('Ice cream sandwich', 'HR manager', \"HR\", '3 years', true),\r\n  createData('Jelly Bean', 'Accounter', 'Bookkeeping', '2 years 7 mounth', true),\r\n  createData('KitKat', 'Manager', 'Inner Managament', '4 years 2 mounth', true),\r\n  createData('Lollipop', 'Data Scientist', 'Analytics', '1 year 5 mounth', true),\r\n  createData('Marshmallow', 'ML researcher', 'Research', '0 years 3 mounth', false),\r\n  createData('Nougat', 'Data Engineer', 'ML', '3 years 2 mounth', true),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', alignRight: false, disablePadding: true, label: 'Members' },\r\n  { id: 'position', alignRight: true, disablePadding: false, label: 'Position' },\r\n  { id: 'department', alignRight: true, disablePadding: false, label: 'Department' },\r\n  { id: 'experience', alignRight: true, disablePadding: false, label: 'Experience' },\r\n  { id: 'status', alignRight: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n\r\n  const setSubjectOfChange = props.setSubjectOfChange\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [selectedMember, setSelectedMember] = React.useState(null);\r\n\r\n  const handleCheck = (event, name) =>{\r\n        if (selectedMember === name){\r\n          setSubjectOfChange(2)\r\n          setSelectedMember(null)\r\n        }\r\n        else{\r\n          setSubjectOfChange(1)\r\n          setSelectedMember(name)\r\n        }\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedMember === row.name;\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleCheck(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.position}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                          {row.status ? <div className=\"badge badge-success h-auto\">\r\n                                            ACTIVE\r\n                                        </div>:\r\n                                            <div className=\"badge badge-danger h-auto\">\r\n                                                NOT ACTIVE\r\n                                            </div>\r\n                  }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n",["457","458"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js",["486","487","488","489","490","491","492","493","494","495","496"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst series = [310,55]\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageSum'\r\n  },\r\n  labels: ['Using', 'Waste'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n\r\n                        // fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return minutesToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return minutesToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        },\r\n    },\r\n    \r\n    legend: {show: false},\r\n    tooltip: {enabled: false}\r\n}\r\n\r\nconst seriesWeek = [323,19]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek,\r\n  plotOptions: {\r\n    pie: {\r\n        donut: {\r\n            labels: {\r\n                total: {label: 'Average'}\r\n            }\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\nconst optionsDay = {\r\n  series: series,\r\n  plotOptions: {\r\n    pie: {\r\n        donut: {\r\n            labels: {\r\n                total: {label: 'Total'}\r\n            }\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n  export default function UsageSum(props){\r\n\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n  \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsWeek, true) \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsDay, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" width={'100%'} height={'80%'}/>\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Sites.js",["497","498","499","500","501","502","503","504","505"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableFooter from  '@material-ui/core/TableFooter';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Container, Input, Paper, Typography, Select, DialogActions, Button, DialogContent, MenuItem } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ByHoursChart from './Employee/byHoursChart'\r\nimport KeyboardOutlinedIcon from '@material-ui/icons/KeyboardOutlined';\r\n\r\n\r\n// '#d90368', '#f5cc00', '#00cc99', '#bcb8b1' \r\n\r\n\r\n\r\nconst ERadio = withStyles({\r\n  root: {\r\n    '&$checked': {\r\n      color: '#00cc99',\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst NRadio = withStyles({\r\n  root: {\r\n    '&$checked': {\r\n      color: '#f5cc00',\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: '650',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    marginTop: theme.spacing(3),\r\n    boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  paperSmall:{\r\n    width: '70%',\r\n    marginBottom: theme.spacing(3),\r\n    marginTop: theme.spacing(3),\r\n    boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"20px\",\r\n  },\r\n  editIcon: {\r\n    fontSize:'10px'      \r\n  },\r\n  dialog: {\r\n    padding: theme.spacing(2),\r\n    position: 'absolute',\r\n    top: theme.spacing(5),\r\n    minWidth: '100px'\r\n  },\r\n  dialogTitle: {\r\n    textAlign: 'center',\r\n    fontWeight: '900',\r\n    backgroundColor: '#060b26',\r\n    color: 'white',\r\n    fontWeight: '600'\r\n  },\r\n  dialogContent: {\r\n    // textAlign: 'center',\r\n    margin: 'auto',\r\n    padding: \"auto\",\r\n},\r\ndialogAction: {\r\n    justifyContent: 'center'\r\n},\r\n}));\r\n\r\n\r\nfunction createDataMemberDay(resourse, duration, startTime, endTime, activity, type, keylog) {\r\n  return { \r\n    resourse: resourse, \r\n    duration: minutesToHours(duration), \r\n    startTime: startTime, \r\n    endTime: endTime, \r\n    activityRate: computeActivityRate(activity, duration),\r\n    activity: minutesToHours(activity),\r\n    type: type, \r\n    keylog: keylog\r\n    };\r\n}\r\n\r\nfunction createData(resourse, duration, activity, type) {\r\n  return { \r\n    resourse: resourse, \r\n    duration: minutesToHours(duration), \r\n    activityRate: computeActivityRate(activity, duration),\r\n    activity: minutesToHours(activity),\r\n    type: type\r\n    };\r\n}\r\n\r\n\r\nfunction computeActivityRate(activeMinutes, duration){\r\n    if (duration === 0) return \"0%\"\r\n    return Math.round(activeMinutes/duration * 100) + '%'\r\n}\r\n\r\nfunction minutesToHours(minutes){\r\n    const hours = Math.floor(minutes/60)\r\n    const min = minutes % 60\r\n    if (hours != 0){\r\n        if (min != 0) return  hours+ 'h ' + minutes%60 + 'm'\r\n        return hours+'h'\r\n    }\r\n    return minutes%60+'m'\r\n}   \r\n\r\n\r\nfunction processUrl(url){\r\n  if(url) return url.replace('https://','')\r\n  return\r\n}\r\n\r\nconst keylogs = [\r\n  'Raindrops Keep Fallin On My Head - Perry Como',\r\n  'Cras mattis consectetur purus sit amet fermentum.\\n' +\r\n  'Cras justo odio, dapibus ac facilisis in, egestas eget quam.\\n' +\r\n  'Morbi leo risus, porta ac consectetur ac, vestibulum at eros.' +\r\n  'Praesent commodo cursus magna, vel scelerisque nisl consectetur et.',\r\n  'CTRL+C CTRL+V',\r\n  'Sometheng interesting',\r\n  'вк'\r\n]\r\n\r\nconst itemsDayMember = [\r\n  createDataMemberDay('https://music.yandex.ru/home', 159, '11:31', '12:00', 130, 'neutral', keylogs[0]),\r\n  createDataMemberDay('https://spring.io/', 2, '12:11', '12:13', 1, 'effective'),\r\n  createDataMemberDay('https://www.google.com/', 22, '12:40', '13:02', 14,'neutral', keylogs[4]),\r\n  createDataMemberDay('https://spring.io/', 2, '13:11', '13:13', 1, 'effective'),\r\n  createDataMemberDay('https://www.youtube.com/', 22, '13:50', '13:51', 14,'ineffective', keylogs[3]),\r\n  createDataMemberDay('https://spring.io/', 2, '13:51', '14:13', 1, 'effective'),\r\n  createDataMemberDay('https://vk.com/feed', 22, '14:40', '14:49', 14,'ineffective', keylogs[1])\r\n];\r\n\r\nconst itemsWeekMember = [\r\n  createData('https://music.yandex.ru/home', 559,  130, 'neutral'),\r\n  createData('https://spring.io/', 534,  1, 'effective'),\r\n  createData('https://www.youtube.com/', 22, 14,'ineffective'),\r\n  createData('https://www.w3.org/', 123, 100, 'effective'),\r\n  createData('https://ru.reactjs.org/', 14, 11, 'effective'),\r\n  createData('https://angular.io/', 99, 50, 'effective'),\r\n  createData('https://vk.com/feed', 156, 140, 'ineffective')\r\n];\r\n\r\n\r\nconst itemsDayTeam = [\r\n  createData('https://www.google.com/', 145, 130, 'neutral'),\r\n  createData('https://stackoverflow.com/', 559,  530, 'effective'),\r\n  createData('https://spring.io/', 534,  320, 'effective'),\r\n  createData('https://www.youtube.com/', 22, 14,'ineffective'),\r\n  createData('https://music.yandex.ru/', 123, 100, 'neutral'),\r\n  createData('https://ru.reactjs.org/', 14, 11, 'effective'),\r\n  createData('https://angular.io/', 99, 50, 'effective'),\r\n  createData('https://vuejs.org/', 340, 298, 'effective'),\r\n  createData('https://vk.com/feed', 156, 140, 'ineffective')\r\n]\r\n\r\n\r\nconst itemsWeekTeam = [\r\n  createData('https://www.google.com/', 8845, 1130, 'neutral'),\r\n  createData('https://stackoverflow.com/', 1559,  1430, 'effective'),\r\n  createData('https://spring.io/', 4534,  1320, 'effective'),\r\n  createData('https://www.youtube.com/', 1222, 1214,'ineffective'),\r\n  createData('https://music.yandex.ru/', 2223, 1200, 'neutral'),\r\n  createData('https://ru.reactjs.org/', 124, 111, 'effective'),\r\n  createData('https://angular.io/', 2999, 1500, 'effective'),\r\n  createData('https://vuejs.org/', 340, 298, 'effective'),\r\n  createData('https://vk.com/feed', 990, 740, 'ineffective')\r\n]\r\n\r\n\r\n\r\nexport default function AcccessibleTable(props) {\r\n\r\n  const subjectOfChange = props.subjectOfChange\r\n  const timePeriod = props.timePeriod\r\n  let items\r\n\r\n  if (subjectOfChange === 1 && timePeriod === 1) items = itemsDayMember\r\n  else if (subjectOfChange === 1 && timePeriod === 2) items = itemsWeekMember\r\n  else if (subjectOfChange === 2 && timePeriod === 1) items = itemsDayTeam\r\n  else if (subjectOfChange === 2 && timePeriod === 2) items = itemsWeekTeam\r\n\r\n  const [rows, setRows] = React.useState(items)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n\r\n\r\n\r\n  //////////////////////////////////////////\r\n  const [row, setRow] = React.useState('')\r\n\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openKeylog, setOpenKeylog] = React.useState(false);\r\n  // const [resourseName, setResourseName] = React.useState(\"\");\r\n  // const [type, setType] = React.useState(\"\");\r\n  const [ind, setInd] = React.useState(0);\r\n  const classes = useStyles();\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n\r\n  React.useEffect(() => {\r\n    setRows(items);\r\n  }, [items])\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseKeylog = () => {\r\n    setOpenKeylog(false)\r\n  }\r\n\r\n  const openDialog = (row, ind) => {\r\n    setInd(ind)\r\n    // setResourseName(row.resourse)\r\n    // setType(row.type)\r\n    setOpen(true)\r\n  }\r\n\r\n  const openKeylogDialog = (row) =>{\r\n    setRow(row)\r\n    setOpenKeylog(true)\r\n  }\r\n\r\n  const updateRows = (rows, ind, newType) => {\r\n      let row = rows[ind]\r\n      row.type = newType\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        {(subjectOfChange === 1 && timePeriod === 1) &&\r\n        <div style={{display: 'flex', justifyContent: 'center', paddingLeft: '64px', paddingRight: '64px'}}>\r\n            <Paper className={classes.paper}>\r\n              {/* <Typography>Hello</Typography> */}\r\n                  <ByHoursChart/>\r\n            </Paper>\r\n        </div>\r\n        }\r\n        <div style={{display: 'flex', justifyContent: 'center', paddingLeft: '64px', paddingRight: '64px'}}>\r\n            <Paper className={timePeriod === 1 && subjectOfChange === 1 ? classes.paper : classes.paperSmall}>\r\n                <TableContainer>\r\n                <Table  className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        {/* <TableCell padding=\"checkbox\">\r\n                        </TableCell> */}\r\n                        <TableCell style={{paddingLeft:'60px'}}>\r\n                            <Typography className=\"font-weight-bold\">Web resourse</Typography>\r\n                            </TableCell>\r\n                        <TableCell align=\"right\"><Typography className=\"font-weight-bold\">Duration</Typography></TableCell>\r\n                        {timePeriod === 1 && subjectOfChange === 1 && <TableCell align=\"right\"><Typography className=\"font-weight-bold\">Start time</Typography></TableCell>}\r\n                        {timePeriod === 1 && subjectOfChange === 1 && <TableCell align=\"right\"><Typography className=\"font-weight-bold\">End time</Typography></TableCell>}\r\n                        <TableCell align=\"right\"><Typography className=\"font-weight-bold\">Activity</Typography></TableCell>\r\n                        {timePeriod === 1 && subjectOfChange === 1 && <TableCell align=\"right\"><Typography className=\"font-weight-bold\">Keylogger</Typography></TableCell>}\r\n                    </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n\r\n                    <TableBody>\r\n                    {(rowsPerPage > 0\r\n                          ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                          : rows\r\n                        ).map((row, index) => (\r\n                        <TableRow key={row.name}>\r\n                        <TableCell>\r\n                            <div>\r\n                                <IconButton className={classes.editIcon} style={{marginRight:'8px'}} onClick={()=>{openDialog(row, index)}}>\r\n                                    <CreateIcon style={{fontSize:'14px'}}/>\r\n                                </IconButton>\r\n\r\n                                {row.type === 'effective' && <a style={{color:'#00cc99'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                {row.type === 'neutral' && <a style={{color:'#f5cc00'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                {row.type === 'ineffective' && <a style={{color:'#d90368'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                {row.type === 'without' && <a style={{color:'#bcb8b1'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n\r\n                            </div>                                                         \r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n\r\n                            {row.duration}\r\n                            </TableCell>\r\n                        {timePeriod === 1 && subjectOfChange === 1 && <TableCell align=\"right\">{row.startTime}</TableCell>}\r\n                        {timePeriod === 1 && subjectOfChange === 1 && <TableCell align=\"right\">{row.endTime}</TableCell>}\r\n                          <TableCell align=\"right\">\r\n                            <Typography style={{display: 'inline-block', fontWeight:'500'}} >{row.activityRate}</Typography>\r\n                            <Typography className=\"text-black-50\" style={{fontSize:'11px'}} >{row.activity}</Typography>\r\n                          {/* {row.activity} */}\r\n                          </TableCell>\r\n\r\n                          {timePeriod === 1 && subjectOfChange === 1 && \r\n                            <TableCell align=\"right\">\r\n                              {row.keylog && \r\n                                <IconButton onClick={()=>{openKeylogDialog(row)}}>\r\n                                  <KeyboardOutlinedIcon/>\r\n                                </IconButton>\r\n                              }\r\n                            </TableCell>\r\n\r\n                          }\r\n                        </TableRow>\r\n\r\n                    ))}\r\n                {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6}/>\r\n                </TableRow>\r\n              )}\r\n                </TableBody>\r\n                </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n\r\n               <ChangeResourseType rows={rows} ind={ind} subjectOfChange={subjectOfChange} open={open} onClose={handleClose}/> \r\n               {(subjectOfChange === 1 && timePeriod === 1) && <KeyloggerDialog row={row} open={openKeylog} onClose={handleCloseKeylog}/>}\r\n\r\n       </div> \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction ChangeResourseType(props) {\r\n  const classes = useStyles()\r\n  let rows = props.rows\r\n  let ind = props.ind\r\n  const onClose = props.onClose\r\n  const open = props.open\r\n  const subjectOfChange = props.subjectOfChange\r\n\r\n  let row = rows[ind]\r\n  // let row = props.row\r\n  const resourseName = row.resourse\r\n\r\n  const [type, setType] = React.useState(row.type)\r\n  const [selectValue, setSelectValue] = React.useState('employee')\r\n\r\n  React.useEffect(() => {\r\n    setType(row.type);\r\n  }, [row.type])\r\n\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setType(row.type)\r\n    setSelectValue('team')\r\n  };\r\n\r\n  const handleSave = () =>{\r\n    handleClose()\r\n    rows.map(item => {if (item.resourse === row.resourse) item.type = type})\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    \r\n  <div>\r\n    <Dialog onClose={handleClose} fullWidth maxWidth='sm' aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n      <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}><h5 style={{fontWeight: '700'}}>{processUrl(resourseName)}</h5></DialogTitle>\r\n      <DialogContent className={classes.dialogContent}>\r\n\r\n            <Container style={{ display: 'flex', flexDirection:'row', justifyContent: 'center'}}>\r\n                {subjectOfChange == 1 && \r\n                <div style={{width: '56px', marginRight: '96px', marginTop:'6px'}}>\r\n                  <Select\r\n                        value={selectValue}\r\n                        onChange={e => setSelectValue(e.target.value)}\r\n                        input={\r\n                          <Input\r\n                            disableUnderline\r\n                            classes={{ input: classes.selectInput }}\r\n                          />\r\n                        }\r\n                      >\r\n                    <MenuItem value=\"team\">All team</MenuItem>\r\n                    <MenuItem value=\"employee\">This employee</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              }\r\n                <RadioGroup  row aria-label=\"position\" value={type} onChange={handleChange}>\r\n                  <FormControlLabel value=\"effective\" control={<ERadio/>} label=\"Effective\" />\r\n                  <FormControlLabel value=\"neutral\" control={<NRadio/>} label=\"Neutral\" />\r\n                  <FormControlLabel value=\"ineffective\" control={<Radio/>} label=\"Ineffective\" />\r\n                </RadioGroup>\r\n            </Container>\r\n            <div style={{justifyContent: 'center', display: 'flex'}}>\r\n                <Button \r\n                        // type=\"submit\"\r\n                        variant=\"outlined\"\r\n                        // color=\"secondary\" \r\n                        style={{width:\"96px\", marginTop: \"24px\", marginBottom: '8px'}} \r\n                        onClick={handleSave}>\r\n                        Save\r\n                </Button>\r\n            </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction KeyloggerDialog(props){\r\n\r\n\r\n  const onClose = props.onClose\r\n  const open = props.open\r\n  const row = props.row\r\n  console.log('Row', row)\r\n  // const resourse = props.resourse\r\n  // const startTime = props.startTime\r\n  // const EndTime = props.endTime\r\n\r\n  const [scroll, setScroll] = React.useState('paper');\r\n\r\n\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n\r\n  const handleClose = () => {\r\n    onClose()\r\n  };\r\n\r\n\r\n  return(\r\n    <Dialog\r\n    fullWidth maxWidth='sm'\r\n      PaperProps={{\r\n        style: { borderRadius: 10 }\r\n      }}\r\n      open={open}\r\n      onClose={handleClose}\r\n      scroll={scroll}\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\">\r\n      <DialogTitle id=\"scroll-dialog-title\" style={{backgroundColor: '#060b26', color: 'white'}}>\r\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n        <Typography variant='h6' style={{display: 'inline-block', fontWeight: '900'}}>\r\n          {processUrl(row.resourse)} \r\n        </Typography>\r\n        <Typography style={{display: 'inline-block'}}>\r\n          {row.startTime} - {row.endTime}\r\n        </Typography>\r\n        </div>\r\n        </DialogTitle>\r\n      <DialogContent dividers={scroll === 'paper'}>\r\n        <DialogContentText\r\n          id=\"scroll-dialog-description\"\r\n          ref={descriptionElementRef}\r\n          tabIndex={-1}>\r\n            {/* sdfsdfkjlwejfwk;wf */}\r\n            {row.keylog}\r\n          {/* {[...new Array(1)]\r\n            .map(\r\n              () =>\r\n                'Cras mattis consectetur purus sit amet fermentum.\\n' +\r\n                'Cras justo odio, dapibus ac facilisis in, egestas eget quam.\\n' +\r\n                'Morbi leo risus, porta ac consectetur ac, vestibulum at eros.' +\r\n                'Praesent commodo cursus magna, vel scelerisque nisl consectetur et.'\r\n            )\r\n            .join('\\n')} */}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\SitesAllTime.js",["506","507","508","509","510","511","512","513"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableFooter from  '@material-ui/core/TableFooter';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Container, Input, Paper, Typography, TextField,  Toolbar, Fab, Select, Button, DialogContent, MenuItem, Grid } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { arrayIncludes } from '@material-ui/pickers/_helpers/utils';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { FormatColorResetRounded } from '@material-ui/icons';\r\n\r\n\r\n// '#d90368', '#f5cc00', '#00cc99', '#bcb8b1' \r\n\r\nconst ERadio = withStyles({\r\n  root: {\r\n    // color: green[400],\r\n    '&$checked': {\r\n      color: '#00cc99',\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst NRadio = withStyles({\r\n  root: {\r\n    // color: green[400],\r\n    '&$checked': {\r\n      color: '#f5cc00',\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: '650',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n    // marginTop: theme.spacing(3),\r\n    boxShadow: \"0px 2px 12px rgba(10, 1, 20, 0.3)\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  paperSmall:{\r\n    width: '70%',\r\n    // marginBottom: theme.spacing(3),\r\n    // marginTop: theme.spacing(3),\r\n    // boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n    // borderRadius: \"20px\",\r\n  },\r\n  appBar:{\r\n    background: '#060b26',\r\n    position: 'relative',\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  editIcon: {\r\n    fontSize:'10px'      \r\n  },\r\n  dialog: {\r\n    padding: theme.spacing(2),\r\n    position: 'absolute',\r\n    top: theme.spacing(5),\r\n    minWidth: '100px'\r\n  },\r\n  dialogTitle: {\r\n    textAlign: 'center',\r\n    fontWeight: '900',\r\n    backgroundColor: '#060b26',\r\n    color: 'white'\r\n  },\r\n  dialogContent: {\r\n    // textAlign: 'center',\r\n    margin: 'auto',\r\n    padding: \"auto\",\r\n},\r\ndialogAction: {\r\n    justifyContent: 'center'\r\n},\r\n}));\r\n\r\n\r\nfunction createData(resourse, type) {\r\n  return { \r\n        resourse: resourse, \r\n        type: type\r\n    };\r\n}\r\n\r\n\r\nfunction processUrl(url){\r\n    return url.replace('https://','')\r\n}\r\n\r\nfunction onlyEffective(rows){\r\n    return rows.filter(row => row.type === 'effective')\r\n}\r\nfunction onlyNeutral(rows){\r\n    return rows.filter(row => row.type === 'neutral')\r\n}\r\n\r\nfunction onlyIneffective(rows){\r\n    return rows.filter(row => row.type === 'ineffective')\r\n}\r\n\r\n\r\nconst items = [\r\n    createData(processUrl('https://stackoverflow.com'), 'effective'),\r\n    createData(processUrl('https://spring.io/'), 'effective'),\r\n    createData(processUrl('https://www.google.com/'), 'neutral'),\r\n    createData(processUrl('https://music.yandex.ru/'), 'neutral'),\r\n    createData(processUrl('https://vk.com/feed'), 'ineffective'),\r\n    createData(processUrl('https://www.youtube.com/'), 'ineffective')\r\n]\r\n\r\n\r\nexport default function AcccessibleTable(props) {\r\n\r\n\r\n    const employee = props.employee\r\n    const closeMainDialog = props.onMainDialogClose\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [rows, setRows] = React.useState(items)\r\n\r\n    const [rowsPerPageEffective, setRowsPerPageEffective] = React.useState(5);\r\n    const [pageEffective, setPageEffective] = React.useState(0);\r\n\r\n    const [rowsPerPageNeutral, setRowsPerPageNeutral] = React.useState(5);\r\n    const [pageNeutral, setPageNeutral] = React.useState(0);\r\n\r\n    const [rowsPerPageIneffective, setRowsPerPageIneffective] = React.useState(5);\r\n    const [pageIneffective, setPageIneffective] = React.useState(0);\r\n\r\n\r\n    React.useEffect(() => {\r\n        setRows(items);\r\n      }, [items])\r\n\r\n    \r\n    const [openChangeDialog, setOpenChangeDialog] = React.useState(false);\r\n    const [openAddDialog, setOpenAddDialog] = React.useState(false);\r\n\r\n    // React.useEffect(() => {\r\n    //   setOpenAddDialog(props.openAddDialog);\r\n    // }, [props.openAddDialog])\r\n\r\n    const [resourseName, setResourseName] = React.useState(\"\")\r\n\r\n\r\n  const handleChangePageEffective = (event, newPage) =>setPageEffective(newPage);\r\n  const handleChangePageNeutral = (event, newPage) => setPageNeutral(newPage);\r\n  const handleChangePageIneffective = (event, newPage) => setPageIneffective(newPage);\r\n\r\n  const handleChangeRowsPerPageEffective = (event) => {\r\n    setRowsPerPageEffective(parseInt(event.target.value, 10));\r\n    setPageEffective(0);\r\n  };\r\n  const handleChangeRowsPerPageNeutral = (event) => {\r\n    setRowsPerPageNeutral(parseInt(event.target.value, 10));\r\n    setPageNeutral(0);\r\n  };\r\n\r\n  const handleChangeRowsPerPageIneffective = (event) => {\r\n    setRowsPerPageIneffective(parseInt(event.target.value, 10));\r\n    setPageIneffective(0);\r\n  };\r\n\r\n  const handleCloseChangeDialog = (value) => {\r\n    setOpenChangeDialog(false);\r\n  };\r\n\r\n  const handleCloseAddDialog = (value) => {\r\n      setOpenAddDialog(false)\r\n  }\r\n\r\n  const openChangeTypeDialog = (resourseName) => {\r\n    setResourseName(resourseName)\r\n    setOpenChangeDialog(true)\r\n  }\r\n\r\n//   const openAddDialog = () => {\r\n//       setOpenAddDialog(true)\r\n//   }\r\n\r\n  const updateRows = (rows, ind, newType) => {\r\n      let row = rows[ind]\r\n      row.type = newType\r\n  }\r\n\r\n  const handleAddClick = (event) =>{\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar>\r\n        {/* <IconButton edge=\"start\" color=\"inherit\" onClick={()=>{closeMainDialog()}} style={{marginLeft: '112px', marginRight: '32px'}}>\r\n          <CloseIcon />\r\n        </IconButton> */}\r\n        <IconButton edge=\"start\" color=\"inherit\" onClick={()=>setOpenAddDialog(true)} style={{marginLeft: '112px', marginRight: '32px'}}>\r\n          <AddIcon style={{fontSize: '30px'}}/>\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {employee.fullName}\r\n        </Typography>\r\n        <div style={{ float: 'right', display: 'flex', marginLeft: 'auto', marginRight: '112px'}}>\r\n          {/* <IconButton size=\"small\" color = \"secondary\" onClick={()=>setOpenAddDialog(true)} >\r\n              <AddIcon style={{fontSize: '30px'}}/>\r\n          </IconButton> */}\r\n          <IconButton size=\"small\" color = \"secondary\" onClick={()=>{closeMainDialog()}} >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n\r\n    <Container>\r\n        {/* <Button  variant=\"outlined\"  style={{marginTop:'8px', marginBottom:'8px', minWidth:'150px'}}>\r\n            Add\r\n        </Button> */}\r\n        {/* <div style={{ float: 'right'}}>\r\n            <IconButton onClick={()=>setOpenAddDialog(true)}>\r\n                <AddIcon style={{fontSize: '30px'}}/>\r\n            </IconButton>\r\n        </div> */}\r\n        <Grid container spacing={4}>\r\n            <Grid item md={4} sm={6} xs={12}>\r\n                <Paper className={classes.paper}>\r\n                <TableContainer>\r\n                    <Table  className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            aria-label=\"enhanced table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{paddingLeft:'60px', justifyContent: 'space-between', display: 'flex'}}>\r\n                                        <Typography className=\"font-weight-bold\">Effective resourses</Typography>\r\n\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(rowsPerPageEffective > 0\r\n                            ? onlyEffective(rows).slice(pageEffective * rowsPerPageEffective, pageEffective * rowsPerPageEffective + rowsPerPageEffective)\r\n                            : onlyEffective(rows)\r\n                            ).map((row, index) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell>\r\n                                    <div>\r\n                                        <IconButton className={classes.editIcon} style={{marginRight:'8px'}} onClick={()=>{openChangeTypeDialog(row.resourse)}}>\r\n                                            <CreateIcon style={{fontSize:'14px'}}/>\r\n                                        </IconButton>\r\n                                        {row.type === 'effective' && <a style={{color:'#00cc99'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                        {/* {row.type === 'neutral' && <a style={{color:'#f5cc00'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                        {row.type === 'ineffective' && <a style={{color:'#d90368'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                        {row.type === 'without' && <a style={{color:'#bcb8b1'}} href={row.resourse}>{processUrl(row.resourse)}</a>} */}\r\n\r\n                                    </div>                                                         \r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {onlyEffective(rows).length > 5 && <TablePagination\r\n                        rowsPerPageOptions={[5, 25, 100]}\r\n                        component=\"div\"\r\n                        count={onlyEffective(rows).length}\r\n                        rowsPerPage={rowsPerPageEffective}\r\n                        page={pageEffective}\r\n                        onChangePage={handleChangePageEffective}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPageEffective}\r\n                    />\r\n                }\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid item md={4} sm={6} xs={12} >\r\n\r\n                <Paper className={classes.paper}>\r\n                <TableContainer>\r\n                    <Table  className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            aria-label=\"enhanced table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{paddingLeft:'60px'}}>\r\n                                        <Typography className=\"font-weight-bold\">Neutral resourses</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(rowsPerPageNeutral > 0\r\n                            ? onlyNeutral(rows).slice(pageNeutral * rowsPerPageNeutral, pageNeutral * rowsPerPageNeutral + rowsPerPageNeutral)\r\n                            : onlyNeutral(rows)\r\n                            ).map((row, index) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell>\r\n                                    <div>\r\n                                        <IconButton className={classes.editIcon} style={{marginRight:'8px'}} onClick={()=>{openChangeTypeDialog(row.resourse)}}>\r\n                                            <CreateIcon style={{fontSize:'14px'}}/>\r\n                                        </IconButton>\r\n                                        {/* {row.type === 'effective' && <a style={{color:'#00e572'}} href={row.resourse}>{processUrl(row.resourse)}</a>} */}\r\n                                        {row.type === 'neutral' && <a style={{color:'#f5cc00'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                        {/* {row.type === 'ineffective' && <a style={{color:'crimson'}} href={row.resourse}>{processUrl(row.resourse)}</a>} */}\r\n                                    </div>                                                         \r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {onlyNeutral(rows).length > 5 && <TablePagination\r\n                        rowsPerPageOptions={[5, 25, 100]}\r\n                        component=\"div\"\r\n                        count={onlyNeutral(rows).length}\r\n                        rowsPerPage={rowsPerPageNeutral}\r\n                        page={pageNeutral}\r\n                        onChangePage={handleChangePageNeutral}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPageNeutral}\r\n                    />}\r\n                </Paper>\r\n            </Grid>\r\n            \r\n            <Grid item md={4} sm={6} xs={12} >\r\n                <Paper className={classes.paper}>\r\n                <TableContainer>\r\n                    <Table  className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            aria-label=\"enhanced table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell style={{paddingLeft:'60px'}}>\r\n                                        <Typography className=\"font-weight-bold\">Ineffective resourses</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(rowsPerPageIneffective > 0\r\n                            ? onlyIneffective(rows).slice(pageIneffective * rowsPerPageIneffective, pageIneffective * rowsPerPageIneffective + rowsPerPageIneffective)\r\n                            : onlyIneffective(rows)\r\n                            ).map((row, index) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell>\r\n                                    <div>\r\n                                        <IconButton className={classes.editIcon} style={{marginRight:'8px'}} onClick={()=>{openChangeTypeDialog(row.resourse)}}>\r\n                                            <CreateIcon style={{fontSize:'14px'}}/>\r\n                                        </IconButton>\r\n                                        \r\n                                        {/* {row.type === 'effective' && <a style={{color:'#00e572'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                        {row.type === 'neutral' && <a style={{color:'steelblue'}} href={row.resourse}>{processUrl(row.resourse)}</a>} */}\r\n                                        {row.type === 'ineffective' && <a style={{color:'#d90368'}} href={row.resourse}>{processUrl(row.resourse)}</a>}\r\n                                    </div>                                                         \r\n                                </TableCell>\r\n                            </TableRow>\r\n\r\n                            ))}\r\n                            {/* {emptyRows > 0 && (\r\n                            <TableRow >\r\n                            <TableCell colSpan={6}/>\r\n                            </TableRow>\r\n                                )} */}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {onlyIneffective(rows).length > 5 &&<TablePagination\r\n                        rowsPerPageOptions={[5, 25, 100]}\r\n                        component=\"div\"\r\n                        count={onlyIneffective(rows).length}\r\n                        rowsPerPage={rowsPerPageIneffective}\r\n                        page={pageIneffective}\r\n                        onChangePage={handleChangePageIneffective}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPageIneffective}\r\n                    />\r\n                }\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n        <ChangeResourseType rows={rows} resourseName={resourseName} open={openChangeDialog} onClose={handleCloseChangeDialog}/>\r\n        <AddResourse rows={rows} open={openAddDialog} onClose={handleCloseAddDialog}></AddResourse> \r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction ChangeResourseType(props) {\r\n  const classes = useStyles()\r\n  let rows = props.rows\r\n  let resourseName = props.resourseName\r\n  const onClose = props.onClose\r\n  const open = props.open\r\n  // const subjectOfChange = props.subjectOfChange\r\n\r\n\r\n  const tmp =  rows.find(row => row.resourse === resourseName)\r\n  const row = tmp ? tmp : \"\"\r\n\r\n  const [type, setType] = React.useState(row)\r\n  const [selectValue, setSelectValue] = React.useState('employee')\r\n\r\n  React.useEffect(() => {\r\n    setType(row.type);\r\n  }, [row.type])\r\n\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setType(row.type)\r\n    setSelectValue('team')\r\n  };\r\n\r\n  const handleSave = () =>{\r\n    handleClose()\r\n    rows.map(item => {if (item.resourse === row.resourse) item.type = type})\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Dialog onClose={handleClose} fullWidth maxWidth='sm' aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n      <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}><h5 style={{fontWeight: '600'}}>{processUrl(resourseName)}</h5></DialogTitle>\r\n      <DialogContent className={classes.dialogContent}>\r\n\r\n            <Container style={{ display: 'flex', flexDirection:'row', justifyContent: 'center'}}>\r\n                \r\n                <div style={{width: '56px', marginRight: '96px', marginTop:'6px'}}>\r\n                  <Select\r\n                        value={selectValue}\r\n                        onChange={e => setSelectValue(e.target.value)}\r\n                        input={\r\n                          <Input\r\n                            disableUnderline\r\n                            classes={{ input: classes.selectInput }}\r\n                          />\r\n                        }\r\n                      >\r\n                    <MenuItem value=\"team\">All team</MenuItem>\r\n                    <MenuItem value=\"employee\">This employee</MenuItem>\r\n                  </Select>\r\n                </div>\r\n              \r\n                <RadioGroup  row aria-label=\"position\" value={type} onChange={handleChange}>\r\n                  <FormControlLabel value=\"effective\" control={<ERadio/>} label=\"Effective\" />\r\n                  <FormControlLabel value=\"neutral\" control={<NRadio/>} label=\"Neutral\" />\r\n                  <FormControlLabel value=\"ineffective\" control={<Radio/>} label=\"Ineffective\" />\r\n                </RadioGroup>\r\n            </Container>\r\n            <div style={{justifyContent: 'center', display: 'flex'}}>\r\n                <Button \r\n                        // type=\"submit\"\r\n                        variant=\"outlined\"\r\n                        // color=\"secondary\" \r\n                        style={{width:\"96px\", marginTop: \"24px\", marginBottom: '8px'}} \r\n                        onClick={handleSave}>\r\n                        Save\r\n                </Button>\r\n            </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  function AddResourse(props) {\r\n    const classes = useStyles()\r\n\r\n    const onClose = props.onClose\r\n    const open = props.open\r\n    let rows = props.rows\r\n\r\n    const [type, setType] = React.useState(\"\")\r\n    const [newResourse, setNewResourse] = React.useState(\"\")\r\n\r\n    \r\n    const handleClose = () => {\r\n        onClose()\r\n        setType(\"\")\r\n    };\r\n  \r\n    const handleSave = () =>{\r\n        if (type === 'effective' || type === 'neutral' || type === 'ineffective'){\r\n            rows.push(\r\n                {\r\n                    resourse: newResourse,\r\n                    type: type\r\n                }\r\n            )\r\n        }\r\n        onClose()\r\n        setType(\"\")\r\n    }\r\n  \r\n    const handleTypeChange = (event) => setType(event.target.value)\r\n    const handleResourseChange = (event) => setNewResourse(event.target.value)\r\n    \r\n  \r\n    return (\r\n      <div>\r\n      <Dialog onClose={handleClose} fullWidth maxWidth='sm' aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n        <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}><h5 style={{fontWeight: '600'}}>Add resourse</h5></DialogTitle>\r\n        <DialogContent className={classes.dialogContent}>\r\n  \r\n\r\n            <Container style={{ display: 'flex', flexDirection:'row', justifyContent: 'center', marginBottom: '24px'}}>\r\n                <TextField id=\"outlined-basic\" label=\"Web resourse\" style={{width: '330px'}} onChange={handleResourseChange}/>\r\n            </Container>\r\n\r\n              <Container style={{ display: 'flex', flexDirection:'row', justifyContent: 'center'}}>\r\n                  \r\n\r\n                  <RadioGroup  row aria-label=\"position\" value={type} onChange={handleTypeChange}>\r\n                    <FormControlLabel value=\"effective\" control={<ERadio/>} label=\"Effective\" />\r\n                    <FormControlLabel value=\"neutral\" control={<NRadio/>} label=\"Neutral\" />\r\n                    <FormControlLabel value=\"ineffective\" control={<Radio/>} label=\"Ineffective\" />\r\n                  </RadioGroup>\r\n              </Container>\r\n              <div style={{justifyContent: 'center', display: 'flex'}}>\r\n                  <Button \r\n                          variant=\"outlined\"\r\n                          style={{width:\"96px\", marginTop: \"24px\", marginBottom: '8px'}} \r\n                          onClick={handleSave}>\r\n                          Save\r\n                  </Button>\r\n              </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n      </div>\r\n      );\r\n    }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\byHoursChart.js",["514","515","516","517","518","519","520"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n    // marginLeft: theme.spacing(5)\r\n  }\r\n}))\r\n\r\n\r\nfunction createData(resourse, type, startTime, endTime){\r\n  return {\r\n    resourse: resourse,\r\n    type: type,\r\n    startTime: startTime,\r\n    endTime: endTime\r\n  }\r\n}\r\n\r\n\r\nconst resourses = [\r\n  createData(\"music.yandex.ru/home\", 'neutral', new Date(2021, 2, 25, 3, 10), new Date(2021, 2, 25, 3, 23)),\r\n  createData('spring.io/', 'effective', new Date(2021, 2, 25, 12, 10), new Date(2021, 2, 25, 12, 17)),\r\n  createData('www.youtube.com/', 'ineffective', new Date(2021, 2, 25, 12, 17), new Date(2021, 2, 25, 12, 20)),\r\n  createData('spring.io/', 'effective', new Date(2021, 2, 25, 12, 25), new Date(2021, 2, 25, 12, 31)),\r\n  createData('ru.reactjs.org/', 'effective', new Date(2021, 2, 25, 12, 40), new Date(2021, 2, 25, 13, 53)),\r\n  createData('vk.com/feed', 'ineffective', new Date(2021, 2, 25, 14, 10), new Date(2021, 2, 25, 16, 23)),\r\n  createData('https://www.google.com/', 'neutral', new Date(2021, 2, 25, 16, 23), new Date(2021, 2, 25, 16, 25))\r\n]\r\n\r\nconst resultSeries = () => {\r\n  let res = []\r\n  for (let ind = 0; ind < resourses.length; ind++){\r\n    const data = resourses[ind]\r\n\r\n\r\n    // '#d90368', '#f5cc00', '#00cc99', '#bcb8b1'\r\n    let color = \"\"\r\n    if (data.type === 'effective') color = '#00cc99'\r\n    else if(data.type === 'neutral') color = '#f5cc00'\r\n    else if(data.type === 'ineffective') color = '#d90368'\r\n    else color = '#bcb8b1'\r\n\r\n    res.push(\r\n      {\r\n        name: data.resourse,\r\n        data: [\r\n          {\r\n            x: 'T',\r\n            y: [\r\n              data.startTime.getTime(),\r\n              data.endTime.getTime()\r\n            ],\r\n            fillColor: color\r\n          }\r\n        ]\r\n      }\r\n    )\r\n\r\n  }\r\n  return res\r\n}\r\n\r\n\r\nconst series = resultSeries()\r\n\r\n const options = {\r\n    chart: {\r\n      height: 350,\r\n      type: 'rangeBar',\r\n      toolbar: {\r\n            show: true,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            tools: {\r\n            download: false,\r\n            selection: false,\r\n            zoom: true,\r\n            zoomin: false,\r\n            zoomout: false,\r\n            pan: false,\r\n            reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n            customIcons: []\r\n            },\r\n        },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '50%',\r\n        rangeBarGroupRows: true\r\n      }\r\n    },\r\n    colors:['#000000'],\r\n    xaxis: {\r\n      type: 'datetime'\r\n    },\r\n    legend: {\r\n      position: 'right'\r\n    },\r\n    toolbar:{\r\n        show: false\r\n      },\r\n    legend: {\r\n        show: false\r\n    },\r\n    tooltip: {\r\n        enabled: true,\r\n        fillSeriesColor: false,\r\n        shared: true,\r\n        onDatasetHover: {\r\n            highlightDataSeries: false,\r\n            followCursor: true,\r\n        },\r\n        x: {\r\n            show: true,\r\n            format: 'HH:mm',\r\n        },\r\n        y: {\r\n            formatter: function(value, series) {\r\n              return ''\r\n            }\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false,\r\n    }\r\n  }\r\n\r\n  export default function ByHoursChart(props){\r\n    \r\n    return(\r\n      <div style={{paddingTop: '16px'}}>\r\n          <Chart options={options} series={series} type=\"rangeBar\" height={150} width={'100%'}/>\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js",["521","522","523","524","525","526","527","528"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamSumChart.js",["529","530","531","532","533","534","535","536"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\nconst series = [404,55]\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageOfEmployeesSum'\r\n  },\r\n  labels: ['Using', 'Waste'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return minutesToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Average',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                            console.log(\"ASDSA\",w.globals)\r\n                          return minutesToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    tooltip:{enabled: false},\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        }\r\n      },\r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\n\r\nconst seriesWeek = [450,77]\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\nexport default function UsageOfTeamSumChart(props){\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n  \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsWeek, true) \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsDay, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n    return (\r\n      <Chart options={options} series={series} type=\"donut\" width={'100%'} height={'80%'}/>\r\n    )\r\n}\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Mock.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\date.service.js",["537"],"class DateService{\r\n    toRightFormat(date){\r\n\r\n        let year = date.getFullYear();\r\n\r\n        let month = (1 + date.getMonth()).toString();\r\n        month = month.length > 1 ? month : '0' + month;\r\n      \r\n        let day = date.getDate().toString();\r\n        day = day.length > 1 ? day : '0' + day;\r\n\r\n        return `${year}-${month}-${day}`\r\n    }\r\n\r\n    timePeriodToString(timePeriod){\r\n        switch (timePeriod){\r\n            case 1:\r\n                return 'day'\r\n            case 2:\r\n                return 'week'\r\n            case 3:\r\n                return 'week'\r\n        }\r\n    }\r\n}\r\n \r\n\r\nexport default new DateService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\efficiency.service.js",["538","539"],"import DateService from './date.service'\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\nimport ManagerService from \"./manager.service\"\r\nconst API_URL = \"http://localhost:8090/efficiency\"\r\n\r\n\r\nclass EfficiencyService{\r\n    getEfficiencyAllTeam(date, periodOfTime){\r\n\r\n        let correctDate = DateService.toRightFormat(date)\r\n        let correctTimePeriod = DateService.timePeriodToString(periodOfTime)\r\n        let user = AuthService.getCurrentUser()\r\n\r\n        return axios.get(API_URL + \"/team\", { \r\n                            params:{\r\n                                    userId: user.userInfo.id,\r\n                                    date: correctDate,\r\n                                    periodOfTime: correctTimePeriod\r\n                                },\r\n                            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                        })\r\n        .then((response) => {\r\n            // console.log('sfs', JSON.stringify(response.data))\r\n            sessionStorage.setItem(\"efficiency\", JSON.stringify(response.data))\r\n            // console.log('sfs', sessionStorage)\r\n\r\n\r\n            return response.data\r\n        },\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n        \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n\r\n    getToken(){\r\n        return AuthService.getCurrentUser().userInfo.token\r\n    }\r\n\r\n    getEfficiencyFromSessionStorage(employeeId){\r\n        \r\n        let efficiencyAllTeam =  JSON.parse(sessionStorage.getItem('efficiency'))\r\n        for (let id in efficiencyAllTeam){\r\n\r\n            if (id == employeeId){\r\n                let efficiency = efficiencyAllTeam[id]\r\n                let employeeInfo =  ManagerService.getEmployeeInfoFromSessionStorage(employeeId)\r\n\r\n                return  {\r\n                            employeeInfo: employeeInfo,\r\n                            efficiency: efficiency\r\n                        }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default new EfficiencyService()",{"ruleId":"540","replacedBy":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"540","replacedBy":"544"},{"ruleId":"542","replacedBy":"545"},{"ruleId":"546","severity":1,"message":"547","line":3,"column":27,"nodeType":"548","messageId":"549","endLine":3,"endColumn":33},{"ruleId":"546","severity":1,"message":"550","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":19},{"ruleId":"546","severity":1,"message":"551","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":26},{"ruleId":"546","severity":1,"message":"552","line":48,"column":33,"nodeType":"548","messageId":"549","endLine":48,"endColumn":51},{"ruleId":"546","severity":1,"message":"553","line":49,"column":16,"nodeType":"548","messageId":"549","endLine":49,"endColumn":34},{"ruleId":"546","severity":1,"message":"554","line":49,"column":36,"nodeType":"548","messageId":"549","endLine":49,"endColumn":57},{"ruleId":"546","severity":1,"message":"555","line":51,"column":16,"nodeType":"548","messageId":"549","endLine":51,"endColumn":21},{"ruleId":"546","severity":1,"message":"556","line":51,"column":23,"nodeType":"548","messageId":"549","endLine":51,"endColumn":31},{"ruleId":"557","severity":1,"message":"558","line":66,"column":51,"nodeType":"559","messageId":"560","endLine":66,"endColumn":53},{"ruleId":"557","severity":1,"message":"558","line":67,"column":51,"nodeType":"559","messageId":"560","endLine":67,"endColumn":53},{"ruleId":"546","severity":1,"message":"551","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":26},{"ruleId":"546","severity":1,"message":"561","line":8,"column":48,"nodeType":"548","messageId":"549","endLine":8,"endColumn":57},{"ruleId":"546","severity":1,"message":"562","line":9,"column":10,"nodeType":"548","messageId":"549","endLine":9,"endColumn":38},{"ruleId":"546","severity":1,"message":"563","line":49,"column":12,"nodeType":"548","messageId":"549","endLine":49,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":136,"column":51,"nodeType":"559","messageId":"560","endLine":136,"endColumn":53},{"ruleId":"546","severity":1,"message":"564","line":4,"column":8,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"546","severity":1,"message":"565","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":12},{"ruleId":"546","severity":1,"message":"566","line":23,"column":3,"nodeType":"548","messageId":"549","endLine":23,"endColumn":6},{"ruleId":"546","severity":1,"message":"567","line":23,"column":18,"nodeType":"548","messageId":"549","endLine":23,"endColumn":24},{"ruleId":"546","severity":1,"message":"568","line":25,"column":8,"nodeType":"548","messageId":"549","endLine":25,"endColumn":16},{"ruleId":"540","replacedBy":"569"},{"ruleId":"542","replacedBy":"570"},{"ruleId":"546","severity":1,"message":"571","line":1,"column":8,"nodeType":"548","messageId":"549","endLine":1,"endColumn":13},{"ruleId":"546","severity":1,"message":"572","line":2,"column":8,"nodeType":"548","messageId":"549","endLine":2,"endColumn":14},{"ruleId":"546","severity":1,"message":"573","line":7,"column":3,"nodeType":"548","messageId":"549","endLine":7,"endColumn":9},{"ruleId":"546","severity":1,"message":"574","line":8,"column":3,"nodeType":"548","messageId":"549","endLine":8,"endColumn":13},{"ruleId":"546","severity":1,"message":"575","line":11,"column":10,"nodeType":"548","messageId":"549","endLine":11,"endColumn":16},{"ruleId":"546","severity":1,"message":"576","line":52,"column":7,"nodeType":"548","messageId":"549","endLine":52,"endColumn":19},{"ruleId":"546","severity":1,"message":"577","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":13},{"ruleId":"546","severity":1,"message":"550","line":5,"column":8,"nodeType":"548","messageId":"549","endLine":5,"endColumn":19},{"ruleId":"546","severity":1,"message":"578","line":6,"column":10,"nodeType":"548","messageId":"549","endLine":6,"endColumn":18},{"ruleId":"546","severity":1,"message":"579","line":123,"column":38,"nodeType":"548","messageId":"549","endLine":123,"endColumn":49},{"ruleId":"546","severity":1,"message":"580","line":123,"column":51,"nodeType":"548","messageId":"549","endLine":123,"endColumn":59},{"ruleId":"546","severity":1,"message":"581","line":197,"column":13,"nodeType":"548","messageId":"549","endLine":197,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":208,"column":42,"nodeType":"559","messageId":"560","endLine":208,"endColumn":44},{"ruleId":"557","severity":1,"message":"558","line":226,"column":34,"nodeType":"559","messageId":"560","endLine":226,"endColumn":36},{"ruleId":"546","severity":1,"message":"582","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":25},{"ruleId":"546","severity":1,"message":"583","line":5,"column":13,"nodeType":"548","messageId":"549","endLine":5,"endColumn":28},{"ruleId":"546","severity":1,"message":"550","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":43,"column":25,"nodeType":"559","messageId":"560","endLine":43,"endColumn":27},{"ruleId":"557","severity":1,"message":"558","line":44,"column":53,"nodeType":"559","messageId":"560","endLine":44,"endColumn":55},{"ruleId":"546","severity":1,"message":"584","line":53,"column":9,"nodeType":"548","messageId":"549","endLine":53,"endColumn":18},{"ruleId":"585","severity":1,"message":"586","line":69,"column":8,"nodeType":"587","endLine":69,"endColumn":23,"suggestions":"588"},{"ruleId":"546","severity":1,"message":"589","line":17,"column":7,"nodeType":"548","messageId":"549","endLine":17,"endColumn":11},{"ruleId":"557","severity":1,"message":"558","line":36,"column":53,"nodeType":"559","messageId":"560","endLine":36,"endColumn":55},{"ruleId":"557","severity":1,"message":"590","line":43,"column":44,"nodeType":"559","messageId":"560","endLine":43,"endColumn":46},{"ruleId":"546","severity":1,"message":"591","line":58,"column":9,"nodeType":"548","messageId":"549","endLine":58,"endColumn":18},{"ruleId":"546","severity":1,"message":"592","line":61,"column":9,"nodeType":"548","messageId":"549","endLine":61,"endColumn":20},{"ruleId":"546","severity":1,"message":"593","line":3,"column":8,"nodeType":"548","messageId":"549","endLine":3,"endColumn":16},{"ruleId":"546","severity":1,"message":"594","line":5,"column":8,"nodeType":"548","messageId":"549","endLine":5,"endColumn":32},{"ruleId":"546","severity":1,"message":"595","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":33},{"ruleId":"546","severity":1,"message":"596","line":3,"column":8,"nodeType":"548","messageId":"549","endLine":3,"endColumn":24},{"ruleId":"546","severity":1,"message":"597","line":4,"column":8,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"546","severity":1,"message":"598","line":5,"column":10,"nodeType":"548","messageId":"549","endLine":5,"endColumn":15},{"ruleId":"546","severity":1,"message":"599","line":5,"column":29,"nodeType":"548","messageId":"549","endLine":5,"endColumn":33},{"ruleId":"546","severity":1,"message":"594","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":32},{"ruleId":"546","severity":1,"message":"600","line":16,"column":10,"nodeType":"548","messageId":"549","endLine":16,"endColumn":17},{"ruleId":"557","severity":1,"message":"558","line":114,"column":25,"nodeType":"559","messageId":"560","endLine":114,"endColumn":27},{"ruleId":"557","severity":1,"message":"558","line":115,"column":53,"nodeType":"559","messageId":"560","endLine":115,"endColumn":55},{"ruleId":"557","severity":1,"message":"558","line":127,"column":42,"nodeType":"559","messageId":"560","endLine":127,"endColumn":44},{"ruleId":"585","severity":1,"message":"601","line":138,"column":7,"nodeType":"587","endLine":138,"endColumn":9,"suggestions":"602"},{"ruleId":"557","severity":1,"message":"558","line":177,"column":50,"nodeType":"559","messageId":"560","endLine":177,"endColumn":52},{"ruleId":"546","severity":1,"message":"603","line":386,"column":21,"nodeType":"548","messageId":"549","endLine":386,"endColumn":25},{"ruleId":"546","severity":1,"message":"603","line":395,"column":21,"nodeType":"548","messageId":"549","endLine":395,"endColumn":25},{"ruleId":"557","severity":1,"message":"558","line":426,"column":50,"nodeType":"559","messageId":"560","endLine":426,"endColumn":52},{"ruleId":"546","severity":1,"message":"604","line":1,"column":10,"nodeType":"548","messageId":"549","endLine":1,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":73,"column":38,"nodeType":"559","messageId":"560","endLine":73,"endColumn":40},{"ruleId":"557","severity":1,"message":"558","line":99,"column":29,"nodeType":"559","messageId":"560","endLine":99,"endColumn":31},{"ruleId":"546","severity":1,"message":"604","line":1,"column":10,"nodeType":"548","messageId":"549","endLine":1,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":81,"column":38,"nodeType":"559","messageId":"560","endLine":81,"endColumn":40},{"ruleId":"546","severity":1,"message":"579","line":94,"column":38,"nodeType":"548","messageId":"549","endLine":94,"endColumn":49},{"ruleId":"546","severity":1,"message":"580","line":94,"column":51,"nodeType":"548","messageId":"549","endLine":94,"endColumn":59},{"ruleId":"546","severity":1,"message":"605","line":148,"column":9,"nodeType":"548","messageId":"549","endLine":148,"endColumn":21},{"ruleId":"546","severity":1,"message":"606","line":149,"column":9,"nodeType":"548","messageId":"549","endLine":149,"endColumn":16},{"ruleId":"546","severity":1,"message":"607","line":150,"column":9,"nodeType":"548","messageId":"549","endLine":150,"endColumn":22},{"ruleId":"546","severity":1,"message":"608","line":151,"column":9,"nodeType":"548","messageId":"549","endLine":151,"endColumn":37},{"ruleId":"557","severity":1,"message":"558","line":205,"column":34,"nodeType":"559","messageId":"560","endLine":205,"endColumn":36},{"ruleId":"546","severity":1,"message":"609","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":25},{"ruleId":"546","severity":1,"message":"575","line":6,"column":60,"nodeType":"548","messageId":"549","endLine":6,"endColumn":66},{"ruleId":"546","severity":1,"message":"610","line":13,"column":3,"nodeType":"548","messageId":"549","endLine":13,"endColumn":21},{"ruleId":"546","severity":1,"message":"611","line":19,"column":8,"nodeType":"548","messageId":"549","endLine":19,"endColumn":19},{"ruleId":"546","severity":1,"message":"612","line":137,"column":11,"nodeType":"548","messageId":"549","endLine":137,"endColumn":29},{"ruleId":"585","severity":1,"message":"613","line":156,"column":5,"nodeType":"614","endLine":156,"endColumn":20,"suggestions":"615"},{"ruleId":"557","severity":1,"message":"558","line":262,"column":31,"nodeType":"559","messageId":"560","endLine":262,"endColumn":33},{"ruleId":"546","severity":1,"message":"582","line":1,"column":17,"nodeType":"548","messageId":"549","endLine":1,"endColumn":25},{"ruleId":"546","severity":1,"message":"616","line":2,"column":10,"nodeType":"548","messageId":"549","endLine":2,"endColumn":14},{"ruleId":"546","severity":1,"message":"567","line":2,"column":16,"nodeType":"548","messageId":"549","endLine":2,"endColumn":22},{"ruleId":"546","severity":1,"message":"617","line":2,"column":24,"nodeType":"548","messageId":"549","endLine":2,"endColumn":32},{"ruleId":"546","severity":1,"message":"618","line":2,"column":34,"nodeType":"548","messageId":"549","endLine":2,"endColumn":39},{"ruleId":"546","severity":1,"message":"619","line":3,"column":26,"nodeType":"548","messageId":"549","endLine":3,"endColumn":42},{"ruleId":"546","severity":1,"message":"620","line":5,"column":10,"nodeType":"548","messageId":"549","endLine":5,"endColumn":18},{"ruleId":"546","severity":1,"message":"621","line":5,"column":20,"nodeType":"548","messageId":"549","endLine":5,"endColumn":23},{"ruleId":"546","severity":1,"message":"622","line":7,"column":8,"nodeType":"548","messageId":"549","endLine":7,"endColumn":18},{"ruleId":"557","severity":1,"message":"590","line":47,"column":13,"nodeType":"559","messageId":"560","endLine":47,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":48,"column":15,"nodeType":"559","messageId":"560","endLine":48,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":48,"column":40,"nodeType":"559","messageId":"625","endLine":48,"endColumn":41},{"ruleId":"546","severity":1,"message":"626","line":58,"column":7,"nodeType":"548","messageId":"549","endLine":58,"endColumn":12},{"ruleId":"546","severity":1,"message":"627","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"546","severity":1,"message":"628","line":21,"column":10,"nodeType":"548","messageId":"549","endLine":21,"endColumn":24},{"ruleId":"557","severity":1,"message":"590","line":24,"column":13,"nodeType":"559","messageId":"560","endLine":24,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":25,"column":15,"nodeType":"559","messageId":"560","endLine":25,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":25,"column":40,"nodeType":"559","messageId":"625","endLine":25,"endColumn":41},{"ruleId":"557","severity":1,"message":"558","line":238,"column":20,"nodeType":"559","messageId":"560","endLine":238,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":241,"column":20,"nodeType":"559","messageId":"560","endLine":241,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":244,"column":25,"nodeType":"559","messageId":"560","endLine":244,"endColumn":27},{"ruleId":"557","severity":1,"message":"558","line":263,"column":22,"nodeType":"559","messageId":"560","endLine":263,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":267,"column":22,"nodeType":"559","messageId":"560","endLine":267,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":268,"column":27,"nodeType":"559","messageId":"560","endLine":268,"endColumn":29},{"ruleId":"585","severity":1,"message":"629","line":284,"column":5,"nodeType":"614","endLine":284,"endColumn":20,"suggestions":"630"},{"ruleId":"557","severity":1,"message":"590","line":291,"column":22,"nodeType":"559","messageId":"560","endLine":291,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":291,"column":41,"nodeType":"559","messageId":"560","endLine":291,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":291,"column":78,"nodeType":"559","messageId":"560","endLine":291,"endColumn":80},{"ruleId":"557","severity":1,"message":"558","line":293,"column":27,"nodeType":"559","messageId":"560","endLine":293,"endColumn":29},{"ruleId":"557","severity":1,"message":"558","line":302,"column":32,"nodeType":"559","messageId":"560","endLine":302,"endColumn":34},{"ruleId":"546","severity":1,"message":"631","line":307,"column":9,"nodeType":"548","messageId":"549","endLine":307,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":312,"column":30,"nodeType":"559","messageId":"560","endLine":312,"endColumn":32},{"ruleId":"557","severity":1,"message":"558","line":316,"column":35,"nodeType":"559","messageId":"560","endLine":316,"endColumn":37},{"ruleId":"557","severity":1,"message":"558","line":320,"column":35,"nodeType":"559","messageId":"560","endLine":320,"endColumn":37},{"ruleId":"557","severity":1,"message":"558","line":334,"column":29,"nodeType":"559","messageId":"560","endLine":334,"endColumn":31},{"ruleId":"546","severity":1,"message":"561","line":6,"column":10,"nodeType":"548","messageId":"549","endLine":6,"endColumn":19},{"ruleId":"546","severity":1,"message":"632","line":28,"column":25,"nodeType":"548","messageId":"549","endLine":28,"endColumn":31},{"ruleId":"546","severity":1,"message":"627","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"590","line":24,"column":13,"nodeType":"559","messageId":"560","endLine":24,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":25,"column":15,"nodeType":"559","messageId":"560","endLine":25,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":25,"column":40,"nodeType":"559","messageId":"625","endLine":25,"endColumn":41},{"ruleId":"585","severity":1,"message":"633","line":228,"column":5,"nodeType":"614","endLine":228,"endColumn":20,"suggestions":"634"},{"ruleId":"557","severity":1,"message":"590","line":229,"column":22,"nodeType":"559","messageId":"560","endLine":229,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":229,"column":41,"nodeType":"559","messageId":"560","endLine":229,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":231,"column":32,"nodeType":"559","messageId":"560","endLine":231,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":237,"column":32,"nodeType":"559","messageId":"560","endLine":237,"endColumn":34},{"ruleId":"557","severity":1,"message":"590","line":10,"column":13,"nodeType":"559","messageId":"560","endLine":10,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":11,"column":15,"nodeType":"559","messageId":"560","endLine":11,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":11,"column":40,"nodeType":"559","messageId":"625","endLine":11,"endColumn":41},{"ruleId":"585","severity":1,"message":"635","line":109,"column":7,"nodeType":"614","endLine":109,"endColumn":22,"suggestions":"636"},{"ruleId":"557","severity":1,"message":"590","line":111,"column":24,"nodeType":"559","messageId":"560","endLine":111,"endColumn":26},{"ruleId":"557","severity":1,"message":"558","line":111,"column":43,"nodeType":"559","messageId":"560","endLine":111,"endColumn":45},{"ruleId":"557","severity":1,"message":"558","line":113,"column":34,"nodeType":"559","messageId":"560","endLine":113,"endColumn":36},{"ruleId":"557","severity":1,"message":"558","line":118,"column":34,"nodeType":"559","messageId":"560","endLine":118,"endColumn":36},{"ruleId":"546","severity":1,"message":"627","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"590","line":21,"column":13,"nodeType":"559","messageId":"560","endLine":21,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":22,"column":15,"nodeType":"559","messageId":"560","endLine":22,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":22,"column":40,"nodeType":"559","messageId":"625","endLine":22,"endColumn":41},{"ruleId":"585","severity":1,"message":"633","line":197,"column":5,"nodeType":"614","endLine":197,"endColumn":20,"suggestions":"637"},{"ruleId":"557","severity":1,"message":"590","line":198,"column":22,"nodeType":"559","messageId":"560","endLine":198,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":198,"column":41,"nodeType":"559","messageId":"560","endLine":198,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":200,"column":32,"nodeType":"559","messageId":"560","endLine":200,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":206,"column":32,"nodeType":"559","messageId":"560","endLine":206,"endColumn":34},{"ruleId":"546","severity":1,"message":"627","line":267,"column":10,"nodeType":"548","messageId":"549","endLine":267,"endColumn":14},{"ruleId":"557","severity":1,"message":"590","line":288,"column":13,"nodeType":"559","messageId":"560","endLine":288,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":289,"column":15,"nodeType":"559","messageId":"560","endLine":289,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":289,"column":40,"nodeType":"559","messageId":"625","endLine":289,"endColumn":41},{"ruleId":"557","severity":1,"message":"558","line":434,"column":20,"nodeType":"559","messageId":"560","endLine":434,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":437,"column":20,"nodeType":"559","messageId":"560","endLine":437,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":440,"column":25,"nodeType":"559","messageId":"560","endLine":440,"endColumn":27},{"ruleId":"557","severity":1,"message":"558","line":462,"column":22,"nodeType":"559","messageId":"560","endLine":462,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":465,"column":22,"nodeType":"559","messageId":"560","endLine":465,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":466,"column":27,"nodeType":"559","messageId":"560","endLine":466,"endColumn":29},{"ruleId":"585","severity":1,"message":"635","line":486,"column":5,"nodeType":"614","endLine":486,"endColumn":20,"suggestions":"638"},{"ruleId":"557","severity":1,"message":"590","line":487,"column":22,"nodeType":"559","messageId":"560","endLine":487,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":487,"column":41,"nodeType":"559","messageId":"560","endLine":487,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":489,"column":32,"nodeType":"559","messageId":"560","endLine":489,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":494,"column":32,"nodeType":"559","messageId":"560","endLine":494,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":506,"column":29,"nodeType":"559","messageId":"560","endLine":506,"endColumn":31},{"ruleId":"546","severity":1,"message":"639","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":31},{"ruleId":"557","severity":1,"message":"590","line":16,"column":13,"nodeType":"559","messageId":"560","endLine":16,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":17,"column":19,"nodeType":"559","messageId":"560","endLine":17,"endColumn":21},{"ruleId":"557","severity":1,"message":"590","line":18,"column":17,"nodeType":"559","messageId":"560","endLine":18,"endColumn":19},{"ruleId":"623","severity":1,"message":"624","line":18,"column":42,"nodeType":"559","messageId":"625","endLine":18,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":18,"column":64,"nodeType":"559","messageId":"625","endLine":18,"endColumn":65},{"ruleId":"623","severity":1,"message":"624","line":19,"column":27,"nodeType":"559","messageId":"625","endLine":19,"endColumn":28},{"ruleId":"557","severity":1,"message":"590","line":23,"column":15,"nodeType":"559","messageId":"560","endLine":23,"endColumn":17},{"ruleId":"557","severity":1,"message":"590","line":24,"column":13,"nodeType":"559","messageId":"560","endLine":24,"endColumn":15},{"ruleId":"623","severity":1,"message":"624","line":24,"column":40,"nodeType":"559","messageId":"625","endLine":24,"endColumn":41},{"ruleId":"546","severity":1,"message":"640","line":111,"column":7,"nodeType":"548","messageId":"549","endLine":111,"endColumn":17},{"ruleId":"557","severity":1,"message":"558","line":147,"column":18,"nodeType":"559","messageId":"560","endLine":147,"endColumn":20},{"ruleId":"557","severity":1,"message":"558","line":147,"column":37,"nodeType":"559","messageId":"560","endLine":147,"endColumn":39},{"ruleId":"557","severity":1,"message":"558","line":189,"column":17,"nodeType":"559","messageId":"560","endLine":189,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":195,"column":23,"nodeType":"559","messageId":"560","endLine":195,"endColumn":25},{"ruleId":"546","severity":1,"message":"641","line":213,"column":26,"nodeType":"548","messageId":"549","endLine":213,"endColumn":39},{"ruleId":"546","severity":1,"message":"642","line":214,"column":20,"nodeType":"548","messageId":"549","endLine":214,"endColumn":27},{"ruleId":"557","severity":1,"message":"590","line":218,"column":24,"nodeType":"559","messageId":"560","endLine":218,"endColumn":26},{"ruleId":"557","severity":1,"message":"558","line":218,"column":43,"nodeType":"559","messageId":"560","endLine":218,"endColumn":45},{"ruleId":"557","severity":1,"message":"558","line":218,"column":71,"nodeType":"559","messageId":"560","endLine":218,"endColumn":73},{"ruleId":"546","severity":1,"message":"598","line":12,"column":8,"nodeType":"548","messageId":"549","endLine":12,"endColumn":13},{"ruleId":"546","severity":1,"message":"579","line":99,"column":36,"nodeType":"548","messageId":"549","endLine":99,"endColumn":47},{"ruleId":"546","severity":1,"message":"580","line":99,"column":49,"nodeType":"548","messageId":"549","endLine":99,"endColumn":57},{"ruleId":"540","replacedBy":"643"},{"ruleId":"542","replacedBy":"644"},{"ruleId":"546","severity":1,"message":"627","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"590","line":27,"column":13,"nodeType":"559","messageId":"560","endLine":27,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":28,"column":19,"nodeType":"559","messageId":"560","endLine":28,"endColumn":21},{"ruleId":"557","severity":1,"message":"590","line":29,"column":17,"nodeType":"559","messageId":"560","endLine":29,"endColumn":19},{"ruleId":"623","severity":1,"message":"624","line":29,"column":42,"nodeType":"559","messageId":"625","endLine":29,"endColumn":43},{"ruleId":"623","severity":1,"message":"624","line":29,"column":64,"nodeType":"559","messageId":"625","endLine":29,"endColumn":65},{"ruleId":"623","severity":1,"message":"624","line":30,"column":27,"nodeType":"559","messageId":"625","endLine":30,"endColumn":28},{"ruleId":"557","severity":1,"message":"590","line":34,"column":15,"nodeType":"559","messageId":"560","endLine":34,"endColumn":17},{"ruleId":"557","severity":1,"message":"590","line":35,"column":13,"nodeType":"559","messageId":"560","endLine":35,"endColumn":15},{"ruleId":"623","severity":1,"message":"624","line":35,"column":40,"nodeType":"559","messageId":"625","endLine":35,"endColumn":41},{"ruleId":"546","severity":1,"message":"645","line":110,"column":7,"nodeType":"548","messageId":"549","endLine":110,"endColumn":16},{"ruleId":"546","severity":1,"message":"646","line":150,"column":9,"nodeType":"548","messageId":"549","endLine":150,"endColumn":20},{"ruleId":"557","severity":1,"message":"558","line":184,"column":40,"nodeType":"559","messageId":"560","endLine":184,"endColumn":42},{"ruleId":"557","severity":1,"message":"558","line":295,"column":20,"nodeType":"559","messageId":"560","endLine":295,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":298,"column":20,"nodeType":"559","messageId":"560","endLine":298,"endColumn":22},{"ruleId":"557","severity":1,"message":"558","line":301,"column":25,"nodeType":"559","messageId":"560","endLine":301,"endColumn":27},{"ruleId":"557","severity":1,"message":"558","line":317,"column":22,"nodeType":"559","messageId":"560","endLine":317,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":320,"column":22,"nodeType":"559","messageId":"560","endLine":320,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":321,"column":27,"nodeType":"559","messageId":"560","endLine":321,"endColumn":29},{"ruleId":"585","severity":1,"message":"647","line":334,"column":5,"nodeType":"614","endLine":334,"endColumn":20,"suggestions":"648"},{"ruleId":"557","severity":1,"message":"590","line":337,"column":22,"nodeType":"559","messageId":"560","endLine":337,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":337,"column":41,"nodeType":"559","messageId":"560","endLine":337,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":337,"column":69,"nodeType":"559","messageId":"560","endLine":337,"endColumn":71},{"ruleId":"557","severity":1,"message":"558","line":353,"column":30,"nodeType":"559","messageId":"560","endLine":353,"endColumn":32},{"ruleId":"557","severity":1,"message":"558","line":353,"column":55,"nodeType":"559","messageId":"560","endLine":353,"endColumn":57},{"ruleId":"557","severity":1,"message":"558","line":357,"column":35,"nodeType":"559","messageId":"560","endLine":357,"endColumn":37},{"ruleId":"557","severity":1,"message":"558","line":372,"column":29,"nodeType":"559","messageId":"560","endLine":372,"endColumn":31},{"ruleId":"546","severity":1,"message":"649","line":5,"column":10,"nodeType":"548","messageId":"549","endLine":5,"endColumn":20},{"ruleId":"546","severity":1,"message":"627","line":6,"column":10,"nodeType":"548","messageId":"549","endLine":6,"endColumn":14},{"ruleId":"546","severity":1,"message":"650","line":6,"column":16,"nodeType":"548","messageId":"549","endLine":6,"endColumn":26},{"ruleId":"557","severity":1,"message":"590","line":14,"column":13,"nodeType":"559","messageId":"560","endLine":14,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":15,"column":15,"nodeType":"559","messageId":"560","endLine":15,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":15,"column":40,"nodeType":"559","messageId":"625","endLine":15,"endColumn":41},{"ruleId":"585","severity":1,"message":"635","line":134,"column":5,"nodeType":"614","endLine":134,"endColumn":20,"suggestions":"651"},{"ruleId":"557","severity":1,"message":"590","line":136,"column":22,"nodeType":"559","messageId":"560","endLine":136,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":136,"column":41,"nodeType":"559","messageId":"560","endLine":136,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":138,"column":32,"nodeType":"559","messageId":"560","endLine":138,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":143,"column":32,"nodeType":"559","messageId":"560","endLine":143,"endColumn":34},{"ruleId":"546","severity":1,"message":"652","line":8,"column":8,"nodeType":"548","messageId":"549","endLine":8,"endColumn":19},{"ruleId":"546","severity":1,"message":"653","line":11,"column":55,"nodeType":"548","messageId":"549","endLine":11,"endColumn":68},{"ruleId":"654","severity":1,"message":"655","line":83,"column":5,"nodeType":"656","messageId":"560","endLine":83,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":128,"column":15,"nodeType":"559","messageId":"560","endLine":128,"endColumn":17},{"ruleId":"557","severity":1,"message":"590","line":129,"column":17,"nodeType":"559","messageId":"560","endLine":129,"endColumn":19},{"ruleId":"546","severity":1,"message":"657","line":262,"column":9,"nodeType":"548","messageId":"549","endLine":262,"endColumn":19},{"ruleId":"658","severity":1,"message":"659","line":401,"column":19,"nodeType":"660","messageId":"661","endLine":401,"endColumn":21},{"ruleId":"557","severity":1,"message":"558","line":417,"column":34,"nodeType":"559","messageId":"560","endLine":417,"endColumn":36},{"ruleId":"546","severity":1,"message":"662","line":469,"column":18,"nodeType":"548","messageId":"549","endLine":469,"endColumn":27},{"ruleId":"546","severity":1,"message":"652","line":8,"column":8,"nodeType":"548","messageId":"549","endLine":8,"endColumn":19},{"ruleId":"546","severity":1,"message":"663","line":11,"column":68,"nodeType":"548","messageId":"549","endLine":11,"endColumn":71},{"ruleId":"546","severity":1,"message":"664","line":24,"column":10,"nodeType":"548","messageId":"549","endLine":24,"endColumn":23},{"ruleId":"546","severity":1,"message":"665","line":26,"column":10,"nodeType":"548","messageId":"549","endLine":26,"endColumn":33},{"ruleId":"585","severity":1,"message":"666","line":159,"column":10,"nodeType":"587","endLine":159,"endColumn":17,"suggestions":"667"},{"ruleId":"546","severity":1,"message":"657","line":207,"column":9,"nodeType":"548","messageId":"549","endLine":207,"endColumn":19},{"ruleId":"546","severity":1,"message":"668","line":212,"column":9,"nodeType":"548","messageId":"549","endLine":212,"endColumn":23},{"ruleId":"658","severity":1,"message":"659","line":441,"column":19,"nodeType":"660","messageId":"661","endLine":441,"endColumn":21},{"ruleId":"546","severity":1,"message":"627","line":4,"column":10,"nodeType":"548","messageId":"549","endLine":4,"endColumn":14},{"ruleId":"546","severity":1,"message":"575","line":4,"column":16,"nodeType":"548","messageId":"549","endLine":4,"endColumn":22},{"ruleId":"546","severity":1,"message":"669","line":5,"column":8,"nodeType":"548","messageId":"549","endLine":5,"endColumn":29},{"ruleId":"546","severity":1,"message":"670","line":6,"column":8,"nodeType":"548","messageId":"549","endLine":6,"endColumn":30},{"ruleId":"546","severity":1,"message":"671","line":8,"column":8,"nodeType":"548","messageId":"549","endLine":8,"endColumn":22},{"ruleId":"546","severity":1,"message":"672","line":12,"column":7,"nodeType":"548","messageId":"549","endLine":12,"endColumn":13},{"ruleId":"654","severity":1,"message":"673","line":115,"column":5,"nodeType":"656","messageId":"560","endLine":115,"endColumn":11},{"ruleId":"557","severity":1,"message":"590","line":91,"column":50,"nodeType":"559","messageId":"560","endLine":91,"endColumn":52},{"ruleId":"557","severity":1,"message":"590","line":91,"column":74,"nodeType":"559","messageId":"560","endLine":91,"endColumn":76},{"ruleId":"557","severity":1,"message":"558","line":93,"column":39,"nodeType":"559","messageId":"560","endLine":93,"endColumn":41},{"ruleId":"557","severity":1,"message":"558","line":94,"column":41,"nodeType":"559","messageId":"560","endLine":94,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":95,"column":39,"nodeType":"559","messageId":"560","endLine":95,"endColumn":41},{"ruleId":"557","severity":1,"message":"558","line":96,"column":41,"nodeType":"559","messageId":"560","endLine":96,"endColumn":43},{"ruleId":"546","severity":1,"message":"579","line":141,"column":36,"nodeType":"548","messageId":"549","endLine":141,"endColumn":47},{"ruleId":"546","severity":1,"message":"580","line":141,"column":49,"nodeType":"548","messageId":"549","endLine":141,"endColumn":57},{"ruleId":"557","severity":1,"message":"590","line":12,"column":13,"nodeType":"559","messageId":"560","endLine":12,"endColumn":15},{"ruleId":"557","severity":1,"message":"590","line":13,"column":15,"nodeType":"559","messageId":"560","endLine":13,"endColumn":17},{"ruleId":"623","severity":1,"message":"624","line":13,"column":40,"nodeType":"559","messageId":"625","endLine":13,"endColumn":41},{"ruleId":"585","severity":1,"message":"635","line":114,"column":5,"nodeType":"614","endLine":114,"endColumn":20,"suggestions":"674"},{"ruleId":"557","severity":1,"message":"590","line":116,"column":22,"nodeType":"559","messageId":"560","endLine":116,"endColumn":24},{"ruleId":"557","severity":1,"message":"558","line":116,"column":41,"nodeType":"559","messageId":"560","endLine":116,"endColumn":43},{"ruleId":"557","severity":1,"message":"558","line":118,"column":32,"nodeType":"559","messageId":"560","endLine":118,"endColumn":34},{"ruleId":"557","severity":1,"message":"558","line":123,"column":32,"nodeType":"559","messageId":"560","endLine":123,"endColumn":34},{"ruleId":"675","severity":1,"message":"676","line":16,"column":9,"nodeType":"677","messageId":"678","endLine":23,"endColumn":10},{"ruleId":"557","severity":1,"message":"558","line":39,"column":38,"nodeType":"559","messageId":"560","endLine":39,"endColumn":40},{"ruleId":"557","severity":1,"message":"558","line":65,"column":20,"nodeType":"559","messageId":"560","endLine":65,"endColumn":22},"no-native-reassign",["679"],"no-negated-in-lhs",["680"],["679"],["680"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AuthService' is defined but never used.","'Component' is defined but never used.","'setEmailErrMessage' is assigned a value but never used.","'passwordErrMessage' is assigned a value but never used.","'setPasswordErrMessage' is assigned a value but never used.","'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextField' is defined but never used.","'SubdirectoryArrowLeftRounded' is defined but never used.","'message' is assigned a value but never used.","'Hidden' is defined but never used.","'Grow' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'MenuIcon' is defined but never used.",["679"],["680"],"'React' is defined but never used.","'Navbar' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","'Button' is defined but never used.","'handleLogOut' is assigned a value but never used.","'Sites' is defined but never used.","'Redirect' is defined but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'useState' is defined but never used.","'employeeService' is defined but never used.","'resetForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["681"],"'json' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'employees' is assigned a value but never used.","'departments' is assigned a value but never used.","'Controls' is defined but never used.","'PermIdentityOutlinedIcon' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'Icon' is defined but never used.","'useForm' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["682"],"'name' is assigned a value but never used.","'AlternateEmail' is defined but never used.","'TblContainer' is assigned a value but never used.","'TblHead' is assigned a value but never used.","'TblPagination' is assigned a value but never used.","'recordsAfterPagingAndSorting' is assigned a value but never used.","'Fragment' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'DateService' is defined but never used.","'handleSubjecChange' is assigned a value but never used.","React Hook useEffect contains a call to 'setFlag'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["683"],"'Grid' is defined but never used.","'MenuItem' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'classnames' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'theme' is assigned a value but never used.","'Card' is defined but never used.","'minutesToHours' is defined but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, props.effectiveType, effectiveType] as a second argument to the useEffect Hook.",["684"],"'optionsMix' is assigned a value but never used.","'weight' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, beginInd, endInd] as a second argument to the useEffect Hook.",["685"],"React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod] as a second argument to the useEffect Hook.",["686"],["687"],["688"],"'FaRegClosedCaptioning' is defined but never used.","'seriesWeek' is assigned a value but never used.","'setTimePeriod' is assigned a value but never used.","'setDate' is assigned a value but never used.",["679"],["680"],"'seriesDay' is assigned a value but never used.","'optionsWeek' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, props.date, date] as a second argument to the useEffect Hook.",["689"],"'makeStyles' is defined but never used.","'Typography' is defined but never used.",["690"],"'TableFooter' is defined but never used.","'DialogActions' is defined but never used.","no-dupe-keys","Duplicate key 'fontWeight'.","ObjectExpression","'updateRows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setScroll' is assigned a value but never used.","'Fab' is defined but never used.","'arrayIncludes' is defined but never used.","'FormatColorResetRounded' is defined but never used.","React Hook React.useEffect has an unnecessary dependency: 'items'. Either exclude it or remove the dependency array. Outer scope values like 'items' aren't valid dependencies because mutating them doesn't re-render the component.",["691"],"'handleAddClick' is assigned a value but never used.","'KeyboardArrowLeftIcon' is defined but never used.","'KeyboardArrowRightIcon' is defined but never used.","'ReactApexChart' is defined but never used.","'styles' is assigned a value but never used.","Duplicate key 'legend'.",["692"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"701","fix":"705"},{"desc":"703","fix":"706"},{"desc":"707","fix":"708"},{"desc":"703","fix":"709"},{"desc":"710","fix":"711"},{"desc":"703","fix":"712"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"713","text":"714"},"Update the dependencies array to be: [userInfo.id]",{"range":"715","text":"716"},"Add dependencies array: []",{"range":"717","text":"718"},"Add dependencies array: [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",{"range":"719","text":"720"},"Add dependencies array: [timePeriod, props.timePeriod, beginInd, endInd]",{"range":"721","text":"722"},"Add dependencies array: [timePeriod, props.timePeriod]",{"range":"723","text":"724"},{"range":"725","text":"722"},{"range":"726","text":"724"},"Add dependencies array: [timePeriod, props.timePeriod, props.date, date]",{"range":"727","text":"728"},{"range":"729","text":"724"},"Update the dependencies array to be: []",{"range":"730","text":"731"},{"range":"732","text":"724"},[2073,2088],"[recordForEdit, setValues]",[4362,4364],"[userInfo.id]",[4514,4514],", []",[8420,8420],", [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",[6746,6746],", [timePeriod, props.timePeriod, beginInd, endInd]",[3478,3478],", [timePeriod, props.timePeriod]",[5784,5784],[13770,13770],[9812,9812],", [timePeriod, props.timePeriod, props.date, date]",[3854,3854],[4554,4561],"[]",[3469,3469]]