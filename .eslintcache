[{"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js":"1","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js":"2","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js":"3","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js":"4","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js":"5","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js":"6","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js":"7","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js":"8","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js":"9","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js":"10","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js":"11","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js":"12","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js":"13","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js":"14","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js":"15","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js":"16","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js":"17","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js":"18","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js":"19","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js":"20","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js":"21","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js":"22","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js":"23","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js":"24","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js":"25","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js":"26","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js":"27","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js":"28","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js":"29","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js":"30","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js":"31","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js":"32","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js":"33","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js":"34","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js":"35","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js":"36","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js":"37","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js":"38","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js":"39","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Widget.js":"40","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js":"41","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\efficiencyByHoursChart.js":"42","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\efficiencyByDayChart.js":"43"},{"size":304,"mtime":1610887316445,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"46","hashOfConfig":"45"},{"size":1269,"mtime":1612089056656,"results":"47","hashOfConfig":"45"},{"size":5898,"mtime":1611599048991,"results":"48","hashOfConfig":"45"},{"size":9421,"mtime":1612079802506,"results":"49","hashOfConfig":"45"},{"size":0,"mtime":1610794371600,"results":"50","hashOfConfig":"45"},{"size":5339,"mtime":1610898212229,"results":"51","hashOfConfig":"45"},{"size":381,"mtime":1611166097561,"results":"52","hashOfConfig":"45"},{"size":1703,"mtime":1612368324021,"results":"53","hashOfConfig":"45"},{"size":1845,"mtime":1612014635875,"results":"54","hashOfConfig":"45"},{"size":767,"mtime":1612371930451,"results":"55","hashOfConfig":"45"},{"size":1213,"mtime":1612429174836,"results":"56","hashOfConfig":"45"},{"size":490,"mtime":1612086572575,"results":"57","hashOfConfig":"45"},{"size":7379,"mtime":1612203965631,"results":"58","hashOfConfig":"45"},{"size":4927,"mtime":1611988694040,"results":"59","hashOfConfig":"45"},{"size":2136,"mtime":1611241978469,"results":"60","hashOfConfig":"45"},{"size":1241,"mtime":1611210764155,"results":"61","hashOfConfig":"45"},{"size":475,"mtime":1611836008938,"results":"62","hashOfConfig":"45"},{"size":875,"mtime":1611215311159,"results":"63","hashOfConfig":"45"},{"size":739,"mtime":1610788731112,"results":"64","hashOfConfig":"45"},{"size":814,"mtime":1610788731113,"results":"65","hashOfConfig":"45"},{"size":753,"mtime":1610788731112,"results":"66","hashOfConfig":"45"},{"size":479,"mtime":1611483274995,"results":"67","hashOfConfig":"45"},{"size":920,"mtime":1610788731115,"results":"68","hashOfConfig":"45"},{"size":802,"mtime":1610788731114,"results":"69","hashOfConfig":"45"},{"size":1031,"mtime":1611491652139,"results":"70","hashOfConfig":"45"},{"size":1380,"mtime":1610788731110,"results":"71","hashOfConfig":"45"},{"size":3885,"mtime":1611209860652,"results":"72","hashOfConfig":"45"},{"size":2471,"mtime":1611847034039,"results":"73","hashOfConfig":"45"},{"size":18310,"mtime":1612103724836,"results":"74","hashOfConfig":"45"},{"size":1100,"mtime":1612102690593,"results":"75","hashOfConfig":"45"},{"size":484,"mtime":1611835645826,"results":"76","hashOfConfig":"45"},{"size":1267,"mtime":1612088461751,"results":"77","hashOfConfig":"45"},{"size":2806,"mtime":1612102694617,"results":"78","hashOfConfig":"45"},{"size":3033,"mtime":1612203960112,"results":"79","hashOfConfig":"45"},{"size":3212,"mtime":1612206748679,"results":"80","hashOfConfig":"45"},{"size":7731,"mtime":1612206560682,"results":"81","hashOfConfig":"45"},{"size":2805,"mtime":1612622362848,"results":"82","hashOfConfig":"45"},{"size":4602,"mtime":1612624053651,"results":"83","hashOfConfig":"45"},{"size":2301,"mtime":1612624372224,"results":"84","hashOfConfig":"45"},{"size":8952,"mtime":1612620418653,"results":"85","hashOfConfig":"45"},{"size":2036,"mtime":1612623272823,"results":"86","hashOfConfig":"45"},{"size":3485,"mtime":1612628108666,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1xyr1rt",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js",[],["198","199"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js",[],["200","201"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js",["202","203"],"import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport AuthService from \"./services/auth.service\"\n\n\nimport Dashboard from './pages/dashboard';\nimport Employees from './pages/employees';\nimport Profile from './pages/profile';\nimport Leaders from './pages/leaders';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  render(){\n    return (\n\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path=\"/sign-in\" component={Login} />\n                  <Route path=\"/sign-up\" component={SignUp} />\n                  <Route path='/dashboard'>\n                    <Dashboard/>\n                  </Route>\n                  <Route path='/employees' component={Employees}/>\n                  <Route path='/leaders' component={Leaders}/>\n                  <Route path='/profile'>\n                    <Profile/>\n                  </Route>\n                </Switch>      \n    );\n  }\n}\n\nexport default App;","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js",["204","205","206","207","208","209","210","211"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    buuttonSignIn: {\r\n        width: '100%',\r\n        margin: theme.spacing(2),\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignIn(props){\r\n\r\n        const  classes  = styles();\r\n\r\n        const [email, setEmail] = React.useState(\"\")\r\n        const [password, setPassword] = React.useState(\"\")\r\n        const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n        const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n        const [redirect, setRedirect] = React.useState(null)\r\n        const [valid, setValid] = React.useState(false)\r\n        const [notify, setNotify] = \r\n        React.useState(props && props.location && props.location.state && props.location.state.notify ? \r\n            {isOpen: true, message: 'You are successfully registered', type: \"success\"}\r\n            :{ isOpen: false, message: '', type: '' })\r\n\r\n        const handleSubmit = (e)=>{\r\n            e.preventDefault()\r\n            AuthService.login(email, password)\r\n                .then(()=>{\r\n                    setRedirect(\"/dashboard\")\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 401) resMessage = \"Bad credentials\"\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                    }\r\n                    else{\r\n                        resMessage = \"Server is not available\"\r\n                    }\r\n                    setNotify({\r\n                        isOpen:true,\r\n                        message:resMessage,\r\n                        type: 'error'})\r\n                  }\r\n                );\r\n        }\r\n\r\n        const handleChangeEmail = (e)=>{\r\n            setEmail(e.target.value)\r\n        }\r\n        \r\n        const handleChangePassword = (e) =>{\r\n            setPassword(e.target.value)\r\n        }\r\n\r\n        if (redirect){\r\n            return(\r\n            <div>\r\n                {/* <Switch>\r\n                <Route exact path='/dashboard'>\r\n                    <Dashboard/>\r\n                  </Route>\r\n                  <Route path='/profile'>\r\n                    <Profile/>\r\n                  </Route>\r\n                  </Switch> */}\r\n                 <Redirect to={redirect}/>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner-singin\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid  container justify=\"center\">\r\n                        <Grid item >\r\n                            <TextField required  \r\n                            label=\"Email\" \r\n                            style={{width: '100%'}}\r\n                                margin=\"normal\" \r\n                                onChange={handleChangeEmail}\r\n                                helperText={emailErrMessage}/>\r\n                            <TextField required  label=\"Password\" style={{width: '100%'}} type=\"password\"\r\n                                margin=\"normal\" onChange={handleChangePassword}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container  justify=\"center\" md={12}>\r\n                        {/* <Link to={\"/dashboard\"} variant=\"body2\"> */}\r\n                            <Button className={classes.buuttonSignIn} variant=\"contained\" color=\"primary\" type=\"submit\">Sign In</Button>    \r\n                        {/* </Link> */}\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        {/* <Grid item>\r\n                                <Link to={\"/sign-in\"} variant=\"body2\">\r\n                                    <Typography variant=\"caption\">\r\n                                        Forgot password?\r\n                                    </Typography>\r\n                                </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link to={\"/sign-up\"} variant=\"body2\">\r\n\r\n                                    <Typography variant=\"caption\">\r\n                                        Don't have an account? Sign up.\r\n                                    </Typography>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js",["212","213","214","215","216"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, InputLabel, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { SubdirectoryArrowLeftRounded } from \"@material-ui/icons\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n    //   margin: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n  }));\r\n\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [redirect, setRedirect] = React.useState('');\r\n\r\n    const [fullName, setFullName] = React.useState(null);\r\n    const [email, setEmail] = React.useState(null);\r\n    const [password, setPassword] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [position, setPosition] = React.useState(null);\r\n    const [role, setRole] = React.useState(null);\r\n\r\n    const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n    const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n    const [valid, setValid] = React.useState(false)\r\n    const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const emailValidate = (emailValue) => {\r\n        let err = \"\"\r\n        if ((/$^|.+@.+..+/).test(emailValue)){\r\n            err = \"\"\r\n            setValid(true)\r\n        }\r\n        else{\r\n            err=\"Email is no valid\"\r\n            setValid(false)\r\n        }\r\n        setEmailErrMessage(err)\r\n    }\r\n\r\n    const passwordValidate = (passwordValue) => {\r\n        let err = \"\"\r\n        if (passwordValue.length >= 6 || passwordValue.length < 1){\r\n            err = \"\"\r\n            setValid(true) \r\n        }\r\n        else{\r\n            err = \"Password should consist more than 6 symbols\"\r\n            setValid(false)\r\n        }   \r\n        setPasswordErrMessage(err)\r\n    }\r\n\r\n\r\n    const handleFullNameChange = (event) => {\r\n        setFullName(event.target.value)\r\n    }\r\n\r\n    const handlePositionChange = (event) => {\r\n        setPosition(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event) =>{\r\n        emailValidate(event.target.value)\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) =>{\r\n        passwordValidate(event.target.value)\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleDepartmentChange = (event)=>{\r\n        setDepartment(event.target.value)\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n      setRole(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(valid){\r\n            AuthService.register(\r\n                email,\r\n                password,\r\n                fullName,\r\n                department,\r\n                position,\r\n                role\r\n            )\r\n            .then((response)=>{\r\n                    setRedirect(\"/dashboard\")\r\n                    console.log(response)\r\n\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                        else resMessage = error.response.data.message\r\n                    }\r\n                    else resMessage=\"Server is not available\"\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: resMessage,\r\n                        type: \"error\"\r\n                    })\r\n                    \r\n                    setMessage(resMessage);\r\n                })\r\n        }\r\n    }\r\n    if(redirect){        \r\n        return (\r\n            <div>\r\n                <Redirect to={redirect}/>\r\n                {/* <Redirect to={{\r\n                        pathname: redirect,\r\n                        state: {\r\n                            notify: true\r\n                        }\r\n                    }}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n    <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner-singup\">\r\n\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input\r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Email\" \r\n                            margin=\"normal\"\r\n                            onChange={handleEmailChange}\r\n                            error={emailErrMessage}\r\n                            errorText=\"table\"\r\n                            errorStyle=\"relative\"/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                                \r\n                                <Controls.Input \r\n                                    required \r\n                                    margin=\"normal\"\r\n                                    className={classes.inputField}\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={handlePasswordChange}\r\n                                    error={passwordErrMessage}\r\n                                />\r\n                        </Grid>\r\n                        \r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Full name\"  \r\n                            margin=\"normal\"\r\n                            onChange={handleFullNameChange}/>\r\n                                {/* <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" /> */}\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n \r\n                            className={classes.inputField} \r\n                            label=\"Department\" \r\n                            margin=\"normal\"\r\n                            onChange={handleDepartmentChange}/>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <FormControl \r\n                                margin=\"normal\" \r\n                                className={classes.formControl}>\r\n                                    <InputLabel required>Position type</InputLabel>\r\n                                    <Select\r\n                                    value={role}\r\n                                    onChange={handleRoleChange}\r\n                                    >\r\n                                        <MenuItem value={\"leader\"}>Leader</MenuItem>\r\n                                        <MenuItem value={\"employee\"}>Employee</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            className={classes.inputField} \r\n                            label=\"Position\" \r\n                            margin=\"normal\"\r\n                            onChange={handlePositionChange}/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container md={12} >\r\n                            <Button variant=\"contained\" color=\"primary\" style={{width: '100%'}} type=\"submit\">Sign Up</Button>    \r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                        <Link to={\"/sign-in\"} variant=\"body2\">\r\n                            <Typography variant=\"caption\">\r\n                                Already have an account? Sign in\r\n                            </Typography>\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js",["217","218","219","220","221"],"import React from 'react';\r\n\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography,\r\n  Container, \r\n  IconButton, \r\n  Button,\r\n  Box, MenuItem, Select\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    route:{\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1)\r\n    }, \r\n    title: { \r\n      flexGrow: 1\r\n    },\r\n  }))\r\n\r\nexport default function TopBar(props) {\r\n        const classes = useStyles();\r\n        const [openProfile, setOpenProfile] = React.useState(null);\r\n        const handleClickProfile = event => {\r\n          if (openProfile && openProfile.contains(event.target)) {\r\n            setOpenProfile(null);\r\n          } else {\r\n            setOpenProfile(event.currentTarget);\r\n          }\r\n        };\r\n        const handleCloseProfile = () => {\r\n          setOpenProfile(null);\r\n        };\r\n    \r\n        return(\r\n            <>\r\n                <AppBar position=\"fixed\">\r\n                        <Container fixed>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\r\n                            </IconButton>\r\n                            {/* Компонент куда записываем текст */}\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                            Time Tracker\r\n                            </Typography>\r\n                            {/* <Box mr={3}>\r\n                            <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\r\n                            </Box> */}\r\n                            {/* <Button color=\"secondary\" variant=\"contained\">Sign Up</Button> */}\r\n                            <div className={classes.manager}>\r\n                                <Button\r\n                                    style={{color:\"black\"}}\r\n                                    onClick={handleClickProfile}\r\n                                    className={classes.buttonLink}\r\n                                >\r\n                                    <Person style={{color:\"black\"}}className={classes.icons} />\r\n                                </Button>\r\n                                <Poppers\r\n                                    open={Boolean(openProfile)}\r\n                                    anchorEl={openProfile}\r\n                                    transition\r\n                                    disablePortal\r\n                                >\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                                        <MenuList role=\"menu\">\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-in\"} style={{color:\"black\"}}>\r\n                                                    Log in\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-up\"} style={{color:\"black\"}}>\r\n                                                        Sign up\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <Divider light />\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                \r\n                                            Forgot password\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                    // </Grow>\r\n                                )}\r\n                                </Poppers>\r\n                            </div>\r\n\r\n                            \r\n                        </Toolbar>\r\n                        </Container>\r\n                </AppBar>\r\n            </>\r\n        )\r\n}\r\n",["222","223"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js",["224","225"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         height: '90vh'\r\n//       }}\r\n//     >\r\n//       <h1>Home</h1>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js",["226","227"],"import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    // position: 'fixed',\r\n    // top: '0px',\r\n    // width: '100%',\r\n    marginBottom:theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst handleLogOut = e =>{\r\n  AuthService.logout()\r\n}\r\n\r\nconst Navbar = () => {\r\n  // const user = AuthService.getCurrentUser().userInfo;\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Nav  className={classes.navbar}>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to='/dashboard' activeStyle>\r\n            Dashboard\r\n          </NavLink>\r\n\r\n          {/* {user.userRole === \"LEADER\" ?\r\n              (<NavLink to='/employees' activeStyle>\r\n                Employees\r\n              </NavLink>)\r\n              :\r\n              (<NavLink to='/leaders' activeStyle>\r\n                Managers\r\n              </NavLink>)\r\n          } */}\r\n          <NavLink to='/profile' activeStyle>\r\n            Profile\r\n          </NavLink>\r\n        </NavMenu>\r\n\r\n        {/* <Link to={\"/dashboard\"} variant=\"body2\">\r\n                            <Button  variant=\"contained\" color=\"primary\">Sign Out</Button>    \r\n                        </Link> */}\r\n\r\n          <Link to={'/sign-in'} variant=\"body2\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Sign Out</Button>   \r\n          </Link>\r\n\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js",["228","229"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DashboardEfficiency from '../components/Dashboard/dashboardEfficiency'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n  // const user = AuthService.getCurrentUser();\r\n  // if(user)\r\n  // {\r\n      return (\r\n      <>\r\n      <Navbar/>\r\n      <DashboardEfficiency/>\r\n      {/* <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '90vh'\r\n        }}\r\n      >\r\n        <h1>Dashboard</h1>\r\n      </div> */}\r\n      </>\r\n    );\r\n  // }\r\n  // return(\r\n  //   <Redirect to=\"sign-in\"/>\r\n  // )\r\n};\r\n\r\nexport default Dashboard;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js",["230","231"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport EmployeesComponent from './Employees/EmployeesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#333996\",\r\n      light: '#3c44b126'\r\n    },\r\n    secondary: {\r\n      main: \"#f83245\",\r\n      light: '#f8324526'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  },\r\n  overrides:{\r\n    MuiAppBar:{\r\n      root:{\r\n        transform:'translateZ(0)'\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    MuiIconButton:{\r\n      disableRipple:true\r\n    }\r\n  }\r\n})\r\n\r\nconst Employees = () => {\r\n\r\n  // const user = AuthService.getCurrentUser();\r\n\r\n\r\n  // if(user && user.userInfo.userRole === \"LEADER\"){\r\n    return (\r\n      <>\r\n      <Navbar position=\"fixed\"/>\r\n      <ThemeProvider theme={theme}>        \r\n        <EmployeesComponent/>\r\n      </ThemeProvider>\r\n      </>\r\n    );\r\n  // }\r\n  // else if (user && user.userInfo.userRole === \"EMPLOYEE\") return(<div/>)\r\n  // return (<Redirect to =\"sign-in\"/>)\r\n};\r\n\r\nexport default Employees;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js",["232","233","234"],"import React, { useState, useEffect } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nimport Notification from \"../../components/employees/Notification\";\r\nimport ConfirmDialog from \"../../components/employees/ConfirmDialog\";\r\nimport Popup from \"../../components/employees/Popup\";\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport useTable from \"../../components/employees/useTable\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport ManagerService from \"../../services/manager.service\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        // width: '100%',\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(3),\r\n\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(1),\r\n        // top: '60px',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        // top: '40px',\r\n        // marginTop: theme.spacing(3),\r\n      }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Employee Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'position', label: 'Position' },\r\n    { id: 'actions', disableSorting: true }\r\n\r\n]\r\n\r\nexport default function EmployeesComponent() {\r\n\r\n    // let [employeeArr, setEmployeeArr] = useState(AuthService.getCurrentUser().employees)\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(AuthService.getCurrentUser().employees)\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n\r\n    useEffect(()=>{\r\n        ManagerService.getEmployeesRest()\r\n        .then((response) =>{        \r\n            console.log(\"ASd\",response.status)\r\n            setRecords(response)\r\n        },\r\n        error =>{\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateEmployee = (employeeInfo) => {\r\n        setOpenPopup(false)\r\n        setRecords(ManagerService.updateEmployeeInfo(employeeInfo))\r\n        ManagerService.updateEmployeeInfoRest(employeeInfo)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = employeeId => {\r\n\r\n        setRecords(ManagerService.deleteEmployee(employeeId))\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        ManagerService.deleteEmployeeRest(employeeId)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    <TableCell>\r\n\r\n                                        {/* //Кнопка редактирования */}\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <InfoOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n\r\n                                        {/* кнопка удаления */}\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n\r\n            <Popup\r\n                title=\"Employee full inforamtion\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    updateEmployee={updateEmployee} />\r\n            </Popup>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js",["235","236","237","238","239","240","241"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport { useForm, Form } from '../../components/employees/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'MALE', title: 'Male' },\r\n    { id: 'FEMALE', title: 'Female' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    department: '',\r\n    position: '',\r\n    gender: 'male',\r\n    hireDate: new Date(),\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { updateEmployee, recordForEdit } = props\r\n    // const [userInfo, setUserInfo] = useState(Auth)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    // console.log(initialFValues)\r\n\r\n    // console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateEmployee(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={values.department}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Position\"\r\n                        name=\"position\"\r\n                        value={values.position}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    {/* <Controls.OutlinedInput\r\n                        name=\"mobile\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        // options={employeeService.getDepartmentCollection()}\r\n                        error={errors.mobile}\r\n                    /> */}\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" \r\n                            color=\"secondary\"/>\r\n                        {/* <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} /> */}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js",["242","243","244","245","246"],"const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nlet data = {\r\n    city: \"dfgdsfhtrjrjf\",\r\n    email: \"sdfsdgdfherhe@dsfgdfg\",\r\n    fullName: \"dfgdfgdf\",\r\n    gender: \"male\",\r\n    hireDate: \"2021-01-20T19:08:16.404Z\",\r\n    id: 12,\r\n    isPermanent: false,\r\n    mobile: \"3453453542\",\r\n  };\r\n  \r\n  let json = JSON.stringify(data);\r\n  let arr = [];\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    // let employees = JSON.parse(json)\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    arr.push(data)\r\n    // console.log(employees)\r\n    // console.log(arr)\r\n\r\n\r\n    // return employees.map(x => ({\r\n    //     ...x,\r\n    //     department: departments[x.departmentId - 1].title\r\n    // }))\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js",["247","248"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                    {/* < PermIdentityOutlinedIcon/> */}\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js",["249","250","251","252","253","254","255","256","257","258","259","260","261"],"import React, { useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Paper, IconButton, Icon, Button, DialogContent, Container} from \"@material-ui/core\";\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Notification from \"./employees/Notification\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Form } from './employees/useForm';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        padding: \"auto\",\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        // backgroundColor: \"#f8324526\",#060b26\r\n        // backgroundColor: \"#4aedc4\",\r\n        backgroundColor: \"#060b26\",\r\n\r\n        color: \"#f50057\",\r\n        justify:\"center\",\r\n        '&:hover': {\r\n            backgroundColor: \"#00b0ff\",\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(3),\r\n      //   margin: theme.spacing(3),\r\n        minWidth: '30ch',\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      avatar: {\r\n          marginBottom: theme.spacing(1),\r\n          marginLeft: theme.spacing(2),\r\n          backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      inputField:{\r\n          width: '40ch',\r\n      },\r\n\r\n      settings: {\r\n        paddingLeft: theme.spacing(9),\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n      },\r\n}))\r\n\r\n\r\nChangePassword.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n  };\r\n\r\n\r\nexport default function ProfileInfo(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [userInfo, setUserInfo] = useState(AuthService.getCurrentUser().userInfo);\r\n    const [errors, setErrors] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(null);\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const genderItems = [\r\n        { id: 'MALE', title: 'male' },\r\n        { id: 'FEMALE', title: 'female' },\r\n    ]\r\n    const validateOnChange = true\r\n\r\n    const validate = (fieldValues = userInfo) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == userInfo)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserService.getUserInfo(userInfo.id)\r\n        .then((response) =>{\r\n            setUserInfo(response)\r\n        },\r\n        error =>{\r\n            console.log(\"ERROR\", error.response)\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n    \r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (value) => {\r\n      setOpen(false);\r\n      setSelectedValue(value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            UserService.updateUserInfo(userInfo)\r\n            .then(\r\n                (response) =>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                },\r\n                error =>{\r\n                    console.log(\"ERROR\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n                }\r\n            );\r\n        }\r\n    }\r\n    if (userInfo.userRole === 'LEADER'){\r\n        return(\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PersonRoundedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.settings}>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item xs={12} sm={6} md={6} >\r\n                                <Controls.Input\r\n                                    className={classes.inputField}\r\n                                    name=\"fullName\"\r\n                                    label=\"Full Name\"\r\n                                    value={userInfo.fullName}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.fullName}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input\r\n                                    disabled\r\n                                    className={classes.inputField}\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={userInfo.email}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.email}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input \r\n                                    className={classes.inputField}\r\n                                    name=\"department\" \r\n                                    label=\"Department\" \r\n                                    value={userInfo.department}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <TextField\r\n                                        className={classes.inputField}\r\n                                        label=\"Position\"\r\n                                        name=\"position\"\r\n                                        value={userInfo.position}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                </div>  \r\n            <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\"}}>Change Password</Button>\r\n                    </Grid>\r\n            </Grid>\r\n            </form>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PermIdentityOutlinedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <Form onSubmit={handleSubmit}>\r\n            <div className={classes.settings} justifyContent=\"center\" justify=\"center\">\r\n\r\n                <Grid container justify=\"center\" justifyContent=\"center\">\r\n                    <Grid item xs={6}>\r\n\r\n                        <Controls.Input\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            value={userInfo.email}\r\n                            onChange={handleInputChange}\r\n                            error={errors.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        \r\n                        <Controls.Input\r\n                            label=\"Department\"\r\n                            name=\"department\"\r\n                            value={userInfo.department}\r\n                            onChange={handleInputChange}\r\n                            // error={errors.department}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            label=\"Position\"\r\n                            name=\"position\"\r\n                            value={userInfo.position}\r\n                            onChange={handleInputChange}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n\r\n                    <Controls.Input\r\n                            name=\"fullName\"\r\n                            label=\"Full Name\"\r\n                            value={userInfo.fullName}\r\n                            onChange={handleInputChange}\r\n                            error={errors.fullName}\r\n                            variant=\"outlined\"\r\n                            />\r\n\r\n                        <Controls.DatePicker\r\n                            name=\"hireDate\"\r\n                            label=\"Hire Date\"\r\n                            value={userInfo.hireDate}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <Controls.RadioGroup\r\n                            name=\"gender\"\r\n                            label=\"Gender\"\r\n                            value={userInfo.gender}\r\n                            onChange={handleInputChange}\r\n                            items={genderItems}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\"}}>Change Password</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </Form>\r\n            \r\n\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        \r\n    )}\r\n\r\n\r\n    function ChangePassword(props) {\r\n        const classes = useStyles()\r\n    \r\n        const onClose = props.onClose\r\n        const selectedValue = props.selectedValue\r\n        const open = props.open\r\n        const userEmail = props.userEmail;\r\n    \r\n        const [errMessageNew, setErrMessageNew] = useState(\"\") \r\n        const [errMessageConfirm, setErrMessageConfirm] = useState(\"\") \r\n        const [newPassword, setNewPassword] = useState(\"\") \r\n        const [password, setPassword] = useState(\"\")\r\n        const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n      \r\n        const handleClose = () => {\r\n          onClose(selectedValue);\r\n        };\r\n      \r\n        const handleInputNewPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value.length < 6 ) \r\n                setErrMessageNew(\"the minimum password length must be 6\")\r\n            else {\r\n                setErrMessageNew(\"\")\r\n                setNewPassword(value)\r\n            }\r\n        }\r\n        const handleInputConfirmPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value !== newPassword) setErrMessageConfirm(\"Passwords do not match\")\r\n            else setErrMessageConfirm(\"\")\r\n        }\r\n    \r\n        const handlePasswordSubmit = e =>{\r\n            e.preventDefault()\r\n            console.log(errMessageNew, errMessageConfirm)\r\n            const body = {\r\n                email: userEmail,\r\n                password: password,\r\n                newPassword: newPassword\r\n            }\r\n            if (!errMessageNew \r\n                && !errMessageConfirm \r\n                && password.length > 0 \r\n                && newPassword.length > 0){\r\n                UserService.updateUserPassword(body)\r\n                .then((response)=>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                    console.log(\"Response\", response.data)\r\n                }\r\n                ,\r\n                error=>{\r\n                    console.log(\"RESP\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n\r\n                }\r\n                )\r\n            }\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n          <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}>Change password</DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n    \r\n                <form onSubmit={handlePasswordSubmit}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={8} >\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            />\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}    \r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassword}\r\n                            error={errMessageNew}\r\n                            variant=\"outlined\"/>   \r\n                        <Controls.Input   \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Confirm new password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputConfirmPassword}\r\n                            error={errMessageConfirm}\r\n                            variant=\"outlined\"/>  \r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\" \r\n                            style={{width:\"50%\", marginTop: \"8px\"}} \r\n                            onClick={handleClose}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n    \r\n            </DialogContent>\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js",["262"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\nclass User{\r\n\r\n\r\n    getUserInfo(userId){\r\n        return axios.get(API_URL + \"/getUserInfo\",{ \r\n                                                    params:{userId:userId},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                  })\r\n        .then(response =>{\r\n            if (response.data.id){\r\n                let user = JSON.parse(sessionStorage.getItem('user'))\r\n                response.data.token = user.userInfo.token;\r\n                user.userInfo = response.data\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n            }\r\n            return response.data\r\n        })\r\n    }\r\n\r\n    updateUserInfo(newUserInfo) {\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        user.userInfo = newUserInfo\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        console.log(\"USER\",user)\r\n\r\n        return axios.post(API_URL + \"/update/info\", newUserInfo, this.config())\r\n        .then(response => {\r\n            return response.data})\r\n    }\r\n\r\n    updateUserPassword(body){\r\n        return axios.post(API_URL + \"/update/password\", body, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new User()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js",["263"],"// import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\n\r\n\r\nclass Manager{\r\n\r\n    getEmployeesRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getEmployees\",{ \r\n                                                    params:{userId:user.userInfo.id},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n            .then(response =>{\r\n                    user.employees = response.data\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                    return response.data}\r\n            )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n\r\n    updateEmployeeInfoRest(employeeInfo){    \r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n    \r\n    deleteEmployeeRest(employeeId){\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new Manager()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js",["264","265"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\n\r\n\r\nclass EmployeeService{\r\n\r\n\r\n\r\n    \r\n    getAllManagersRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getAllManagers\",{headers: {Authorization: \"Bearer \"+ this.getToken()}})\r\n                .then(response =>{\r\n                        user.managers = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    getManagerRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getManager\",{ \r\n                                                        params:{userId:user.userInfo.id},\r\n                                                        headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n                .then(response =>{\r\n                        user.userManager = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    chooseManagerRest(manager){\r\n         let user = AuthService.getCurrentUser();\r\n         user.userManager = manager;\r\n         sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n         let body = {\r\n             \"userId\": user.userInfo.id,\r\n             \"managerId\": manager.id\r\n         }\r\n\r\n         return axios.post(API_URL + \"/addManager\", body, this.config())\r\n         .then((response) => {return this.buildNotification(response)},\r\n            (error) => {return this.buildErrorNotification(error)})\r\n    }\r\n\r\n    deleteManagerRest(){\r\n        let user = AuthService.getCurrentUser();\r\n        user.userManager = null;\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        let body = {\r\n            \"userId\": user.userInfo.id,\r\n        }\r\n\r\n        return axios.post(API_URL + \"/deleteManager\", body, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    getUserManger(){\r\n        return JSON.parse(sessionStorage.getItem(\"user\")).userManager\r\n    }\r\n\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js",["266","267","268"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\n\r\nimport Notification from \"../components/employees/Notification\";\r\nimport ConfirmDialog from \"../components/employees/ConfirmDialog\";\r\nimport Controls from \"../components/employees/controls/Controls\";\r\nimport useTable from \"../components/employees/useTable\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport EmployeeService from \"../services/employee.service\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        // width: '100%',\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(3),\r\n\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(1),\r\n        // top: '60px',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        // top: '40px',\r\n        // marginTop: theme.spacing(3),\r\n      }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'fullName', label: 'Leader Name' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'position', label: 'Position' },\r\n    { id: 'actions', disableSorting: true }\r\n]\r\n\r\nexport default function LeadersComponent() {\r\n\r\n    const [records, setRecords] = useState(AuthService.getCurrentUser().managers)\r\n\r\n    const classes = useStyles();\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [userManager, setUserManager ]=useState(AuthService.getCurrentUser().userManager)\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    useEffect(()=>{\r\n        EmployeeService.getManagerRest()\r\n        .then((response) =>{\r\n            setUserManager(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n\r\n        EmployeeService.getAllManagersRest()\r\n        .then((response) =>{\r\n            setRecords(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.email.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const chooseManager = (item) => {\r\n        setUserManager(item)\r\n        EmployeeService.chooseManagerRest(item)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const deleteManager = () => {\r\n        setUserManager(null)\r\n        EmployeeService.deleteManagerRest()\r\n        .then((response) => {\r\n            setNotify(response)})\r\n\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    if(userManager){\r\n        return(\r\n            <>\r\n            <Paper className={classes.pageContent}>\r\n                <h4>Your manager</h4>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        <TableRow key={userManager.id}>\r\n                            <TableCell>{userManager.email}</TableCell>\r\n                            <TableCell>{userManager.fullName}</TableCell>\r\n                            <TableCell>{userManager.department}</TableCell>\r\n                            <TableCell>{userManager.position}</TableCell>\r\n                            \r\n                            <TableCell>\r\n                            <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => {deleteManager() }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </TblContainer>\r\n            </Paper>\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            </>\r\n        )\r\n    }\r\n    else\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search manager by email\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((item, index )=>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    \r\n                                    <TableCell>\r\n\r\n                                        <Controls.ActionButton\r\n                                                color=\"primary\"\r\n                                                onClick={() => { chooseManager(item) }}>\r\n                                        <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js",["269","270","271","272","273","274","275"],"import React, { Fragment } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { Grid, Card, CardContent, Button, Divider, Container, Checkbox, Typography } from '@material-ui/core';\r\nimport Table from \"./table\"\r\n\r\nimport EfficiencyByHoursChart from './efficiencyByHoursChart'\r\nimport EfficiencyByDayChart from './efficiencyByDayChart'\r\n\r\n\r\n// import React, { Fragment } from 'react';\r\n\r\nimport BigStat from \"./BigStat\";\r\n\r\nconst mock = {\r\n  bigStat: [\r\n    {\r\n      product: \"Workerd today\",\r\n      total: {\r\n        monthly: 4232,\r\n        weekly: 1465,\r\n        daily: 199,\r\n        percent: { value: 3.7, profit: false }\r\n      },\r\n      color: \"Worked week\",\r\n      registrations: {\r\n        monthly: { value: 830, profit: false },\r\n        weekly: { value: 215, profit: true },\r\n        daily: { value: 33, profit: true }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 4.5, profit: false },\r\n        weekly: { value: 3, profit: true },\r\n        daily: { value: 3.25, profit: true }\r\n      }\r\n    },\r\n    {\r\n      product: \"Worked week\",\r\n      total: {\r\n        monthly: 754,\r\n        weekly: 180,\r\n        daily: 27,\r\n        percent: { value: 2.5, profit: true }\r\n      },\r\n      color: \"warning\",\r\n      registrations: {\r\n        monthly: { value: 32, profit: true },\r\n        weekly: { value: 8, profit: true },\r\n        daily: { value: 2, profit: false }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 2.5, profit: true },\r\n        weekly: { value: 4, profit: false },\r\n        daily: { value: 4.5, profit: false }\r\n      }\r\n    },\r\n    {\r\n      product: \"Activity\",\r\n      total: {\r\n        monthly: 1025,\r\n        weekly: 301,\r\n        daily: 44,\r\n        percent: { value: 3.1, profit: true }\r\n      },\r\n      color: \"secondary\",\r\n      registrations: {\r\n        monthly: { value: 230, profit: true },\r\n        weekly: { value: 58, profit: false },\r\n        daily: { value: 15, profit: false }\r\n      },\r\n      bounce: {\r\n        monthly: { value: 21.5, profit: false },\r\n        weekly: { value: 19.35, profit: false },\r\n        daily: { value: 10.1, profit: true }\r\n      }\r\n    }\r\n  ],\r\n};\r\n\r\nexport default function DashboardEfficiency(props){\r\n\r\n    return (\r\n\r\n      <Container>\r\n        <Grid container spacing={4}>\r\n          {mock.bigStat.map(stat => (\r\n            <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n              <BigStat {...stat}/>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      <Fragment>\r\n        <Table/>\r\n      </Fragment>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} lg={8}>\r\n            <EfficiencyByHoursChart/>\r\n        </Grid>\r\n        <Grid item xs={12} lg={4}>\r\n          <EfficiencyByDayChart/>\r\n        </Grid>\r\n      </Grid>\r\n      </Container>\r\n\r\n    )\r\n\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js",["276","277","278","279","280","281","282","283","284","285","286"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input, Typography } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\nimport Widget from \"./Widget\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles =  makeStyles((theme) => ({\r\n  title: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  bottomStatsContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: theme.spacing(1) * -2,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  statCell: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  totalValueContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  totalValue: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  profitArrow: {\r\n    transform: \"rotate(-45deg)\",\r\n    fill: theme.palette.success.main,\r\n  },\r\n  profitArrowDanger: {\r\n    transform: \"rotate(45deg)\",\r\n    fill: theme.palette.secondary.main,\r\n  },\r\n  selectInput: {\r\n    padding: 10,\r\n    paddingRight: 25,\r\n    \"&:focus\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  bodyWidgetOverflow: {\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function BigStat(props) {\r\n  var { product, total, color, registrations, bounce } = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <Widget\r\n      header={\r\n        <div className={classes.title}>\r\n          <Typography variant=\"h5\">{product}</Typography>\r\n        </div>\r\n      }\r\n      upperTitle\r\n      bodyClass={classes.bodyWidgetOverflow}\r\n    >\r\n      <div className={classes.totalValueContainer}>\r\n        <div className={classes.totalValue}>\r\n          <Typography variant=\"h3\" color=\"text\" colorBrightness=\"secondary\">\r\n            {total[value]}\r\n          </Typography>\r\n          {total.percent.profit\r\n          ? \r\n          <Typography style={{color:\"#81c784\"}}>\r\n              +{total.percent.value}%\r\n          </Typography> : \r\n          <Typography style={{color:\"#e33371\"}}>\r\n              -{total.percent.value}%\r\n            </Typography>}\r\n        </div>\r\n        <BarChart width={150} height={70} data={getRandomData()}>\r\n          <Bar\r\n            dataKey=\"value\"\r\n            fill=\"#f50057\"\r\n            radius={10}\r\n            barSize={10}\r\n          />\r\n        </BarChart>\r\n      </div>\r\n      {/* <div className={classes.bottomStatsContainer}>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Registrations\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.statCell}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [!registrations[value].profit]: classes.profitArrowDanger,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Bounce Rate\r\n          </Typography>\r\n        </div>\r\n        <div className={classnames(classes.statCell, classes.borderRight)}>\r\n          <Grid container alignItems=\"center\">\r\n            <Typography variant=\"h6\">\r\n              {registrations[value].value * 10}\r\n            </Typography>\r\n            <ArrowForwardIcon\r\n              className={classnames(classes.profitArrow, {\r\n                [classes.profitArrowDanger]: !registrations[value].profit,\r\n              })}\r\n            />\r\n          </Grid>\r\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n            Views\r\n          </Typography>\r\n        </div>\r\n      </div> */}\r\n    </Widget>\r\n  );\r\n}\r\n\r\nfunction getRandomData() {\r\n  return Array(7)\r\n    .fill()\r\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Widget.js",["287","288","289","290"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  Card\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles =  makeStyles(theme => ({ \r\n  widgetHeader: {\r\n    // marginTop :theme.spacing(0),\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  widgetBody: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  card: {\r\n    boxShadow: \"0px 7px 20px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"25px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Card className={classes.card}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js",["291","292","293","294"],"import React from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n      marginTop: theme.spacing(3),\r\n      boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })); \r\n\r\n\r\nfunction createData(name, position, department, experience, status) {\r\n  return { name, position, department, experience, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 'Software Engineer', 'Dev', '3 years 4 mounth', true),\r\n  createData('Donut', 'ML engineer', 'ML', '0 years 3 mounth', false),\r\n  createData('Eclair', 'System Analytic', 'Analytics', '1 year 3 mounth', false),\r\n  createData('Frozen yoghurt', 'Senior System Analytic', 'Analytic', '2 years 2 mouth',true),\r\n  createData('Gingerbread', 'Juniour Software Developer', 'Dev', '0 years 2 mounth', true),\r\n  createData('Honeycomb', 'Senior Software Developer', 'Dev', '5 years 3 mounth', true),\r\n  createData('Ice cream sandwich', 'HR manager', \"HR\", '3 years', true),\r\n  createData('Jelly Bean', 'Accounter', 'Bookkeeping', '2 years 7 mounth', true),\r\n  createData('KitKat', 'Manager', 'Inner Managament', '4 years 2 mounth', true),\r\n  createData('Lollipop', 'Data Scientist', 'Analytics', '1 year 5 mounth', true),\r\n  createData('Marshmallow', 'ML researcher', 'Research', '0 years 3 mounth', false),\r\n  createData('Nougat', 'Data Engineer', 'ML', '3 years 2 mounth', true),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', alignRight: false, disablePadding: true, label: 'Members' },\r\n  { id: 'position', alignRight: true, disablePadding: false, label: 'Position' },\r\n  { id: 'department', alignRight: true, disablePadding: false, label: 'Department' },\r\n  { id: 'experience', alignRight: true, disablePadding: false, label: 'Experience' },\r\n  { id: 'status', alignRight: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [selectedMember, setSelectedMember] = React.useState(null);\r\n\r\n  const handleCheck = (event, name) =>{\r\n        selectedMember === name ? \r\n        setSelectedMember(null) : setSelectedMember(name)\r\n        \r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedMember === row.name;\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleCheck(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.position}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                          {row.status ? <div className=\"badge badge-success h-auto\">\r\n                                            ACTIVE\r\n                                        </div>:\r\n                                            <div className=\"badge badge-danger h-auto\">\r\n                                                NOT ACTIVE\r\n                                            </div>\r\n                  }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\efficiencyByHoursChart.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\efficiencyByDayChart.js",["295"],{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"296","replacedBy":"300"},{"ruleId":"298","replacedBy":"301"},{"ruleId":"302","severity":1,"message":"303","line":3,"column":27,"nodeType":"304","messageId":"305","endLine":3,"endColumn":33},{"ruleId":"302","severity":1,"message":"306","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":19},{"ruleId":"302","severity":1,"message":"307","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":26},{"ruleId":"302","severity":1,"message":"308","line":42,"column":33,"nodeType":"304","messageId":"305","endLine":42,"endColumn":51},{"ruleId":"302","severity":1,"message":"309","line":43,"column":16,"nodeType":"304","messageId":"305","endLine":43,"endColumn":34},{"ruleId":"302","severity":1,"message":"310","line":43,"column":36,"nodeType":"304","messageId":"305","endLine":43,"endColumn":57},{"ruleId":"302","severity":1,"message":"311","line":45,"column":16,"nodeType":"304","messageId":"305","endLine":45,"endColumn":21},{"ruleId":"302","severity":1,"message":"312","line":45,"column":23,"nodeType":"304","messageId":"305","endLine":45,"endColumn":31},{"ruleId":"313","severity":1,"message":"314","line":60,"column":51,"nodeType":"315","messageId":"316","endLine":60,"endColumn":53},{"ruleId":"313","severity":1,"message":"314","line":61,"column":51,"nodeType":"315","messageId":"316","endLine":61,"endColumn":53},{"ruleId":"302","severity":1,"message":"307","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":26},{"ruleId":"302","severity":1,"message":"317","line":8,"column":48,"nodeType":"304","messageId":"305","endLine":8,"endColumn":57},{"ruleId":"302","severity":1,"message":"318","line":9,"column":10,"nodeType":"304","messageId":"305","endLine":9,"endColumn":38},{"ruleId":"302","severity":1,"message":"319","line":40,"column":12,"nodeType":"304","messageId":"305","endLine":40,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":126,"column":51,"nodeType":"315","messageId":"316","endLine":126,"endColumn":53},{"ruleId":"302","severity":1,"message":"320","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},{"ruleId":"302","severity":1,"message":"321","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":12},{"ruleId":"302","severity":1,"message":"322","line":23,"column":3,"nodeType":"304","messageId":"305","endLine":23,"endColumn":6},{"ruleId":"302","severity":1,"message":"323","line":23,"column":18,"nodeType":"304","messageId":"305","endLine":23,"endColumn":24},{"ruleId":"302","severity":1,"message":"324","line":25,"column":8,"nodeType":"304","messageId":"305","endLine":25,"endColumn":16},{"ruleId":"296","replacedBy":"325"},{"ruleId":"298","replacedBy":"326"},{"ruleId":"302","severity":1,"message":"327","line":1,"column":8,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"328","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"329","line":7,"column":3,"nodeType":"304","messageId":"305","endLine":7,"endColumn":9},{"ruleId":"302","severity":1,"message":"330","line":8,"column":3,"nodeType":"304","messageId":"305","endLine":8,"endColumn":13},{"ruleId":"302","severity":1,"message":"306","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":19},{"ruleId":"302","severity":1,"message":"331","line":4,"column":10,"nodeType":"304","messageId":"305","endLine":4,"endColumn":18},{"ruleId":"302","severity":1,"message":"306","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":19},{"ruleId":"302","severity":1,"message":"331","line":6,"column":10,"nodeType":"304","messageId":"305","endLine":6,"endColumn":18},{"ruleId":"302","severity":1,"message":"332","line":3,"column":70,"nodeType":"304","messageId":"305","endLine":3,"endColumn":84},{"ruleId":"313","severity":1,"message":"314","line":82,"column":42,"nodeType":"315","messageId":"316","endLine":82,"endColumn":44},{"ruleId":"313","severity":1,"message":"314","line":99,"column":34,"nodeType":"315","messageId":"316","endLine":99,"endColumn":36},{"ruleId":"302","severity":1,"message":"333","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"334","line":5,"column":13,"nodeType":"304","messageId":"305","endLine":5,"endColumn":28},{"ruleId":"302","severity":1,"message":"306","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":43,"column":25,"nodeType":"315","messageId":"316","endLine":43,"endColumn":27},{"ruleId":"313","severity":1,"message":"314","line":44,"column":53,"nodeType":"315","messageId":"316","endLine":44,"endColumn":55},{"ruleId":"302","severity":1,"message":"335","line":53,"column":9,"nodeType":"304","messageId":"305","endLine":53,"endColumn":18},{"ruleId":"336","severity":1,"message":"337","line":69,"column":8,"nodeType":"338","endLine":69,"endColumn":23,"suggestions":"339"},{"ruleId":"302","severity":1,"message":"340","line":17,"column":7,"nodeType":"304","messageId":"305","endLine":17,"endColumn":11},{"ruleId":"313","severity":1,"message":"314","line":36,"column":53,"nodeType":"315","messageId":"316","endLine":36,"endColumn":55},{"ruleId":"313","severity":1,"message":"341","line":43,"column":44,"nodeType":"315","messageId":"316","endLine":43,"endColumn":46},{"ruleId":"302","severity":1,"message":"342","line":58,"column":9,"nodeType":"304","messageId":"305","endLine":58,"endColumn":18},{"ruleId":"302","severity":1,"message":"343","line":61,"column":9,"nodeType":"304","messageId":"305","endLine":61,"endColumn":20},{"ruleId":"302","severity":1,"message":"344","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":32},{"ruleId":"302","severity":1,"message":"345","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":33},{"ruleId":"302","severity":1,"message":"346","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":24},{"ruleId":"302","severity":1,"message":"347","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":14},{"ruleId":"302","severity":1,"message":"348","line":5,"column":10,"nodeType":"304","messageId":"305","endLine":5,"endColumn":15},{"ruleId":"302","severity":1,"message":"349","line":5,"column":29,"nodeType":"304","messageId":"305","endLine":5,"endColumn":33},{"ruleId":"302","severity":1,"message":"350","line":16,"column":10,"nodeType":"304","messageId":"305","endLine":16,"endColumn":17},{"ruleId":"313","severity":1,"message":"314","line":111,"column":25,"nodeType":"315","messageId":"316","endLine":111,"endColumn":27},{"ruleId":"313","severity":1,"message":"314","line":112,"column":53,"nodeType":"315","messageId":"316","endLine":112,"endColumn":55},{"ruleId":"313","severity":1,"message":"314","line":124,"column":42,"nodeType":"315","messageId":"316","endLine":124,"endColumn":44},{"ruleId":"336","severity":1,"message":"351","line":135,"column":7,"nodeType":"338","endLine":135,"endColumn":9,"suggestions":"352"},{"ruleId":"313","severity":1,"message":"314","line":174,"column":50,"nodeType":"315","messageId":"316","endLine":174,"endColumn":52},{"ruleId":"302","severity":1,"message":"353","line":383,"column":21,"nodeType":"304","messageId":"305","endLine":383,"endColumn":25},{"ruleId":"302","severity":1,"message":"353","line":392,"column":21,"nodeType":"304","messageId":"305","endLine":392,"endColumn":25},{"ruleId":"313","severity":1,"message":"314","line":423,"column":50,"nodeType":"315","messageId":"316","endLine":423,"endColumn":52},{"ruleId":"302","severity":1,"message":"354","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":73,"column":38,"nodeType":"315","messageId":"316","endLine":73,"endColumn":40},{"ruleId":"302","severity":1,"message":"354","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":82,"column":38,"nodeType":"315","messageId":"316","endLine":82,"endColumn":40},{"ruleId":"302","severity":1,"message":"332","line":2,"column":70,"nodeType":"304","messageId":"305","endLine":2,"endColumn":84},{"ruleId":"302","severity":1,"message":"355","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":24},{"ruleId":"313","severity":1,"message":"314","line":97,"column":34,"nodeType":"315","messageId":"316","endLine":97,"endColumn":36},{"ruleId":"302","severity":1,"message":"356","line":3,"column":10,"nodeType":"304","messageId":"305","endLine":3,"endColumn":25},{"ruleId":"302","severity":1,"message":"357","line":5,"column":16,"nodeType":"304","messageId":"305","endLine":5,"endColumn":20},{"ruleId":"302","severity":1,"message":"358","line":5,"column":22,"nodeType":"304","messageId":"305","endLine":5,"endColumn":33},{"ruleId":"302","severity":1,"message":"359","line":5,"column":35,"nodeType":"304","messageId":"305","endLine":5,"endColumn":41},{"ruleId":"302","severity":1,"message":"360","line":5,"column":43,"nodeType":"304","messageId":"305","endLine":5,"endColumn":50},{"ruleId":"302","severity":1,"message":"361","line":5,"column":63,"nodeType":"304","messageId":"305","endLine":5,"endColumn":71},{"ruleId":"302","severity":1,"message":"362","line":5,"column":73,"nodeType":"304","messageId":"305","endLine":5,"endColumn":83},{"ruleId":"302","severity":1,"message":"363","line":2,"column":10,"nodeType":"304","messageId":"305","endLine":2,"endColumn":14},{"ruleId":"302","severity":1,"message":"323","line":2,"column":16,"nodeType":"304","messageId":"305","endLine":2,"endColumn":22},{"ruleId":"302","severity":1,"message":"364","line":2,"column":24,"nodeType":"304","messageId":"305","endLine":2,"endColumn":32},{"ruleId":"302","severity":1,"message":"365","line":2,"column":34,"nodeType":"304","messageId":"305","endLine":2,"endColumn":39},{"ruleId":"302","severity":1,"message":"366","line":3,"column":26,"nodeType":"304","messageId":"305","endLine":3,"endColumn":42},{"ruleId":"302","severity":1,"message":"367","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":18},{"ruleId":"302","severity":1,"message":"368","line":60,"column":25,"nodeType":"304","messageId":"305","endLine":60,"endColumn":30},{"ruleId":"302","severity":1,"message":"369","line":60,"column":32,"nodeType":"304","messageId":"305","endLine":60,"endColumn":45},{"ruleId":"302","severity":1,"message":"370","line":60,"column":47,"nodeType":"304","messageId":"305","endLine":60,"endColumn":53},{"ruleId":"302","severity":1,"message":"371","line":62,"column":7,"nodeType":"304","messageId":"305","endLine":62,"endColumn":12},{"ruleId":"302","severity":1,"message":"372","line":65,"column":15,"nodeType":"304","messageId":"305","endLine":65,"endColumn":23},{"ruleId":"302","severity":1,"message":"333","line":1,"column":17,"nodeType":"304","messageId":"305","endLine":1,"endColumn":25},{"ruleId":"302","severity":1,"message":"348","line":3,"column":3,"nodeType":"304","messageId":"305","endLine":3,"endColumn":8},{"ruleId":"302","severity":1,"message":"373","line":5,"column":3,"nodeType":"304","messageId":"305","endLine":5,"endColumn":7},{"ruleId":"302","severity":1,"message":"364","line":6,"column":3,"nodeType":"304","messageId":"305","endLine":6,"endColumn":11},{"ruleId":"302","severity":1,"message":"374","line":99,"column":36,"nodeType":"304","messageId":"305","endLine":99,"endColumn":47},{"ruleId":"302","severity":1,"message":"375","line":99,"column":49,"nodeType":"304","messageId":"305","endLine":99,"endColumn":57},{"ruleId":"302","severity":1,"message":"376","line":139,"column":10,"nodeType":"304","messageId":"305","endLine":139,"endColumn":18},{"ruleId":"302","severity":1,"message":"377","line":139,"column":20,"nodeType":"304","messageId":"305","endLine":139,"endColumn":31},{"ruleId":"313","severity":1,"message":"314","line":76,"column":36,"nodeType":"315","messageId":"316","endLine":76,"endColumn":38},"no-native-reassign",["378"],"no-negated-in-lhs",["379"],["378"],["379"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AuthService' is defined but never used.","'Component' is defined but never used.","'setEmailErrMessage' is assigned a value but never used.","'passwordErrMessage' is assigned a value but never used.","'setPasswordErrMessage' is assigned a value but never used.","'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextField' is defined but never used.","'SubdirectoryArrowLeftRounded' is defined but never used.","'message' is assigned a value but never used.","'Hidden' is defined but never used.","'Grow' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'MenuIcon' is defined but never used.",["378"],["379"],"'React' is defined but never used.","'Navbar' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","'Redirect' is defined but never used.","'InputAdornment' is defined but never used.","'useState' is defined but never used.","'employeeService' is defined but never used.","'resetForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["380"],"'json' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'employees' is assigned a value but never used.","'departments' is assigned a value but never used.","'PermIdentityOutlinedIcon' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'Icon' is defined but never used.","'useForm' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["381"],"'name' is assigned a value but never used.","'AlternateEmail' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'MenuItem' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'classnames' is defined but never used.","'color' is assigned a value but never used.","'registrations' is assigned a value but never used.","'bounce' is assigned a value but never used.","'theme' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Menu' is defined but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"386","text":"387"},"Update the dependencies array to be: [userInfo.id]",{"range":"388","text":"389"},[2073,2088],"[recordForEdit, setValues]",[4250,4252],"[userInfo.id]"]