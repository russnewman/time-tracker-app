[{"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js":"1","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js":"2","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js":"3","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js":"4","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js":"5","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js":"6","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js":"7","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js":"8","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js":"9","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js":"10","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js":"11","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js":"12","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js":"13","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js":"14","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js":"15","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js":"16","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js":"17","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js":"18","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js":"19","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js":"20","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js":"21","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js":"22","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js":"23","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js":"24","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js":"25","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js":"26","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js":"27","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js":"28","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js":"29","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js":"30","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js":"31","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js":"32","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js":"33","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js":"34","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js":"35","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js":"36","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js":"37","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js":"38","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js":"39","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js":"40","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\date.js":"41","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js":"42","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js":"43","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js":"44","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js":"45","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js":"46","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageOfTeamSumChart.js":"47","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js":"48","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js":"49","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js":"50","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js":"51","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\tableTeam.js":"52","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Sites.js":"53"},{"size":304,"mtime":1610887316445,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"56","hashOfConfig":"55"},{"size":1269,"mtime":1612089056656,"results":"57","hashOfConfig":"55"},{"size":5898,"mtime":1611599048991,"results":"58","hashOfConfig":"55"},{"size":9421,"mtime":1612079802506,"results":"59","hashOfConfig":"55"},{"size":0,"mtime":1610794371600,"results":"60","hashOfConfig":"55"},{"size":5339,"mtime":1610898212229,"results":"61","hashOfConfig":"55"},{"size":381,"mtime":1611166097561,"results":"62","hashOfConfig":"55"},{"size":1706,"mtime":1612807717210,"results":"63","hashOfConfig":"55"},{"size":1851,"mtime":1612882343373,"results":"64","hashOfConfig":"55"},{"size":842,"mtime":1613625272086,"results":"65","hashOfConfig":"55"},{"size":1213,"mtime":1612429174836,"results":"66","hashOfConfig":"55"},{"size":490,"mtime":1612086572575,"results":"67","hashOfConfig":"55"},{"size":7379,"mtime":1612203965631,"results":"68","hashOfConfig":"55"},{"size":4927,"mtime":1611988694040,"results":"69","hashOfConfig":"55"},{"size":2136,"mtime":1611241978469,"results":"70","hashOfConfig":"55"},{"size":1241,"mtime":1611210764155,"results":"71","hashOfConfig":"55"},{"size":475,"mtime":1611836008938,"results":"72","hashOfConfig":"55"},{"size":875,"mtime":1611215311159,"results":"73","hashOfConfig":"55"},{"size":739,"mtime":1610788731112,"results":"74","hashOfConfig":"55"},{"size":814,"mtime":1610788731113,"results":"75","hashOfConfig":"55"},{"size":753,"mtime":1610788731112,"results":"76","hashOfConfig":"55"},{"size":479,"mtime":1611483274995,"results":"77","hashOfConfig":"55"},{"size":920,"mtime":1610788731115,"results":"78","hashOfConfig":"55"},{"size":802,"mtime":1610788731114,"results":"79","hashOfConfig":"55"},{"size":1031,"mtime":1611491652139,"results":"80","hashOfConfig":"55"},{"size":1380,"mtime":1610788731110,"results":"81","hashOfConfig":"55"},{"size":3885,"mtime":1611209860652,"results":"82","hashOfConfig":"55"},{"size":2471,"mtime":1611847034039,"results":"83","hashOfConfig":"55"},{"size":18310,"mtime":1613629234249,"results":"84","hashOfConfig":"55"},{"size":1100,"mtime":1612102690593,"results":"85","hashOfConfig":"55"},{"size":484,"mtime":1611835645826,"results":"86","hashOfConfig":"55"},{"size":1267,"mtime":1612088461751,"results":"87","hashOfConfig":"55"},{"size":2806,"mtime":1612102694617,"results":"88","hashOfConfig":"55"},{"size":3033,"mtime":1612203960112,"results":"89","hashOfConfig":"55"},{"size":3212,"mtime":1612206748679,"results":"90","hashOfConfig":"55"},{"size":7731,"mtime":1612206560682,"results":"91","hashOfConfig":"55"},{"size":10510,"mtime":1613647396183,"results":"92","hashOfConfig":"55"},{"size":4639,"mtime":1613298681166,"results":"93","hashOfConfig":"55"},{"size":8630,"mtime":1613313768414,"results":"94","hashOfConfig":"55"},{"size":1131,"mtime":1613042796162,"results":"95","hashOfConfig":"55"},{"size":1113,"mtime":1613232908041,"results":"96","hashOfConfig":"55"},{"size":6217,"mtime":1613298402259,"results":"97","hashOfConfig":"55"},{"size":3449,"mtime":1613296318398,"results":"98","hashOfConfig":"55"},{"size":5805,"mtime":1613295392857,"results":"99","hashOfConfig":"55"},{"size":3101,"mtime":1613309144504,"results":"100","hashOfConfig":"55"},{"size":3397,"mtime":1613309310187,"results":"101","hashOfConfig":"55"},{"size":3434,"mtime":1613309139562,"results":"102","hashOfConfig":"55"},{"size":8746,"mtime":1613309130286,"results":"103","hashOfConfig":"55"},{"size":6203,"mtime":1613309183016,"results":"104","hashOfConfig":"55"},{"size":3437,"mtime":1613309502647,"results":"105","hashOfConfig":"55"},{"size":10475,"mtime":1613644737015,"results":"106","hashOfConfig":"55"},{"size":11572,"mtime":1613646970534,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1xyr1rt",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"110"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"110"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js",[],["245","246"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js",[],["247","248"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js",["249","250"],"import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport AuthService from \"./services/auth.service\"\n\n\nimport Dashboard from './pages/dashboard';\nimport Employees from './pages/employees';\nimport Profile from './pages/profile';\nimport Leaders from './pages/leaders';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  render(){\n    return (\n\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path=\"/sign-in\" component={Login} />\n                  <Route path=\"/sign-up\" component={SignUp} />\n                  <Route path='/dashboard'>\n                    <Dashboard/>\n                  </Route>\n                  <Route path='/employees' component={Employees}/>\n                  <Route path='/leaders' component={Leaders}/>\n                  <Route path='/profile'>\n                    <Profile/>\n                  </Route>\n                </Switch>      \n    );\n  }\n}\n\nexport default App;","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js",["251","252","253","254","255","256","257","258"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    buuttonSignIn: {\r\n        width: '100%',\r\n        margin: theme.spacing(2),\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignIn(props){\r\n\r\n        const  classes  = styles();\r\n\r\n        const [email, setEmail] = React.useState(\"\")\r\n        const [password, setPassword] = React.useState(\"\")\r\n        const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n        const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n        const [redirect, setRedirect] = React.useState(null)\r\n        const [valid, setValid] = React.useState(false)\r\n        const [notify, setNotify] = \r\n        React.useState(props && props.location && props.location.state && props.location.state.notify ? \r\n            {isOpen: true, message: 'You are successfully registered', type: \"success\"}\r\n            :{ isOpen: false, message: '', type: '' })\r\n\r\n        const handleSubmit = (e)=>{\r\n            e.preventDefault()\r\n            AuthService.login(email, password)\r\n                .then(()=>{\r\n                    setRedirect(\"/dashboard\")\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 401) resMessage = \"Bad credentials\"\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                    }\r\n                    else{\r\n                        resMessage = \"Server is not available\"\r\n                    }\r\n                    setNotify({\r\n                        isOpen:true,\r\n                        message:resMessage,\r\n                        type: 'error'})\r\n                  }\r\n                );\r\n        }\r\n\r\n        const handleChangeEmail = (e)=>{\r\n            setEmail(e.target.value)\r\n        }\r\n        \r\n        const handleChangePassword = (e) =>{\r\n            setPassword(e.target.value)\r\n        }\r\n\r\n        if (redirect){\r\n            return(\r\n            <div>\r\n                {/* <Switch>\r\n                <Route exact path='/dashboard'>\r\n                    <Dashboard/>\r\n                  </Route>\r\n                  <Route path='/profile'>\r\n                    <Profile/>\r\n                  </Route>\r\n                  </Switch> */}\r\n                 <Redirect to={redirect}/>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner-singin\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid  container justify=\"center\">\r\n                        <Grid item >\r\n                            <TextField required  \r\n                            label=\"Email\" \r\n                            style={{width: '100%'}}\r\n                                margin=\"normal\" \r\n                                onChange={handleChangeEmail}\r\n                                helperText={emailErrMessage}/>\r\n                            <TextField required  label=\"Password\" style={{width: '100%'}} type=\"password\"\r\n                                margin=\"normal\" onChange={handleChangePassword}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container  justify=\"center\" md={12}>\r\n                        {/* <Link to={\"/dashboard\"} variant=\"body2\"> */}\r\n                            <Button className={classes.buuttonSignIn} variant=\"contained\" color=\"primary\" type=\"submit\">Sign In</Button>    \r\n                        {/* </Link> */}\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        {/* <Grid item>\r\n                                <Link to={\"/sign-in\"} variant=\"body2\">\r\n                                    <Typography variant=\"caption\">\r\n                                        Forgot password?\r\n                                    </Typography>\r\n                                </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link to={\"/sign-up\"} variant=\"body2\">\r\n\r\n                                    <Typography variant=\"caption\">\r\n                                        Don't have an account? Sign up.\r\n                                    </Typography>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js",["259","260","261","262","263"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, InputLabel, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { SubdirectoryArrowLeftRounded } from \"@material-ui/icons\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n    //   margin: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n  }));\r\n\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [redirect, setRedirect] = React.useState('');\r\n\r\n    const [fullName, setFullName] = React.useState(null);\r\n    const [email, setEmail] = React.useState(null);\r\n    const [password, setPassword] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [position, setPosition] = React.useState(null);\r\n    const [role, setRole] = React.useState(null);\r\n\r\n    const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n    const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n    const [valid, setValid] = React.useState(false)\r\n    const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const emailValidate = (emailValue) => {\r\n        let err = \"\"\r\n        if ((/$^|.+@.+..+/).test(emailValue)){\r\n            err = \"\"\r\n            setValid(true)\r\n        }\r\n        else{\r\n            err=\"Email is no valid\"\r\n            setValid(false)\r\n        }\r\n        setEmailErrMessage(err)\r\n    }\r\n\r\n    const passwordValidate = (passwordValue) => {\r\n        let err = \"\"\r\n        if (passwordValue.length >= 6 || passwordValue.length < 1){\r\n            err = \"\"\r\n            setValid(true) \r\n        }\r\n        else{\r\n            err = \"Password should consist more than 6 symbols\"\r\n            setValid(false)\r\n        }   \r\n        setPasswordErrMessage(err)\r\n    }\r\n\r\n\r\n    const handleFullNameChange = (event) => {\r\n        setFullName(event.target.value)\r\n    }\r\n\r\n    const handlePositionChange = (event) => {\r\n        setPosition(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event) =>{\r\n        emailValidate(event.target.value)\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) =>{\r\n        passwordValidate(event.target.value)\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleDepartmentChange = (event)=>{\r\n        setDepartment(event.target.value)\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n      setRole(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(valid){\r\n            AuthService.register(\r\n                email,\r\n                password,\r\n                fullName,\r\n                department,\r\n                position,\r\n                role\r\n            )\r\n            .then((response)=>{\r\n                    setRedirect(\"/dashboard\")\r\n                    console.log(response)\r\n\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                        else resMessage = error.response.data.message\r\n                    }\r\n                    else resMessage=\"Server is not available\"\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: resMessage,\r\n                        type: \"error\"\r\n                    })\r\n                    \r\n                    setMessage(resMessage);\r\n                })\r\n        }\r\n    }\r\n    if(redirect){        \r\n        return (\r\n            <div>\r\n                <Redirect to={redirect}/>\r\n                {/* <Redirect to={{\r\n                        pathname: redirect,\r\n                        state: {\r\n                            notify: true\r\n                        }\r\n                    }}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n    <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner-singup\">\r\n\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input\r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Email\" \r\n                            margin=\"normal\"\r\n                            onChange={handleEmailChange}\r\n                            error={emailErrMessage}\r\n                            errorText=\"table\"\r\n                            errorStyle=\"relative\"/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                                \r\n                                <Controls.Input \r\n                                    required \r\n                                    margin=\"normal\"\r\n                                    className={classes.inputField}\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={handlePasswordChange}\r\n                                    error={passwordErrMessage}\r\n                                />\r\n                        </Grid>\r\n                        \r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Full name\"  \r\n                            margin=\"normal\"\r\n                            onChange={handleFullNameChange}/>\r\n                                {/* <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" /> */}\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n \r\n                            className={classes.inputField} \r\n                            label=\"Department\" \r\n                            margin=\"normal\"\r\n                            onChange={handleDepartmentChange}/>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <FormControl \r\n                                margin=\"normal\" \r\n                                className={classes.formControl}>\r\n                                    <InputLabel required>Position type</InputLabel>\r\n                                    <Select\r\n                                    value={role}\r\n                                    onChange={handleRoleChange}\r\n                                    >\r\n                                        <MenuItem value={\"leader\"}>Leader</MenuItem>\r\n                                        <MenuItem value={\"employee\"}>Employee</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            className={classes.inputField} \r\n                            label=\"Position\" \r\n                            margin=\"normal\"\r\n                            onChange={handlePositionChange}/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container md={12} >\r\n                            <Button variant=\"contained\" color=\"primary\" style={{width: '100%'}} type=\"submit\">Sign Up</Button>    \r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                        <Link to={\"/sign-in\"} variant=\"body2\">\r\n                            <Typography variant=\"caption\">\r\n                                Already have an account? Sign in\r\n                            </Typography>\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js",["264","265","266","267","268"],"import React from 'react';\r\n\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography,\r\n  Container, \r\n  IconButton, \r\n  Button,\r\n  Box, MenuItem, Select\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    route:{\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1)\r\n    }, \r\n    title: { \r\n      flexGrow: 1\r\n    },\r\n  }))\r\n\r\nexport default function TopBar(props) {\r\n        const classes = useStyles();\r\n        const [openProfile, setOpenProfile] = React.useState(null);\r\n        const handleClickProfile = event => {\r\n          if (openProfile && openProfile.contains(event.target)) {\r\n            setOpenProfile(null);\r\n          } else {\r\n            setOpenProfile(event.currentTarget);\r\n          }\r\n        };\r\n        const handleCloseProfile = () => {\r\n          setOpenProfile(null);\r\n        };\r\n    \r\n        return(\r\n            <>\r\n                <AppBar position=\"fixed\">\r\n                        <Container fixed>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\r\n                            </IconButton>\r\n                            {/* Компонент куда записываем текст */}\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                            Time Tracker\r\n                            </Typography>\r\n                            {/* <Box mr={3}>\r\n                            <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\r\n                            </Box> */}\r\n                            {/* <Button color=\"secondary\" variant=\"contained\">Sign Up</Button> */}\r\n                            <div className={classes.manager}>\r\n                                <Button\r\n                                    style={{color:\"black\"}}\r\n                                    onClick={handleClickProfile}\r\n                                    className={classes.buttonLink}\r\n                                >\r\n                                    <Person style={{color:\"black\"}}className={classes.icons} />\r\n                                </Button>\r\n                                <Poppers\r\n                                    open={Boolean(openProfile)}\r\n                                    anchorEl={openProfile}\r\n                                    transition\r\n                                    disablePortal\r\n                                >\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                                        <MenuList role=\"menu\">\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-in\"} style={{color:\"black\"}}>\r\n                                                    Log in\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-up\"} style={{color:\"black\"}}>\r\n                                                        Sign up\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <Divider light />\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                \r\n                                            Forgot password\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                    // </Grow>\r\n                                )}\r\n                                </Poppers>\r\n                            </div>\r\n\r\n                            \r\n                        </Toolbar>\r\n                        </Container>\r\n                </AppBar>\r\n            </>\r\n        )\r\n}\r\n",["269","270"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js",["271","272"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         height: '90vh'\r\n//       }}\r\n//     >\r\n//       <h1>Home</h1>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js",["273","274"],"import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\"\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    // position: 'fixed',\r\n    // top: '0px',\r\n    // width: '100%',\r\n    // marginBottom:theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst handleLogOut = e =>{\r\n  AuthService.logout()\r\n}\r\n\r\nconst Navbar = () => {\r\n  // const user = AuthService.getCurrentUser().userInfo;\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Nav  className={classes.navbar}>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to='/dashboard' activeStyle>\r\n            Dashboard\r\n          </NavLink>\r\n\r\n          {/* {user.userRole === \"LEADER\" ?\r\n              (<NavLink to='/employees' activeStyle>\r\n                Employees\r\n              </NavLink>)\r\n              :\r\n              (<NavLink to='/leaders' activeStyle>\r\n                Managers\r\n              </NavLink>)\r\n          } */}\r\n          <NavLink to='/profile' activeStyle>\r\n            Profile\r\n          </NavLink>\r\n        </NavMenu>\r\n\r\n        {/* <Link to={\"/dashboard\"} variant=\"body2\">\r\n                            <Button  variant=\"contained\" color=\"primary\">Sign Out</Button>    \r\n                        </Link> */}\r\n\r\n          <Link to={'/sign-in'} variant=\"body2\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>Sign Out</Button>   \r\n          </Link>\r\n\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js",["275","276","277"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js",["278","279"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport EmployeesComponent from './Employees/EmployeesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#333996\",\r\n      light: '#3c44b126'\r\n    },\r\n    secondary: {\r\n      main: \"#f83245\",\r\n      light: '#f8324526'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  },\r\n  overrides:{\r\n    MuiAppBar:{\r\n      root:{\r\n        transform:'translateZ(0)'\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    MuiIconButton:{\r\n      disableRipple:true\r\n    }\r\n  }\r\n})\r\n\r\nconst Employees = () => {\r\n\r\n  // const user = AuthService.getCurrentUser();\r\n\r\n\r\n  // if(user && user.userInfo.userRole === \"LEADER\"){\r\n    return (\r\n      <>\r\n      <Navbar position=\"fixed\"/>\r\n      <ThemeProvider theme={theme}>        \r\n        <EmployeesComponent/>\r\n      </ThemeProvider>\r\n      </>\r\n    );\r\n  // }\r\n  // else if (user && user.userInfo.userRole === \"EMPLOYEE\") return(<div/>)\r\n  // return (<Redirect to =\"sign-in\"/>)\r\n};\r\n\r\nexport default Employees;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js",["280","281","282"],"import React, { useState, useEffect } from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nimport Notification from \"../../components/employees/Notification\";\r\nimport ConfirmDialog from \"../../components/employees/ConfirmDialog\";\r\nimport Popup from \"../../components/employees/Popup\";\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport useTable from \"../../components/employees/useTable\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport ManagerService from \"../../services/manager.service\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        // width: '100%',\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(3),\r\n\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(1),\r\n        // top: '60px',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        // top: '40px',\r\n        // marginTop: theme.spacing(3),\r\n      }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'fullName', label: 'Employee Name' },\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'position', label: 'Position' },\r\n    { id: 'actions', disableSorting: true }\r\n\r\n]\r\n\r\nexport default function EmployeesComponent() {\r\n\r\n    // let [employeeArr, setEmployeeArr] = useState(AuthService.getCurrentUser().employees)\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState(AuthService.getCurrentUser().employees)\r\n\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n\r\n    useEffect(()=>{\r\n        ManagerService.getEmployeesRest()\r\n        .then((response) =>{        \r\n            console.log(\"ASd\",response.status)\r\n            setRecords(response)\r\n        },\r\n        error =>{\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateEmployee = (employeeInfo) => {\r\n        setOpenPopup(false)\r\n        setRecords(ManagerService.updateEmployeeInfo(employeeInfo))\r\n        ManagerService.updateEmployeeInfoRest(employeeInfo)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = employeeId => {\r\n\r\n        setRecords(ManagerService.deleteEmployee(employeeId))\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n        ManagerService.deleteEmployeeRest(employeeId)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Employees\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    <TableCell>\r\n\r\n                                        {/* //Кнопка редактирования */}\r\n                                        <Controls.ActionButton\r\n                                            color=\"primary\"\r\n                                            onClick={() => { openInPopup(item) }}>\r\n                                            <InfoOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n\r\n                                        {/* кнопка удаления */}\r\n                                        <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => { onDelete(item.id) }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n\r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n\r\n            <Popup\r\n                title=\"Employee full inforamtion\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n                <EmployeeForm\r\n                    recordForEdit={recordForEdit}\r\n                    updateEmployee={updateEmployee} />\r\n            </Popup>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js",["283","284","285","286","287","288","289"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport { useForm, Form } from '../../components/employees/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'MALE', title: 'Male' },\r\n    { id: 'FEMALE', title: 'Female' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    department: '',\r\n    position: '',\r\n    gender: 'male',\r\n    hireDate: new Date(),\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { updateEmployee, recordForEdit } = props\r\n    // const [userInfo, setUserInfo] = useState(Auth)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    // console.log(initialFValues)\r\n\r\n    // console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateEmployee(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={values.department}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Position\"\r\n                        name=\"position\"\r\n                        value={values.position}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    {/* <Controls.OutlinedInput\r\n                        name=\"mobile\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        // options={employeeService.getDepartmentCollection()}\r\n                        error={errors.mobile}\r\n                    /> */}\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" \r\n                            color=\"secondary\"/>\r\n                        {/* <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} /> */}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js",["290","291","292","293","294"],"const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nlet data = {\r\n    city: \"dfgdsfhtrjrjf\",\r\n    email: \"sdfsdgdfherhe@dsfgdfg\",\r\n    fullName: \"dfgdfgdf\",\r\n    gender: \"male\",\r\n    hireDate: \"2021-01-20T19:08:16.404Z\",\r\n    id: 12,\r\n    isPermanent: false,\r\n    mobile: \"3453453542\",\r\n  };\r\n  \r\n  let json = JSON.stringify(data);\r\n  let arr = [];\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    // let employees = JSON.parse(json)\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    arr.push(data)\r\n    // console.log(employees)\r\n    // console.log(arr)\r\n\r\n\r\n    // return employees.map(x => ({\r\n    //     ...x,\r\n    //     department: departments[x.departmentId - 1].title\r\n    // }))\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js",["295","296"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                    {/* < PermIdentityOutlinedIcon/> */}\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js",["297","298","299","300","301","302","303","304","305","306","307","308","309"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js",["310"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\nclass User{\r\n\r\n\r\n    getUserInfo(userId){\r\n        return axios.get(API_URL + \"/getUserInfo\",{ \r\n                                                    params:{userId:userId},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                  })\r\n        .then(response =>{\r\n            if (response.data.id){\r\n                let user = JSON.parse(sessionStorage.getItem('user'))\r\n                response.data.token = user.userInfo.token;\r\n                user.userInfo = response.data\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n            }\r\n            return response.data\r\n        })\r\n    }\r\n\r\n    updateUserInfo(newUserInfo) {\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        user.userInfo = newUserInfo\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        console.log(\"USER\",user)\r\n\r\n        return axios.post(API_URL + \"/update/info\", newUserInfo, this.config())\r\n        .then(response => {\r\n            return response.data})\r\n    }\r\n\r\n    updateUserPassword(body){\r\n        return axios.post(API_URL + \"/update/password\", body, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new User()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js",["311"],"// import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\n\r\n\r\nclass Manager{\r\n\r\n    getEmployeesRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getEmployees\",{ \r\n                                                    params:{userId:user.userInfo.id},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n            .then(response =>{\r\n                    user.employees = response.data\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                    return response.data}\r\n            )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n\r\n    updateEmployeeInfoRest(employeeInfo){    \r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n    \r\n    deleteEmployeeRest(employeeId){\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new Manager()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js",["312","313"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\n\r\n\r\nclass EmployeeService{\r\n\r\n\r\n\r\n    \r\n    getAllManagersRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getAllManagers\",{headers: {Authorization: \"Bearer \"+ this.getToken()}})\r\n                .then(response =>{\r\n                        user.managers = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    getManagerRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getManager\",{ \r\n                                                        params:{userId:user.userInfo.id},\r\n                                                        headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n                .then(response =>{\r\n                        user.userManager = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    chooseManagerRest(manager){\r\n         let user = AuthService.getCurrentUser();\r\n         user.userManager = manager;\r\n         sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n         let body = {\r\n             \"userId\": user.userInfo.id,\r\n             \"managerId\": manager.id\r\n         }\r\n\r\n         return axios.post(API_URL + \"/addManager\", body, this.config())\r\n         .then((response) => {return this.buildNotification(response)},\r\n            (error) => {return this.buildErrorNotification(error)})\r\n    }\r\n\r\n    deleteManagerRest(){\r\n        let user = AuthService.getCurrentUser();\r\n        user.userManager = null;\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        let body = {\r\n            \"userId\": user.userInfo.id,\r\n        }\r\n\r\n        return axios.post(API_URL + \"/deleteManager\", body, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    getUserManger(){\r\n        return JSON.parse(sessionStorage.getItem(\"user\")).userManager\r\n    }\r\n\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js",["314","315","316"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Toolbar, InputAdornment } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\n\r\nimport Notification from \"../components/employees/Notification\";\r\nimport ConfirmDialog from \"../components/employees/ConfirmDialog\";\r\nimport Controls from \"../components/employees/controls/Controls\";\r\nimport useTable from \"../components/employees/useTable\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport EmployeeService from \"../services/employee.service\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        // width: '100%',\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(3),\r\n\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        // position: 'fixed',\r\n        // marginTop: theme.spacing(1),\r\n        // top: '60px',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        // top: '40px',\r\n        // marginTop: theme.spacing(3),\r\n      }\r\n}))\r\n\r\nconst headCells = [\r\n    { id: 'email', label: 'Email Address' },\r\n    { id: 'fullName', label: 'Leader Name' },\r\n    { id: 'department', label: 'Department' },\r\n    { id: 'position', label: 'Position' },\r\n    { id: 'actions', disableSorting: true }\r\n]\r\n\r\nexport default function LeadersComponent() {\r\n\r\n    const [records, setRecords] = useState(AuthService.getCurrentUser().managers)\r\n\r\n    const classes = useStyles();\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [userManager, setUserManager ]=useState(AuthService.getCurrentUser().userManager)\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    useEffect(()=>{\r\n        EmployeeService.getManagerRest()\r\n        .then((response) =>{\r\n            setUserManager(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n\r\n        EmployeeService.getAllManagersRest()\r\n        .then((response) =>{\r\n            setRecords(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.email.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const chooseManager = (item) => {\r\n        setUserManager(item)\r\n        EmployeeService.chooseManagerRest(item)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const deleteManager = () => {\r\n        setUserManager(null)\r\n        EmployeeService.deleteManagerRest()\r\n        .then((response) => {\r\n            setNotify(response)})\r\n\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    if(userManager){\r\n        return(\r\n            <>\r\n            <Paper className={classes.pageContent}>\r\n                <h4>Your manager</h4>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        <TableRow key={userManager.id}>\r\n                            <TableCell>{userManager.email}</TableCell>\r\n                            <TableCell>{userManager.fullName}</TableCell>\r\n                            <TableCell>{userManager.department}</TableCell>\r\n                            <TableCell>{userManager.position}</TableCell>\r\n                            \r\n                            <TableCell>\r\n                            <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => {deleteManager() }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </TblContainer>\r\n            </Paper>\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            </>\r\n        )\r\n    }\r\n    else\r\n    return (\r\n        <>\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search manager by email\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((item, index )=>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    \r\n                                    <TableCell>\r\n\r\n                                        <Controls.ActionButton\r\n                                                color=\"primary\"\r\n                                                onClick={() => { chooseManager(item) }}>\r\n                                        <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js",["317","318","319","320"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js",["321","322","323","324","325","326","327","328","329","330","331","332","333"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input, Typography, Card } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classnames from \"classnames\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\n\r\n\r\nconst useStyles =  makeStyles((theme) => ({\r\n  totalValueContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  card:{\r\n    boxShadow: \"0px 7px 20px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"20px\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  title:{\r\n    paddingTop: theme.spacing(2),\r\n    // paddingBottom: theme.spacing(2),\r\n  },\r\n  profitEffectiveArrow: {\r\n    transform: \"rotate(-45deg)\",\r\n    fill: theme.palette.success.main,\r\n  },\r\n  profitEffectiveArrowDanger: {\r\n    transform: \"rotate(45deg)\",\r\n    fill: theme.palette.secondary.main,\r\n  },\r\n  profitArrowIneffectiveDanger: {\r\n    transform: \"rotate(-45deg)\",\r\n    fill: theme.palette.secondary.main,\r\n  },\r\n  profitArrowIneffective: {\r\n    transform: \"rotate(45deg)\",\r\n    fill: theme.palette.success.main,\r\n  },\r\n\r\n  totalValue: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  bottomTypography:{\r\n    fontWeight: '600',\r\n    fontSize: '12px',\r\n    fontFamily: 'Poppins, sans-serif'\r\n  },\r\n  bottomStatsContainer:{\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function BigStat(props) {\r\n  var { product, total, color, registrations, bounce } = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n          <div className={classes.title}>\r\n            <Typography style={{fontFamily: 'Poppins, sans-serif', fontWeight: '600',}} variant=\"h5\">{product}</Typography>\r\n          </div>\r\n        <div className={classes.totalValueContainer}>\r\n          <div className={classes.totalValue}>\r\n            <Typography variant=\"h3\" style={{fontFamily: 'Poppins, sans-serif', marginRight:'12px', fontWeight: '900'}}>\r\n              {total[value]}h \r\n            </Typography>\r\n            <Typography> </Typography>\r\n              {total.percent.profit\r\n            ? \r\n            <Typography style={{color:\"#00cc65\"}}>\r\n                +{total.percent.value}%\r\n            </Typography> : \r\n            <Typography style={{color:\"crimson\"}}>\r\n                -{total.percent.value}%\r\n              </Typography>}\r\n          </div>\r\n          {/* <BarChart width={150} height={70} data={getRandomData()}>\r\n            <Bar\r\n              dataKey=\"value\"\r\n              fill=\"#f50057\"\r\n              radius={10}\r\n              barSize={10}\r\n            />\r\n          </BarChart> */}\r\n        </div>\r\n\r\n        <div className={classes.bottomStatsContainer}>\r\n          <div>\r\n            <Grid container alignItems=\"center\">\r\n              <Typography variant=\"h6\" style={{marginRight: '2px'}}>{registrations[value].value}%</Typography>\r\n              <ArrowUpwardIcon style={{color:'#00cc65'}}\r\n              />\r\n            </Grid>\r\n            <Typography className={classes.bottomTypography}>\r\n              Effective\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Grid container alignItems=\"center\">\r\n                <Typography variant=\"h6\" style={{marginRight: '2px'}}>{registrations[value].value * 1.2}%</Typography>\r\n                <ArrowUpwardIcon \r\n                />\r\n              </Grid>\r\n              <Typography className={classes.bottomTypography}>\r\n                Neutral\r\n              </Typography>\r\n            </div>\r\n            <div>\r\n            <Grid container alignItems=\"center\">\r\n                <Typography variant=\"h6\" style={{marginRight: '2px'}}>{registrations[value].value * 0.3}%</Typography>\r\n                <ArrowUpwardIcon style={{color:'crimson'}}\r\n                />\r\n              </Grid>\r\n              <Typography className={classes.bottomTypography}>\r\n                Inneffective\r\n              </Typography>\r\n            </div>\r\n        </div>\r\n\r\n      </Card>\r\n  );\r\n}\r\n\r\nfunction getRandomData() {\r\n  return Array(7)\r\n    .fill()\r\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\n\r\nconst dataA = [43,23,34,25,53,12,34,13, 23, 20, 8, 13, 27,31,37,24,28,20,10,19,16,14,19,54]\r\nconst dataB = [13,23,20,8,13,27,31,37,24,28,20,10,19,27,31,37,24,28,20,10,19,16,14,19,54]\r\nconst dataC = [11,17,15,15,21,14,14,17,22,20,15,31,9, 13, 23, 20, 8, 13, 27,31,37,24,28,20,47]\r\nconst categories = [['00:00 - 01:00'],['01:00 - 2:00'], ['02:00 - 3:00'],['03:00 - 04:00'],['04:00 - 5:00'],['05:00 - 6:00'],['06:00 - 7:00'],\r\n['07:00 - 8:00'],['08:00 - 9:00'],['09:00 - 10:00'], ['10:00 - 11.00'], ['11:00 - 12:00'], ['12:00 - 13:00'],\r\n['13:00 - 14:00'], ['14:00 - 15:00'],['15.00 - 16:00'],['16.00 - 17:00'],['17.00 - 18:00'],\r\n['18.00 - 19:00'],['19.00 - 20:00'],['20.00 - 21:00'], ['21.00 - 22:00'], ['22.00 - 23:00'],['23.00 - 00:00']]\r\n\r\n  const seriesEffectiveDay =  [{\r\n        name: 'Effective',\r\n        data: dataA.slice(8, 20)\r\n  }]\r\n      \r\n  const seriesIneffectiveDay =  [{\r\n    name: 'Ineffective',\r\n    data: dataB.slice(8, 20)\r\n  }]\r\n\r\n  const seriesNeutralDay =  [{\r\n    name: 'Neutral',\r\n    data: dataC.slice(8, 20)\r\n  }]\r\n\r\n  const optionsEffective = {\r\n    chart: {\r\n      id: 'effective',\r\n      type: 'line',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      // colors :['#80ffdb'],\r\n      // foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 800,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n      \r\n      },\r\n      toolbar:{show: false}\r\n    },\r\n\r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {enabled: false},\r\n    legend: {show: false},\r\n    xaxis: {categories: categories.slice(8,20)},\r\n\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n\r\n    \r\n    stroke: {curve: 'smooth'},\r\n    fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n              shadeIntensity: 1,\r\n              inverseColors: false,\r\n              opacityFrom: 0.45,\r\n              opacityTo: 0.05,\r\n              stops: [70, 100, 40, 20]\r\n            },\r\n        }\r\n  }\r\n\r\n\r\n  const optionsIneffectiveDay = {\r\n      series: seriesIneffectiveDay,\r\n      colors: ['#000C77'],\r\n  }\r\n\r\n  const optionsNeutralDay = {\r\n      series: seriesNeutralDay,\r\n      colors: ['#56cfe1']\r\n  }\r\n    \r\n  const seriesEffectiveWeek =  [{\r\n    name: 'Effective',\r\n    data: [44, 55, 41, 67, 22, 13,12]\r\n  }]\r\n\r\n\r\n  const optionsEffectiveWeek = {\r\n    series: seriesEffectiveWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'h' },\r\n      },\r\n    },\r\n    colors :['#80ffdb'],\r\n  }\r\n\r\n\r\n  const optionsEffectiveDay = {\r\n    series: seriesEffectiveDay,\r\n    xaxis: {\r\n      categories: categories.slice(8,20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n    colors :['#80ffdb']\r\n\r\n  }\r\n\r\n\r\n  const seriesMix = [{\r\n    name: 'Effective',\r\n    data: dataA.slice(8, 20)\r\n  },{\r\n    name: 'Neutral',\r\n    data: dataB.slice(8, 20)\r\n  },{\r\n    name: 'Ineffective',\r\n    data: dataC.slice(8, 20)\r\n  }]\r\n\r\n  const optionsMixDay = {\r\n    series: seriesMix,\r\n    chart: {\r\n      id: 'effective',\r\n      type: 'line',\r\n      stacked: false,\r\n      height: 350,\r\n      zoom: {\r\n        enabled: false\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8,20)\r\n    },\r\n\r\n    colors :['springgreen', 'blue', 'red'],\r\n  }\r\n\r\n\r\n\r\nexport default function EffectiveLineChart(props){\r\n\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    const [effectiveType, setEffectiveType] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'Effective',\r\n          data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"effective\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        if (beginInd == 12) return\r\n\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'Effective',\r\n            data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n          }],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', newOptions, true)\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n\r\n      let optionsEffective;\r\n      let optionsNeutral;\r\n      let optionsIneffective;\r\n      let optionsMix;\r\n    \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod && effectiveType == props.effectiveType){return}\r\n\r\n      if(props.timePeriod == 2){\r\n        optionsEffective = optionsEffectiveWeek\r\n        ///!!!\r\n        optionsNeutral = optionsNeutralDay\r\n        optionsIneffective = optionsIneffectiveDay\r\n        optionsMix = optionsMixDay\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        optionsEffective = optionsEffectiveDay\r\n        ///!!!\r\n        optionsNeutral = optionsNeutralDay\r\n        optionsIneffective = optionsIneffectiveDay\r\n        optionsMix = optionsMixDay\r\n\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      if(props.effectiveType == 1){\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', optionsEffective, true)  \r\n        setEffectiveType(1)\r\n      }\r\n      else if(props.effectiveType == 2){\r\n        ReactApexChart.exec(\"effective\", 'updateOptions', optionsNeutral, true)  \r\n        setEffectiveType(2)\r\n      }\r\n      else if(props.effectiveType == 3){\r\n        ReactApexChart.exec('effective', 'updateOptions', optionsIneffective, true)\r\n        setEffectiveType(3)  \r\n      }\r\n      // else if(props.effectiveType == 4){\r\n      //   ReactApexChart.exec('effective', 'updateOptions', optionsMix, true)\r\n      //   setEffectiveType(4)  \r\n      // }\r\n         \r\n    });\r\n    return(\r\n      <div>\r\n          {/* {effectiveType === 4 ? <Chart options={opt}></Chart>} */}\r\n          <Chart options={optionsEffective} series={seriesEffectiveDay} type=\"area\" height={370}  width={1225}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n          <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n          <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n        </div>) : (<div></div>)}\r\n\r\n      </div>\r\n    )\r\n  }","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\date.js",["352","353"],"import 'date-fns';\r\nimport React from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\nexport default function MaterialUIPickers() {\r\n\r\n  // const classes = styles()\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} MenuProps={{ disableScrollLock: true }} >\r\n        <KeyboardDatePicker style={{width:'172px'}} MenuProps={{ disableScrollLock: true }}\r\n        disableToolbar\r\n        // variant=\"inline\"\r\n        inputVariant=\"outlined\"\r\n          // margin=\"2px\"\r\n          id=\"date-picker-dialog\"\r\n          // label=\"Date\"\r\n          format=\"MM/dd/yyyy\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          // KeyboardButtonProps={{\r\n          //   'aria-label': 'change date',\r\n          // }}\r\n        />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js",["354","355"],"import { Typography} from '@material-ui/core';\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    roboto:{\r\n        fontWeight: '400',\r\n        fontSize: '14px',\r\n        fontFamily: 'Roboto, sans-serif',\r\n    },\r\n    popins:{\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    poppinsDefault:{\r\n        fontWeight: '900',\r\n        fontSize: '16px',\r\n        fontFamily: 'Poppins, sans-serif'\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport default function MuiTypography(props){\r\n    const {value, font, weight, className, style, variant} = props\r\n    console.log(\"VAR\",variant)\r\n    const classes = styles()\r\n    if (className){\r\n        return <Typography className={className} style={style} variant={variant}>{value}</Typography>\r\n    }\r\n    if (font === 'poppins'){\r\n        return (<Typography variant={variant} className={classes.popins} style={style}>{value}</Typography>)\r\n    }\r\n    return (<Typography className={classes.roboto} style={style} variant={variant}>{value}</Typography>)\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js",["356","357","358","359","360","361"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\nconst dataEffective = [3.5,3,1.1,1.5,4.3,3.7,2.1,2.2, 2.3, 2, 0.8, 0.3]\r\nconst dataNeutral = [1.3,2.3,2,0.8,1.3,2.7,3.1,1.7,1.4,0.7,1,1]\r\nconst dataIneffective = [1.1,1.2,1.5,1.5,2.1,1.4,1.4,1.7,1.2,1.0,1.1,1.1]\r\nconst categories = [['Cupcake'],['Donut'], ['Eclair'],['Frozen yoghurt'],['Gingerbread'],['Honeycomb'],['Ice cream sandwich'],\r\n['Jelly Bean'],['KitKat'],['Lollipop'], ['Marshmallow'], ['Nougat']]\r\n\r\nconst series =  [{\r\n    name: 'Effective',\r\n    data: dataEffective.slice(0,6)\r\n  }, {\r\n    name: 'Neutral',\r\n    data: dataNeutral.slice(0,6)\r\n  }, {\r\n    name: 'Ineffective',\r\n    data: dataIneffective.slice(0,6)\r\n  }]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'efficiencyOfEmployees',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      // stackType: '100%',\r\n    //   foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n        categories: categories.slice(0, 6),\r\n        labels: {rotate: -45}\r\n    }\r\n    ,\r\n    yaxis:{\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'h' },\r\n      },\r\n    },\r\n  \r\n    fill: {\r\n      colors: ['#000C77', '#56cfe1', '#80ffdb'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\n  const dataEffectiveWeek = [23,23,24,25,13,12,14,13, 23, 20, 8, 13]\r\n  const dataNeutralWeek = [13,23,20,8,13,27,31,17,14,8,10,10]\r\n  const dataIneffectiveWeek = [11,12,15,15,21,14,14,17,12,10,11,11]\r\n\r\nconst seriesWeek =  [{\r\n    name: 'Effective',\r\n    data: dataEffectiveWeek.slice(0,6)\r\n  }, {\r\n    name: 'Neutral',\r\n    data: dataNeutralWeek.slice(0,6)\r\n  }, {\r\n    name: 'Ineffective',\r\n    data: dataIneffectiveWeek.slice(0,6)\r\n  }]\r\n  \r\n  const optionsWeek = {\r\n    series: seriesWeek\r\n  }\r\n  const optionsDay = {\r\n    series: series\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(6)\r\n    const catLen = categories.length\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= categories.length -1 ? newBeginInd + 6 : categories.length - 1\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'Effecctive',\r\n          data: dataEffective.slice(newBeginInd, newEndInd + 1)\r\n        }, {\r\n          name: 'Neutral',\r\n          data: dataNeutral.slice(newBeginInd, newEndInd + 1)\r\n        }, {\r\n          name: 'Ineffective',\r\n          data: dataIneffective.slice(newBeginInd, newEndInd + 1)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newEndInd + 1)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > categories.length - 1 - 6) newEndInd = categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'Effective',\r\n            data: dataEffective.slice(newBeginInd, newEndInd + 1)\r\n          }, {\r\n            name: 'Neutral',\r\n            data: dataNeutral.slice(newBeginInd, newEndInd + 1)\r\n          }, {\r\n            name: 'Ineffective',\r\n            data: dataIneffective.slice(newBeginInd, newEndInd + 1)\r\n          }],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newEndInd + 1)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', optionsWeek, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', optionsDay, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n\r\n    console.log(\"END\", endInd)\r\n    console.log(catLen)\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={800}/>\r\n          <div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>)\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js",["362","363","364","365","366","367"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\n\r\n\r\n\r\nconst series = [21,55,44]\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'efficiencyOfEmployeesSum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective'],\r\n  fill: {\r\n    colors: ['#000C77', '#56cfe1', '#80ffdb'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n\r\n                        // fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            if(val == 1) return val + ' hour'\r\n                            return val + ' hours'\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0) + ' hours'\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors:['#ffffff', '#020202', '#020202']\r\n        }\r\n      },\r\n    \r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\n\r\nconst seriesWeek = [38,42,49]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\n\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\n  export default function EfficiencySumChart(props){\r\n      const [timePeriod, setTimePeriod] = React.useState(0);\r\n      React.useEffect(() => {\r\n    \r\n        if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n        else if(props.timePeriod == 2){\r\n          ReactApexChart.exec(\"efficiencyOfEmployeesSum\", 'updateOptions', optionsWeek, true) \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n\r\n        else if(props.timePeriod == 1){\r\n          ReactApexChart.exec(\"efficiencyOfEmployeesSum\", 'updateOptions', optionsDay, true)  \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n      });\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" />\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js",["368","369","370","371"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\nconst dataUsage = [7.5,6,8.1,7.5,4.3,3.7,2.1,2.2, 2.3, 2, 0.8, 0.3]\r\nconst dataWaste = [1.3,2.3,2,0.8,1.3,2.7,3.1,1.7,1.4,0.7,1,1]\r\n\r\nconst categories = [['Cupcake'],['Donut'], ['Eclair'],['Frozen yoghurt'],['Gingerbread'],['Honeycomb'],['Ice cream sandwich'],\r\n['Jelly Bean'],['KitKat'],['Lollipop'], ['Marshmallow'], ['Nougat']]\r\n\r\nconst series =  [{\r\n    name: 'Usage',\r\n    data: dataUsage.slice(0,6)\r\n  }, {\r\n    name: 'Waste',\r\n    data: dataWaste.slice(0,6)\r\n  }\r\n]\r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usageOfEmployees',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n    //   foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n        categories: categories.slice(0, 6),\r\n        labels: {rotate: -45}\r\n    }\r\n    ,\r\n    yaxis:{\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'h' },\r\n      },\r\n    },\r\n  \r\n    fill: {\r\n      colors: ['#e91e63', '#031d44'],\r\n      opacity: 1\r\n      }\r\n  }\r\n\r\n\r\n  // const dataEffectiveWeek = [23,23,24,25,13,12,14,13, 23, 20, 8, 13]\r\n  // const dataNeutralWeek = [13,23,20,8,13,27,31,17,14,8,10,10]\r\n  // const dataIneffectiveWeek = [11,12,15,15,21,14,14,17,12,10,11,11]\r\n\r\n// const seriesWeek =  [{\r\n//     name: 'Effective',\r\n//     data: dataEffectiveWeek.slice(0,6)\r\n//   }, {\r\n//     name: 'Neutral',\r\n//     data: dataNeutralWeek.slice(0,6)\r\n//   }, {\r\n//     name: 'Ineffective',\r\n//     data: dataIneffectiveWeek.slice(0,6)\r\n//   }]\r\n  \r\n//   const optionsWeek = {\r\n//     series: seriesWeek\r\n//   }\r\n//   const optionsDay = {\r\n//     series: series\r\n//   }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(6)\r\n    const catLen = categories.length\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= categories.length -1 ? newBeginInd + 6 : categories.length - 1\r\n\r\n      const newOptions = {\r\n      series: [{\r\n          name: 'Usage',\r\n          data: dataUsage.slice(newBeginInd, newEndInd + 1)\r\n        }, {\r\n          name: 'Waste',\r\n          data: dataWaste.slice(newBeginInd, newEndInd + 1)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newEndInd + 1)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"usageOfEmployees\", 'updateOptions', newOptions, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > categories.length - 1 - 6) newEndInd = categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n\r\n        const newOptions = {\r\n          series: [{\r\n              name: 'Usage',\r\n              data: dataUsage.slice(newBeginInd, newEndInd + 1)\r\n            }, {\r\n              name: 'Waste',\r\n              data: dataWaste.slice(newBeginInd, newEndInd + 1)\r\n            }],\r\n            xaxis:{\r\n              categories: categories.slice(newBeginInd, newEndInd + 1)\r\n            }\r\n          }\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"usageOfEmployees\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      // if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      // else if(props.timePeriod == 2){\r\n      //   ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', optionsWeek, true)  \r\n      //   setTimePeriod(props.timePeriod)\r\n      // }\r\n\r\n      // else if(props.timePeriod == 1){\r\n      //   ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', optionsDay, true)\r\n      //   setTimePeriod(props.timePeriod)\r\n      // }\r\n    });\r\n\r\n\r\n\r\n    console.log(\"END\", endInd)\r\n    console.log(catLen)\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={800}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<div/>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === catLen - 1 ? (<div/>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>) : (<div></div>)}\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js",["372","373","374","375","376"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\nconst series =  [{\r\n    name: 'PRODUCT A',\r\n    data: [44, 55, 41, 37, 22, 13,12,25,21,27,21,34,12],\r\n  },\r\n  {\r\n    name: 'PRODUCT B',\r\n    data: [16, 5, 19, 23, 38, 47,48,35,39,33,39,26,48]\r\n  }]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usage',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 800,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n      \r\n        },\r\n        toolbar:{\r\n            show: false\r\n        }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    states: {\r\n      hover: {\r\n          filter: {\r\n              type: 'darken',\r\n              value: 0.5,\r\n          }\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: [['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n        ['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n        ['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00']\r\n      ],\r\n    },\r\n  \r\n    fill: {\r\n      colors: ['#e91e63', '#031d44'],\r\n      opacity: 1\r\n      }\r\n    \r\n  }\r\n\r\n\r\n  const seriesWeek =  [{\r\n    name: 'PRODUCT A',\r\n    data: [44, 55, 41, 37, 22, 13,12],\r\n  },\r\n  {\r\n    name: 'PRODUCT B',\r\n    data: [16, 5, 19, 23, 38, 47,48]\r\n  }]\r\n\r\n  const optionsWeek = {\r\n    series: seriesWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n  }\r\n\r\n  const optionsDay = {\r\n    series: series,\r\n    xaxis: {\r\n      categories: [['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n        ['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n        ['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00']\r\n      ],\r\n    }\r\n  }\r\n  \r\n\r\n  export default function UsageByHoursChart(props){\r\n    \r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n      React.useEffect(() => {\r\n    \r\n        if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n        else if(props.timePeriod == 2){\r\n          ReactApexChart.exec(\"usage\", 'updateOptions', optionsWeek, true) \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n \r\n\r\n        else if(props.timePeriod == 1){\r\n          ReactApexChart.exec(\"usage\", 'updateOptions', optionsDay, true)  \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n\r\n      });\r\n\r\n      return (\r\n        <Chart options={options} series={series} type=\"bar\" height={400}  width={800}/>\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageOfTeamSumChart.js",["377","378","379","380","381","382"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\nconst series = [21,55]\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageOfEmployeesSum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            if(val == 1) return val + ' hour'\r\n                            return val + ' hours'\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                            console.log(\"ASDSA\",w.globals)\r\n                          return w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0) + ' hours'\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        }\r\n      },\r\n    \r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\n\r\nconst seriesWeek = [36,42]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\n\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\n  export default function EfficiencySumChart(props){\r\n\r\n      const [timePeriod, setTimePeriod] = React.useState(0);\r\n      \r\n      React.useEffect(() => {\r\n    \r\n        if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n        else if(props.timePeriod == 2){\r\n          ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsWeek, true) \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n\r\n        else if(props.timePeriod == 1){\r\n          ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsDay, true)  \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n      });\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" />\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js",["383","384","385","386","387","388"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\n\r\n\r\n\r\nconst series = [31,55,41]\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'efficiencySum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective'],\r\n  fill: {\r\n    colors: ['#000C77', '#56cfe1', '#80ffdb'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n\r\n                        // fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            if(val == 1) return val + ' hour'\r\n                            return val + ' hours'\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0) + ' hours'\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors:['#ffffff', '#020202', '#020202']\r\n        }\r\n      },\r\n    \r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\n\r\nconst seriesWeek = [34,52,45]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\n\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\n  export default function EfficiencySumChart(props){\r\n\r\n\r\n    \r\n      const [timePeriod, setTimePeriod] = React.useState(0);\r\n      \r\n      React.useEffect(() => {\r\n    \r\n        if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n        else if(props.timePeriod == 2){\r\n          ReactApexChart.exec(\"efficiencySum\", 'updateOptions', optionsWeek, true) \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n\r\n        else if(props.timePeriod == 1){\r\n          ReactApexChart.exec(\"efficiencySum\", 'updateOptions', optionsDay, true)  \r\n          setTimePeriod(props.timePeriod)\r\n        }\r\n      });\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" />\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js",["389","390","391","392","393"],"import React from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n      marginTop: theme.spacing(3),\r\n      boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })); \r\n\r\n\r\nfunction createData(name, position, department, experience, status) {\r\n  return { name, position, department, experience, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 'Software Engineer', 'Dev', '3 years 4 mounth', true),\r\n  createData('Donut', 'ML engineer', 'ML', '0 years 3 mounth', false),\r\n  createData('Eclair', 'System Analytic', 'Analytics', '1 year 3 mounth', false),\r\n  createData('Frozen yoghurt', 'Senior System Analytic', 'Analytic', '2 years 2 mouth',true),\r\n  createData('Gingerbread', 'Juniour Software Developer', 'Dev', '0 years 2 mounth', true),\r\n  createData('Honeycomb', 'Senior Software Developer', 'Dev', '5 years 3 mounth', true),\r\n  createData('Ice cream sandwich', 'HR manager', \"HR\", '3 years', true),\r\n  createData('Jelly Bean', 'Accounter', 'Bookkeeping', '2 years 7 mounth', true),\r\n  createData('KitKat', 'Manager', 'Inner Managament', '4 years 2 mounth', true),\r\n  createData('Lollipop', 'Data Scientist', 'Analytics', '1 year 5 mounth', true),\r\n  createData('Marshmallow', 'ML researcher', 'Research', '0 years 3 mounth', false),\r\n  createData('Nougat', 'Data Engineer', 'ML', '3 years 2 mounth', true),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', alignRight: false, disablePadding: true, label: 'Members' },\r\n  { id: 'position', alignRight: true, disablePadding: false, label: 'Position' },\r\n  { id: 'department', alignRight: true, disablePadding: false, label: 'Department' },\r\n  { id: 'experience', alignRight: true, disablePadding: false, label: 'Experience' },\r\n  { id: 'status', alignRight: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [selectedMember, setSelectedMember] = React.useState(null);\r\n\r\n  const handleCheck = (event, name) =>{\r\n        selectedMember === name ? \r\n        setSelectedMember(null) : setSelectedMember(name)\r\n        \r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedMember === row.name;\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleCheck(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.position}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                          {row.status ? <div className=\"badge badge-success h-auto\">\r\n                                            ACTIVE\r\n                                        </div>:\r\n                                            <div className=\"badge badge-danger h-auto\">\r\n                                                NOT ACTIVE\r\n                                            </div>\r\n                  }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js",["394","395","396","397","398","399","400","401","402","403","404","405","406"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n    // marginLeft: theme.spacing(5)\r\n  }\r\n}))\r\n\r\n\r\nconst dataA = [23,23,24,25,13,12,14,13, 23, 20, 8, 13, 17,11,17,24,28,20,10,19,16,14,19,14]\r\nconst dataB = [13,23,20,8,13,27,31,17,14,8,10,10,11,17,21,17,24,28,20,10,19,16,14,19,14]\r\nconst dataC = [11,12,15,15,21,14,14,17,12,10,11,11,9, 13, 23, 20, 8, 13, 27,11,17,24,18,20,7]\r\nconst categories = [['00:00','-','01:00'],['01:00','-','2:00'], ['02:00','-','3:00'],['03:00','-','04:00'],['04:00','-','5:00'],['05:00','-','6:00'],['06:00','-','7:00'],\r\n['07:00','-','8:00'],['08:00','-','9:00'],['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00'], ['22.00','-','23:00'],['23.00','-','00:00']]\r\n\r\nconst series =  [{\r\n    name: 'PRODUCT A',\r\n    data: dataA.slice(8,20)\r\n  }, {\r\n    name: 'PRODUCT B',\r\n    data: dataB.slice(8,20)\r\n  }, {\r\n    name: 'PRODUCT C',\r\n    data: dataC.slice(8,20)\r\n  }]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'efficiency',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 150\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n      \r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n  \r\n    fill: {\r\n      colors: ['#000C77', '#56cfe1', '#80ffdb'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\n\r\nconst seriesWeek =  [{\r\n    name: 'Effective',\r\n    data: [24, 15, 21, 17, 22, 13,12]\r\n  }, {\r\n    name: 'Neutral',\r\n    data: [13, 23, 20, 8, 13, 27,31]\r\n  }, {\r\n    name: 'Ineffective',\r\n    data: [11, 17, 15, 15, 21, 14,14]\r\n  }]\r\n  \r\n  const optionsWeek = {\r\n    series: seriesWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n  }\r\n\r\n  const optionsDay = {\r\n    series: series,\r\n    xaxis: {\r\n      categories:  categories.slice(8, 20)\r\n    }\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n    // const [endInd, setEndInd] = React.useState(20)\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'PRODUCT A',\r\n          data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n        }, {\r\n          name: 'PRODUCT B',\r\n          data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n        }, {\r\n          name: 'PRODUCT C',\r\n          data: dataC.slice(newBeginInd, newBeginInd + 12)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"efficiency\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        if (beginInd == 12) return\r\n\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'PRODUCT A',\r\n            data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n          }, {\r\n            name: 'PRODUCT B',\r\n            data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n          }, {\r\n            name: 'PRODUCT C',\r\n            data: dataC.slice(newBeginInd, newBeginInd +12)\r\n          }],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"efficiency\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"efficiency\", 'updateOptions', optionsWeek, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"efficiency\", 'updateOptions', optionsDay, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={800}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n            <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n            <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n          </div>) : (<div></div>)}\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js",["407","408","409","410","411","412","413","414","415"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\n\r\nconst series = [31,55]\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageSum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n\r\n                        // fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            if(val == 1) return val + ' hour'\r\n                            return val + ' hours'\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0) + ' hours'\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        },\r\n    },\r\n    \r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\nconst seriesWeek = [23,19]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\n\r\nconst optionsDay = {\r\n  series: series\r\n}\r\n\r\n  export default function UsageSum(props){\r\n\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n  \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsWeek, true) \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsDay, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\"/>\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\tableTeam.js",["416","417","418","419","420","421","422","423","424","425"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Sites.js",["426","427","428","429","430","431","432"],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"433","replacedBy":"437"},{"ruleId":"435","replacedBy":"438"},{"ruleId":"439","severity":1,"message":"440","line":3,"column":27,"nodeType":"441","messageId":"442","endLine":3,"endColumn":33},{"ruleId":"439","severity":1,"message":"443","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":19},{"ruleId":"439","severity":1,"message":"444","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":26},{"ruleId":"439","severity":1,"message":"445","line":42,"column":33,"nodeType":"441","messageId":"442","endLine":42,"endColumn":51},{"ruleId":"439","severity":1,"message":"446","line":43,"column":16,"nodeType":"441","messageId":"442","endLine":43,"endColumn":34},{"ruleId":"439","severity":1,"message":"447","line":43,"column":36,"nodeType":"441","messageId":"442","endLine":43,"endColumn":57},{"ruleId":"439","severity":1,"message":"448","line":45,"column":16,"nodeType":"441","messageId":"442","endLine":45,"endColumn":21},{"ruleId":"439","severity":1,"message":"449","line":45,"column":23,"nodeType":"441","messageId":"442","endLine":45,"endColumn":31},{"ruleId":"450","severity":1,"message":"451","line":60,"column":51,"nodeType":"452","messageId":"453","endLine":60,"endColumn":53},{"ruleId":"450","severity":1,"message":"451","line":61,"column":51,"nodeType":"452","messageId":"453","endLine":61,"endColumn":53},{"ruleId":"439","severity":1,"message":"444","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":26},{"ruleId":"439","severity":1,"message":"454","line":8,"column":48,"nodeType":"441","messageId":"442","endLine":8,"endColumn":57},{"ruleId":"439","severity":1,"message":"455","line":9,"column":10,"nodeType":"441","messageId":"442","endLine":9,"endColumn":38},{"ruleId":"439","severity":1,"message":"456","line":40,"column":12,"nodeType":"441","messageId":"442","endLine":40,"endColumn":19},{"ruleId":"450","severity":1,"message":"451","line":126,"column":51,"nodeType":"452","messageId":"453","endLine":126,"endColumn":53},{"ruleId":"439","severity":1,"message":"457","line":4,"column":8,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"439","severity":1,"message":"458","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":12},{"ruleId":"439","severity":1,"message":"459","line":23,"column":3,"nodeType":"441","messageId":"442","endLine":23,"endColumn":6},{"ruleId":"439","severity":1,"message":"460","line":23,"column":18,"nodeType":"441","messageId":"442","endLine":23,"endColumn":24},{"ruleId":"439","severity":1,"message":"461","line":25,"column":8,"nodeType":"441","messageId":"442","endLine":25,"endColumn":16},{"ruleId":"433","replacedBy":"462"},{"ruleId":"435","replacedBy":"463"},{"ruleId":"439","severity":1,"message":"464","line":1,"column":8,"nodeType":"441","messageId":"442","endLine":1,"endColumn":13},{"ruleId":"439","severity":1,"message":"465","line":2,"column":8,"nodeType":"441","messageId":"442","endLine":2,"endColumn":14},{"ruleId":"439","severity":1,"message":"466","line":7,"column":3,"nodeType":"441","messageId":"442","endLine":7,"endColumn":9},{"ruleId":"439","severity":1,"message":"467","line":8,"column":3,"nodeType":"441","messageId":"442","endLine":8,"endColumn":13},{"ruleId":"439","severity":1,"message":"443","line":3,"column":8,"nodeType":"441","messageId":"442","endLine":3,"endColumn":19},{"ruleId":"439","severity":1,"message":"468","line":4,"column":10,"nodeType":"441","messageId":"442","endLine":4,"endColumn":18},{"ruleId":"439","severity":1,"message":"469","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":13},{"ruleId":"439","severity":1,"message":"443","line":5,"column":8,"nodeType":"441","messageId":"442","endLine":5,"endColumn":19},{"ruleId":"439","severity":1,"message":"468","line":6,"column":10,"nodeType":"441","messageId":"442","endLine":6,"endColumn":18},{"ruleId":"439","severity":1,"message":"470","line":3,"column":70,"nodeType":"441","messageId":"442","endLine":3,"endColumn":84},{"ruleId":"450","severity":1,"message":"451","line":82,"column":42,"nodeType":"452","messageId":"453","endLine":82,"endColumn":44},{"ruleId":"450","severity":1,"message":"451","line":99,"column":34,"nodeType":"452","messageId":"453","endLine":99,"endColumn":36},{"ruleId":"439","severity":1,"message":"471","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"472","line":5,"column":13,"nodeType":"441","messageId":"442","endLine":5,"endColumn":28},{"ruleId":"439","severity":1,"message":"443","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":19},{"ruleId":"450","severity":1,"message":"451","line":43,"column":25,"nodeType":"452","messageId":"453","endLine":43,"endColumn":27},{"ruleId":"450","severity":1,"message":"451","line":44,"column":53,"nodeType":"452","messageId":"453","endLine":44,"endColumn":55},{"ruleId":"439","severity":1,"message":"473","line":53,"column":9,"nodeType":"441","messageId":"442","endLine":53,"endColumn":18},{"ruleId":"474","severity":1,"message":"475","line":69,"column":8,"nodeType":"476","endLine":69,"endColumn":23,"suggestions":"477"},{"ruleId":"439","severity":1,"message":"478","line":17,"column":7,"nodeType":"441","messageId":"442","endLine":17,"endColumn":11},{"ruleId":"450","severity":1,"message":"451","line":36,"column":53,"nodeType":"452","messageId":"453","endLine":36,"endColumn":55},{"ruleId":"450","severity":1,"message":"479","line":43,"column":44,"nodeType":"452","messageId":"453","endLine":43,"endColumn":46},{"ruleId":"439","severity":1,"message":"480","line":58,"column":9,"nodeType":"441","messageId":"442","endLine":58,"endColumn":18},{"ruleId":"439","severity":1,"message":"481","line":61,"column":9,"nodeType":"441","messageId":"442","endLine":61,"endColumn":20},{"ruleId":"439","severity":1,"message":"482","line":5,"column":8,"nodeType":"441","messageId":"442","endLine":5,"endColumn":32},{"ruleId":"439","severity":1,"message":"483","line":6,"column":8,"nodeType":"441","messageId":"442","endLine":6,"endColumn":33},{"ruleId":"439","severity":1,"message":"484","line":3,"column":8,"nodeType":"441","messageId":"442","endLine":3,"endColumn":24},{"ruleId":"439","severity":1,"message":"485","line":4,"column":8,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"439","severity":1,"message":"486","line":5,"column":10,"nodeType":"441","messageId":"442","endLine":5,"endColumn":15},{"ruleId":"439","severity":1,"message":"487","line":5,"column":29,"nodeType":"441","messageId":"442","endLine":5,"endColumn":33},{"ruleId":"439","severity":1,"message":"488","line":16,"column":10,"nodeType":"441","messageId":"442","endLine":16,"endColumn":17},{"ruleId":"450","severity":1,"message":"451","line":111,"column":25,"nodeType":"452","messageId":"453","endLine":111,"endColumn":27},{"ruleId":"450","severity":1,"message":"451","line":112,"column":53,"nodeType":"452","messageId":"453","endLine":112,"endColumn":55},{"ruleId":"450","severity":1,"message":"451","line":124,"column":42,"nodeType":"452","messageId":"453","endLine":124,"endColumn":44},{"ruleId":"474","severity":1,"message":"489","line":135,"column":7,"nodeType":"476","endLine":135,"endColumn":9,"suggestions":"490"},{"ruleId":"450","severity":1,"message":"451","line":174,"column":50,"nodeType":"452","messageId":"453","endLine":174,"endColumn":52},{"ruleId":"439","severity":1,"message":"491","line":383,"column":21,"nodeType":"441","messageId":"442","endLine":383,"endColumn":25},{"ruleId":"439","severity":1,"message":"491","line":392,"column":21,"nodeType":"441","messageId":"442","endLine":392,"endColumn":25},{"ruleId":"450","severity":1,"message":"451","line":423,"column":50,"nodeType":"452","messageId":"453","endLine":423,"endColumn":52},{"ruleId":"439","severity":1,"message":"492","line":1,"column":10,"nodeType":"441","messageId":"442","endLine":1,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":73,"column":38,"nodeType":"452","messageId":"453","endLine":73,"endColumn":40},{"ruleId":"439","severity":1,"message":"492","line":1,"column":10,"nodeType":"441","messageId":"442","endLine":1,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":82,"column":38,"nodeType":"452","messageId":"453","endLine":82,"endColumn":40},{"ruleId":"439","severity":1,"message":"470","line":2,"column":70,"nodeType":"441","messageId":"442","endLine":2,"endColumn":84},{"ruleId":"439","severity":1,"message":"493","line":4,"column":8,"nodeType":"441","messageId":"442","endLine":4,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":97,"column":34,"nodeType":"452","messageId":"453","endLine":97,"endColumn":36},{"ruleId":"439","severity":1,"message":"494","line":1,"column":17,"nodeType":"441","messageId":"442","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"451","line":236,"column":28,"nodeType":"452","messageId":"453","endLine":236,"endColumn":30},{"ruleId":"450","severity":1,"message":"451","line":237,"column":28,"nodeType":"452","messageId":"453","endLine":237,"endColumn":30},{"ruleId":"450","severity":1,"message":"451","line":258,"column":31,"nodeType":"452","messageId":"453","endLine":258,"endColumn":33},{"ruleId":"439","severity":1,"message":"460","line":2,"column":16,"nodeType":"441","messageId":"442","endLine":2,"endColumn":22},{"ruleId":"439","severity":1,"message":"495","line":2,"column":24,"nodeType":"441","messageId":"442","endLine":2,"endColumn":32},{"ruleId":"439","severity":1,"message":"496","line":2,"column":34,"nodeType":"441","messageId":"442","endLine":2,"endColumn":39},{"ruleId":"439","severity":1,"message":"497","line":3,"column":26,"nodeType":"441","messageId":"442","endLine":3,"endColumn":42},{"ruleId":"439","severity":1,"message":"498","line":5,"column":10,"nodeType":"441","messageId":"442","endLine":5,"endColumn":18},{"ruleId":"439","severity":1,"message":"499","line":5,"column":20,"nodeType":"441","messageId":"442","endLine":5,"endColumn":23},{"ruleId":"439","severity":1,"message":"500","line":7,"column":8,"nodeType":"441","messageId":"442","endLine":7,"endColumn":18},{"ruleId":"439","severity":1,"message":"501","line":9,"column":8,"nodeType":"441","messageId":"442","endLine":9,"endColumn":25},{"ruleId":"439","severity":1,"message":"502","line":67,"column":25,"nodeType":"441","messageId":"442","endLine":67,"endColumn":30},{"ruleId":"439","severity":1,"message":"503","line":67,"column":47,"nodeType":"441","messageId":"442","endLine":67,"endColumn":53},{"ruleId":"439","severity":1,"message":"504","line":69,"column":7,"nodeType":"441","messageId":"442","endLine":69,"endColumn":12},{"ruleId":"439","severity":1,"message":"505","line":72,"column":15,"nodeType":"441","messageId":"442","endLine":72,"endColumn":23},{"ruleId":"439","severity":1,"message":"506","line":141,"column":10,"nodeType":"441","messageId":"442","endLine":141,"endColumn":23},{"ruleId":"439","severity":1,"message":"507","line":4,"column":10,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":227,"column":20,"nodeType":"452","messageId":"453","endLine":227,"endColumn":22},{"ruleId":"450","severity":1,"message":"451","line":230,"column":20,"nodeType":"452","messageId":"453","endLine":230,"endColumn":22},{"ruleId":"450","severity":1,"message":"451","line":233,"column":25,"nodeType":"452","messageId":"453","endLine":233,"endColumn":27},{"ruleId":"450","severity":1,"message":"451","line":252,"column":22,"nodeType":"452","messageId":"453","endLine":252,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":256,"column":22,"nodeType":"452","messageId":"453","endLine":256,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":257,"column":27,"nodeType":"452","messageId":"453","endLine":257,"endColumn":29},{"ruleId":"474","severity":1,"message":"508","line":273,"column":5,"nodeType":"509","endLine":273,"endColumn":20,"suggestions":"510"},{"ruleId":"450","severity":1,"message":"479","line":280,"column":22,"nodeType":"452","messageId":"453","endLine":280,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":280,"column":41,"nodeType":"452","messageId":"453","endLine":280,"endColumn":43},{"ruleId":"450","severity":1,"message":"451","line":280,"column":78,"nodeType":"452","messageId":"453","endLine":280,"endColumn":80},{"ruleId":"450","severity":1,"message":"451","line":282,"column":27,"nodeType":"452","messageId":"453","endLine":282,"endColumn":29},{"ruleId":"450","severity":1,"message":"451","line":291,"column":32,"nodeType":"452","messageId":"453","endLine":291,"endColumn":34},{"ruleId":"439","severity":1,"message":"511","line":296,"column":9,"nodeType":"441","messageId":"442","endLine":296,"endColumn":19},{"ruleId":"450","severity":1,"message":"451","line":301,"column":30,"nodeType":"452","messageId":"453","endLine":301,"endColumn":32},{"ruleId":"450","severity":1,"message":"451","line":305,"column":35,"nodeType":"452","messageId":"453","endLine":305,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":309,"column":35,"nodeType":"452","messageId":"453","endLine":309,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":323,"column":29,"nodeType":"452","messageId":"453","endLine":323,"endColumn":31},{"ruleId":"439","severity":1,"message":"512","line":6,"column":3,"nodeType":"441","messageId":"442","endLine":6,"endColumn":21},{"ruleId":"439","severity":1,"message":"513","line":9,"column":10,"nodeType":"441","messageId":"442","endLine":9,"endColumn":20},{"ruleId":"439","severity":1,"message":"454","line":6,"column":10,"nodeType":"441","messageId":"442","endLine":6,"endColumn":19},{"ruleId":"439","severity":1,"message":"514","line":28,"column":25,"nodeType":"441","messageId":"442","endLine":28,"endColumn":31},{"ruleId":"439","severity":1,"message":"507","line":4,"column":10,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"474","severity":1,"message":"515","line":192,"column":5,"nodeType":"509","endLine":192,"endColumn":20,"suggestions":"516"},{"ruleId":"450","severity":1,"message":"479","line":193,"column":22,"nodeType":"452","messageId":"453","endLine":193,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":193,"column":41,"nodeType":"452","messageId":"453","endLine":193,"endColumn":43},{"ruleId":"450","severity":1,"message":"451","line":195,"column":32,"nodeType":"452","messageId":"453","endLine":195,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":200,"column":32,"nodeType":"452","messageId":"453","endLine":200,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":46,"column":36,"nodeType":"452","messageId":"453","endLine":46,"endColumn":38},{"ruleId":"474","severity":1,"message":"515","line":108,"column":7,"nodeType":"509","endLine":108,"endColumn":22,"suggestions":"517"},{"ruleId":"450","severity":1,"message":"479","line":110,"column":24,"nodeType":"452","messageId":"453","endLine":110,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":110,"column":43,"nodeType":"452","messageId":"453","endLine":110,"endColumn":45},{"ruleId":"450","severity":1,"message":"451","line":112,"column":34,"nodeType":"452","messageId":"453","endLine":112,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":117,"column":34,"nodeType":"452","messageId":"453","endLine":117,"endColumn":36},{"ruleId":"439","severity":1,"message":"507","line":4,"column":10,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"439","severity":1,"message":"518","line":128,"column":12,"nodeType":"441","messageId":"442","endLine":128,"endColumn":22},{"ruleId":"439","severity":1,"message":"519","line":128,"column":24,"nodeType":"441","messageId":"442","endLine":128,"endColumn":37},{"ruleId":"450","severity":1,"message":"451","line":203,"column":29,"nodeType":"452","messageId":"453","endLine":203,"endColumn":31},{"ruleId":"474","severity":1,"message":"515","line":109,"column":7,"nodeType":"509","endLine":109,"endColumn":22,"suggestions":"520"},{"ruleId":"450","severity":1,"message":"479","line":111,"column":24,"nodeType":"452","messageId":"453","endLine":111,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":111,"column":43,"nodeType":"452","messageId":"453","endLine":111,"endColumn":45},{"ruleId":"450","severity":1,"message":"451","line":113,"column":34,"nodeType":"452","messageId":"453","endLine":113,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":119,"column":34,"nodeType":"452","messageId":"453","endLine":119,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":41,"column":36,"nodeType":"452","messageId":"453","endLine":41,"endColumn":38},{"ruleId":"474","severity":1,"message":"515","line":104,"column":7,"nodeType":"509","endLine":104,"endColumn":22,"suggestions":"521"},{"ruleId":"450","severity":1,"message":"479","line":106,"column":24,"nodeType":"452","messageId":"453","endLine":106,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":106,"column":43,"nodeType":"452","messageId":"453","endLine":106,"endColumn":45},{"ruleId":"450","severity":1,"message":"451","line":108,"column":34,"nodeType":"452","messageId":"453","endLine":108,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":113,"column":34,"nodeType":"452","messageId":"453","endLine":113,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":46,"column":36,"nodeType":"452","messageId":"453","endLine":46,"endColumn":38},{"ruleId":"474","severity":1,"message":"515","line":110,"column":7,"nodeType":"509","endLine":110,"endColumn":22,"suggestions":"522"},{"ruleId":"450","severity":1,"message":"479","line":112,"column":24,"nodeType":"452","messageId":"453","endLine":112,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":112,"column":43,"nodeType":"452","messageId":"453","endLine":112,"endColumn":45},{"ruleId":"450","severity":1,"message":"451","line":114,"column":34,"nodeType":"452","messageId":"453","endLine":114,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":119,"column":34,"nodeType":"452","messageId":"453","endLine":119,"endColumn":36},{"ruleId":"439","severity":1,"message":"486","line":12,"column":8,"nodeType":"441","messageId":"442","endLine":12,"endColumn":13},{"ruleId":"439","severity":1,"message":"523","line":99,"column":36,"nodeType":"441","messageId":"442","endLine":99,"endColumn":47},{"ruleId":"439","severity":1,"message":"524","line":99,"column":49,"nodeType":"441","messageId":"442","endLine":99,"endColumn":57},{"ruleId":"439","severity":1,"message":"525","line":139,"column":10,"nodeType":"441","messageId":"442","endLine":139,"endColumn":18},{"ruleId":"439","severity":1,"message":"526","line":139,"column":20,"nodeType":"441","messageId":"442","endLine":139,"endColumn":31},{"ruleId":"439","severity":1,"message":"507","line":4,"column":10,"nodeType":"441","messageId":"442","endLine":4,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":146,"column":20,"nodeType":"452","messageId":"453","endLine":146,"endColumn":22},{"ruleId":"450","severity":1,"message":"451","line":149,"column":20,"nodeType":"452","messageId":"453","endLine":149,"endColumn":22},{"ruleId":"450","severity":1,"message":"451","line":152,"column":25,"nodeType":"452","messageId":"453","endLine":152,"endColumn":27},{"ruleId":"450","severity":1,"message":"451","line":177,"column":22,"nodeType":"452","messageId":"453","endLine":177,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":181,"column":22,"nodeType":"452","messageId":"453","endLine":181,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":182,"column":27,"nodeType":"452","messageId":"453","endLine":182,"endColumn":29},{"ruleId":"474","severity":1,"message":"515","line":204,"column":5,"nodeType":"509","endLine":204,"endColumn":20,"suggestions":"527"},{"ruleId":"450","severity":1,"message":"479","line":205,"column":22,"nodeType":"452","messageId":"453","endLine":205,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":205,"column":41,"nodeType":"452","messageId":"453","endLine":205,"endColumn":43},{"ruleId":"450","severity":1,"message":"451","line":207,"column":32,"nodeType":"452","messageId":"453","endLine":207,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":212,"column":32,"nodeType":"452","messageId":"453","endLine":212,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":224,"column":29,"nodeType":"452","messageId":"453","endLine":224,"endColumn":31},{"ruleId":"439","severity":1,"message":"513","line":5,"column":10,"nodeType":"441","messageId":"442","endLine":5,"endColumn":20},{"ruleId":"439","severity":1,"message":"507","line":6,"column":10,"nodeType":"441","messageId":"442","endLine":6,"endColumn":14},{"ruleId":"439","severity":1,"message":"528","line":6,"column":16,"nodeType":"441","messageId":"442","endLine":6,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":45,"column":36,"nodeType":"452","messageId":"453","endLine":45,"endColumn":38},{"ruleId":"474","severity":1,"message":"515","line":105,"column":5,"nodeType":"509","endLine":105,"endColumn":20,"suggestions":"529"},{"ruleId":"450","severity":1,"message":"479","line":107,"column":22,"nodeType":"452","messageId":"453","endLine":107,"endColumn":24},{"ruleId":"450","severity":1,"message":"451","line":107,"column":41,"nodeType":"452","messageId":"453","endLine":107,"endColumn":43},{"ruleId":"450","severity":1,"message":"451","line":109,"column":32,"nodeType":"452","messageId":"453","endLine":109,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":114,"column":32,"nodeType":"452","messageId":"453","endLine":114,"endColumn":34},{"ruleId":"450","severity":1,"message":"479","line":68,"column":50,"nodeType":"452","messageId":"453","endLine":68,"endColumn":52},{"ruleId":"450","severity":1,"message":"479","line":68,"column":74,"nodeType":"452","messageId":"453","endLine":68,"endColumn":76},{"ruleId":"450","severity":1,"message":"451","line":70,"column":39,"nodeType":"452","messageId":"453","endLine":70,"endColumn":41},{"ruleId":"450","severity":1,"message":"451","line":71,"column":41,"nodeType":"452","messageId":"453","endLine":71,"endColumn":43},{"ruleId":"450","severity":1,"message":"451","line":72,"column":39,"nodeType":"452","messageId":"453","endLine":72,"endColumn":41},{"ruleId":"450","severity":1,"message":"451","line":73,"column":41,"nodeType":"452","messageId":"453","endLine":73,"endColumn":43},{"ruleId":"439","severity":1,"message":"523","line":114,"column":36,"nodeType":"441","messageId":"442","endLine":114,"endColumn":47},{"ruleId":"439","severity":1,"message":"524","line":114,"column":49,"nodeType":"441","messageId":"442","endLine":114,"endColumn":57},{"ruleId":"439","severity":1,"message":"525","line":154,"column":10,"nodeType":"441","messageId":"442","endLine":154,"endColumn":18},{"ruleId":"439","severity":1,"message":"526","line":154,"column":20,"nodeType":"441","messageId":"442","endLine":154,"endColumn":31},{"ruleId":"439","severity":1,"message":"530","line":8,"column":8,"nodeType":"441","messageId":"442","endLine":8,"endColumn":19},{"ruleId":"450","severity":1,"message":"479","line":103,"column":15,"nodeType":"452","messageId":"453","endLine":103,"endColumn":17},{"ruleId":"450","severity":1,"message":"479","line":104,"column":17,"nodeType":"452","messageId":"453","endLine":104,"endColumn":19},{"ruleId":"439","severity":1,"message":"531","line":137,"column":10,"nodeType":"441","messageId":"442","endLine":137,"endColumn":22},{"ruleId":"439","severity":1,"message":"532","line":138,"column":10,"nodeType":"441","messageId":"442","endLine":138,"endColumn":14},{"ruleId":"439","severity":1,"message":"533","line":167,"column":9,"nodeType":"441","messageId":"442","endLine":167,"endColumn":19},{"ruleId":"534","severity":1,"message":"535","line":282,"column":19,"nodeType":"536","messageId":"537","endLine":282,"endColumn":21},"no-native-reassign",["538"],"no-negated-in-lhs",["539"],["538"],["539"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AuthService' is defined but never used.","'Component' is defined but never used.","'setEmailErrMessage' is assigned a value but never used.","'passwordErrMessage' is assigned a value but never used.","'setPasswordErrMessage' is assigned a value but never used.","'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextField' is defined but never used.","'SubdirectoryArrowLeftRounded' is defined but never used.","'message' is assigned a value but never used.","'Hidden' is defined but never used.","'Grow' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'MenuIcon' is defined but never used.",["538"],["539"],"'React' is defined but never used.","'Navbar' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","'Redirect' is defined but never used.","'Sites' is defined but never used.","'InputAdornment' is defined but never used.","'useState' is defined but never used.","'employeeService' is defined but never used.","'resetForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["540"],"'json' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'employees' is assigned a value but never used.","'departments' is assigned a value but never used.","'PermIdentityOutlinedIcon' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'Icon' is defined but never used.","'useForm' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["541"],"'name' is assigned a value but never used.","'AlternateEmail' is defined but never used.","'InfoOutlinedIcon' is defined but never used.","'Fragment' is defined but never used.","'MenuItem' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'classnames' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'color' is assigned a value but never used.","'bounce' is assigned a value but never used.","'theme' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getRandomData' is defined but never used.","'Card' is defined but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, props.effectiveType, effectiveType] as a second argument to the useEffect Hook.","MemberExpression",["542"],"'optionsMix' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'makeStyles' is defined but never used.","'weight' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod] as a second argument to the useEffect Hook.",["543"],["544"],"'timePeriod' is assigned a value but never used.","'setTimePeriod' is assigned a value but never used.",["545"],["546"],["547"],"'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.",["548"],"'Typography' is defined but never used.",["549"],"'TableFooter' is defined but never used.","'resourseName' is assigned a value but never used.","'type' is assigned a value but never used.","'updateRows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"556","fix":"558"},{"desc":"556","fix":"559"},{"desc":"556","fix":"560"},{"desc":"556","fix":"561"},{"desc":"556","fix":"562"},{"desc":"556","fix":"563"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"564","text":"565"},"Update the dependencies array to be: [userInfo.id]",{"range":"566","text":"567"},"Add dependencies array: [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",{"range":"568","text":"569"},"Add dependencies array: [timePeriod, props.timePeriod]",{"range":"570","text":"571"},{"range":"572","text":"571"},{"range":"573","text":"571"},{"range":"574","text":"571"},{"range":"575","text":"571"},{"range":"576","text":"571"},{"range":"577","text":"571"},[2073,2088],"[recordForEdit, setValues]",[4250,4252],"[userInfo.id]",[8117,8117],", [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",[5616,5616],", [timePeriod, props.timePeriod]",[3353,3353],[2970,2970],[3291,3291],[3328,3328],[5772,5772],[3328,3328]]