[{"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js":"1","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js":"2","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js":"3","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js":"4","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js":"5","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js":"6","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js":"7","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js":"8","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js":"9","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js":"10","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js":"11","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js":"12","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js":"13","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js":"14","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js":"15","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js":"16","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js":"17","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js":"18","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js":"19","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js":"20","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js":"21","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js":"22","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js":"23","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js":"24","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js":"25","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js":"26","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js":"27","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js":"28","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js":"29","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js":"30","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js":"31","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js":"32","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js":"33","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js":"34","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js":"35","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js":"36","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js":"37","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js":"38","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js":"39","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js":"40","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js":"41","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js":"42","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js":"43","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js":"44","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js":"45","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js":"46","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js":"47","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js":"48","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js":"49","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\byHoursChart.js":"50","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js":"51","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamSumChart.js":"52","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\date.service.js":"53","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\efficiency.service.js":"54","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStatService.js":"55","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\resources.js":"56","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\resourcesAllTime.js":"57","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\resources.service.js":"58"},{"size":304,"mtime":1610887316445,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":1269,"mtime":1612089056656,"results":"62","hashOfConfig":"60"},{"size":6267,"mtime":1616752283949,"results":"63","hashOfConfig":"60"},{"size":9780,"mtime":1614443544594,"results":"64","hashOfConfig":"60"},{"size":0,"mtime":1610794371600,"results":"65","hashOfConfig":"60"},{"size":5339,"mtime":1610898212229,"results":"66","hashOfConfig":"60"},{"size":381,"mtime":1611166097561,"results":"67","hashOfConfig":"60"},{"size":2918,"mtime":1614443627462,"results":"68","hashOfConfig":"60"},{"size":1851,"mtime":1614417520423,"results":"69","hashOfConfig":"60"},{"size":575,"mtime":1616913201793,"results":"70","hashOfConfig":"60"},{"size":1213,"mtime":1612429174836,"results":"71","hashOfConfig":"60"},{"size":490,"mtime":1612086572575,"results":"72","hashOfConfig":"60"},{"size":14084,"mtime":1616913233268,"results":"73","hashOfConfig":"60"},{"size":4927,"mtime":1611988694040,"results":"74","hashOfConfig":"60"},{"size":1949,"mtime":1616232276492,"results":"75","hashOfConfig":"60"},{"size":1241,"mtime":1611210764155,"results":"76","hashOfConfig":"60"},{"size":475,"mtime":1611836008938,"results":"77","hashOfConfig":"60"},{"size":840,"mtime":1614418743941,"results":"78","hashOfConfig":"60"},{"size":739,"mtime":1610788731112,"results":"79","hashOfConfig":"60"},{"size":814,"mtime":1610788731113,"results":"80","hashOfConfig":"60"},{"size":753,"mtime":1610788731112,"results":"81","hashOfConfig":"60"},{"size":479,"mtime":1611483274995,"results":"82","hashOfConfig":"60"},{"size":920,"mtime":1610788731115,"results":"83","hashOfConfig":"60"},{"size":802,"mtime":1610788731114,"results":"84","hashOfConfig":"60"},{"size":1031,"mtime":1611491652139,"results":"85","hashOfConfig":"60"},{"size":1700,"mtime":1614428934717,"results":"86","hashOfConfig":"60"},{"size":3885,"mtime":1611209860652,"results":"87","hashOfConfig":"60"},{"size":2471,"mtime":1611847034039,"results":"88","hashOfConfig":"60"},{"size":18479,"mtime":1614429050627,"results":"89","hashOfConfig":"60"},{"size":2765,"mtime":1616752774599,"results":"90","hashOfConfig":"60"},{"size":484,"mtime":1611835645826,"results":"91","hashOfConfig":"60"},{"size":1267,"mtime":1612088461751,"results":"92","hashOfConfig":"60"},{"size":2806,"mtime":1615204442136,"results":"93","hashOfConfig":"60"},{"size":3407,"mtime":1616234938023,"results":"94","hashOfConfig":"60"},{"size":3202,"mtime":1616664930837,"results":"95","hashOfConfig":"60"},{"size":17328,"mtime":1613917710899,"results":"96","hashOfConfig":"60"},{"size":12575,"mtime":1616932031183,"results":"97","hashOfConfig":"60"},{"size":8268,"mtime":1616858566536,"results":"98","hashOfConfig":"60"},{"size":8616,"mtime":1616914130769,"results":"99","hashOfConfig":"60"},{"size":1081,"mtime":1616225245121,"results":"100","hashOfConfig":"60"},{"size":9746,"mtime":1616777262331,"results":"101","hashOfConfig":"60"},{"size":4467,"mtime":1616852831468,"results":"102","hashOfConfig":"60"},{"size":6327,"mtime":1614425122400,"results":"103","hashOfConfig":"60"},{"size":14204,"mtime":1614421940513,"results":"104","hashOfConfig":"60"},{"size":5158,"mtime":1616852386887,"results":"105","hashOfConfig":"60"},{"size":8862,"mtime":1613990955110,"results":"106","hashOfConfig":"60"},{"size":9760,"mtime":1616850003022,"results":"107","hashOfConfig":"60"},{"size":3993,"mtime":1614239510725,"results":"108","hashOfConfig":"60"},{"size":4268,"mtime":1616943374886,"results":"109","hashOfConfig":"60"},{"size":15011,"mtime":1616761945916,"results":"110","hashOfConfig":"60"},{"size":3596,"mtime":1614238520437,"results":"111","hashOfConfig":"60"},{"size":2027,"mtime":1616943030917,"results":"112","hashOfConfig":"60"},{"size":8837,"mtime":1616936947059,"results":"113","hashOfConfig":"60"},{"size":7727,"mtime":1616854159618,"results":"114","hashOfConfig":"60"},{"size":18296,"mtime":1616944291976,"results":"115","hashOfConfig":"60"},{"size":22497,"mtime":1616913086557,"results":"116","hashOfConfig":"60"},{"size":3326,"mtime":1616928981358,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1xyr1rt",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"120"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"120"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"120"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\index.js",[],["267","268"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\reportWebVitals.js",[],["269","270"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\App.js",["271","272"],"import React, { Component } from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./components/login.component\";\nimport SignUp from \"./components/signup.component\";\nimport AuthService from \"./services/auth.service\"\n\n\nimport Dashboard from './pages/dashboard';\nimport Employees from './pages/employees';\nimport Profile from './pages/profile';\nimport Leaders from './pages/leaders';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  render(){\n    return (\n\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path=\"/sign-in\" component={Login} />\n                  <Route path=\"/sign-up\" component={SignUp} />\n                  <Route path='/dashboard'>\n                    <Dashboard/>\n                  </Route>\n                  <Route path='/employees' component={Employees}/>\n                  <Route path='/leaders' component={Leaders}/>\n                  <Route path='/profile'>\n                    <Profile/>\n                  </Route>\n                </Switch>      \n    );\n  }\n}\n\nexport default App;","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\login.component.js",["273","274","275","276","277","278","279","280"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, TextField, Typography } from \"@material-ui/core\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    buuttonSignIn: {\r\n        width: '100%',\r\n        margin: theme.spacing(2),\r\n        backgroundColor: '#060b26', \r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: \"#000361\",\r\n            cursor: 'default'\r\n        },\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignIn(props){\r\n\r\n        const  classes  = styles();\r\n\r\n        const [email, setEmail] = React.useState(\"\")\r\n        const [password, setPassword] = React.useState(\"\")\r\n        const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n        const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n        const [redirect, setRedirect] = React.useState(null)\r\n        const [valid, setValid] = React.useState(false)\r\n        const [notify, setNotify] = \r\n        React.useState(props && props.location && props.location.state && props.location.state.notify ? \r\n            {isOpen: true, message: 'You are successfully registered', type: \"success\"}\r\n            :{ isOpen: false, message: '', type: '' })\r\n\r\n        const handleSubmit = (e)=>{\r\n            e.preventDefault()\r\n            AuthService.login(email, password)\r\n                .then(()=>{\r\n                    console.log(\"LOG\", JSON.parse(sessionStorage.getItem('efficiency')))\r\n                    console.log(\"LOG@\", JSON.parse(sessionStorage.getItem('user')))\r\n                    setRedirect(\"/dashboard\")\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 401) resMessage = \"Bad credentials\"\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                    }\r\n                    else{\r\n                        resMessage = \"Server is not available\"\r\n                    }\r\n                    setNotify({\r\n                        isOpen:true,\r\n                        message:resMessage,\r\n                        type: 'error'})\r\n                  }\r\n                );\r\n        }\r\n\r\n        const handleChangeEmail = (e)=>{\r\n            setEmail(e.target.value)\r\n        }\r\n        \r\n        const handleChangePassword = (e) =>{\r\n            setPassword(e.target.value)\r\n        }\r\n\r\n        if (redirect){\r\n            return(\r\n            <div>\r\n                {/* <Switch>\r\n                <Route exact path='/dashboard'>\r\n                    <Dashboard/>\r\n                  </Route>\r\n                  <Route path='/profile'>\r\n                    <Profile/>\r\n                  </Route>\r\n                  </Switch> */}\r\n                 <Redirect to={redirect}/>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner-singin\">\r\n                <Grid container justify=\"center\">\r\n                    <Grid item>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Sign in\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid  container justify=\"center\">\r\n                        <Grid item>\r\n                            <TextField required  \r\n                            label=\"Email\" \r\n                            style={{width: '100%', color: 'red'}}\r\n                                margin=\"normal\" \r\n                                onChange={handleChangeEmail}\r\n                                helperText={emailErrMessage}/>\r\n                            <TextField required  label=\"Password\" style={{width: '100%'}} type=\"password\"\r\n                                margin=\"normal\" onChange={handleChangePassword}/>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container  justify=\"center\" md={12}>\r\n                        {/* <Link to={\"/dashboard\"} variant=\"body2\"> */}\r\n                            <Button className={classes.buuttonSignIn} variant=\"contained\" type=\"submit\">Sign In</Button>    \r\n                        {/* </Link> */}\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        {/* <Grid item>\r\n                                <Link to={\"/sign-in\"} variant=\"body2\">\r\n                                    <Typography variant=\"caption\">\r\n                                        Forgot password?\r\n                                    </Typography>\r\n                                </Link>\r\n                        </Grid> */}\r\n                        <Grid item>\r\n                            <Link to={\"/sign-up\"} variant=\"body2\" style={{color: '#060b26'}}>\r\n\r\n                                    <Typography variant=\"caption\" >\r\n                                        Don't have an account? Sign up.\r\n                                    </Typography>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n        </>\r\n        )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\signup.component.js",["281","282","283","284","285"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, InputLabel, MenuItem, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { SubdirectoryArrowLeftRounded } from \"@material-ui/icons\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport Notification from \"./employees/Notification\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      marginBottom: theme.spacing(3),\r\n    //   margin: theme.spacing(3),\r\n      minWidth: '30ch',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    inputField:{\r\n        width: '30ch',\r\n    },\r\n    signUpButton:{\r\n        width: '100%',\r\n        backgroundColor: '#060b26', \r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: \"#000361\",\r\n            cursor: 'default'\r\n        },\r\n    }\r\n  }));\r\n\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [redirect, setRedirect] = React.useState('');\r\n\r\n    const [fullName, setFullName] = React.useState(null);\r\n    const [email, setEmail] = React.useState(null);\r\n    const [password, setPassword] = React.useState(null);\r\n    const [department, setDepartment] = React.useState(null);\r\n    const [position, setPosition] = React.useState(null);\r\n    const [role, setRole] = React.useState(null);\r\n\r\n    const [emailErrMessage, setEmailErrMessage] = React.useState(\"\")\r\n    const [passwordErrMessage, setPasswordErrMessage] = React.useState(\"\")\r\n    const [valid, setValid] = React.useState(false)\r\n    const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const emailValidate = (emailValue) => {\r\n        let err = \"\"\r\n        if ((/$^|.+@.+..+/).test(emailValue)){\r\n            err = \"\"\r\n            setValid(true)\r\n        }\r\n        else{\r\n            err=\"Email is no valid\"\r\n            setValid(false)\r\n        }\r\n        setEmailErrMessage(err)\r\n    }\r\n\r\n    const passwordValidate = (passwordValue) => {\r\n        let err = \"\"\r\n        if (passwordValue.length >= 6 || passwordValue.length < 1){\r\n            err = \"\"\r\n            setValid(true) \r\n        }\r\n        else{\r\n            err = \"Password should consist more than 6 symbols\"\r\n            setValid(false)\r\n        }   \r\n        setPasswordErrMessage(err)\r\n    }\r\n\r\n\r\n    const handleFullNameChange = (event) => {\r\n        setFullName(event.target.value)\r\n    }\r\n\r\n    const handlePositionChange = (event) => {\r\n        setPosition(event.target.value)\r\n    }\r\n\r\n    const handleEmailChange = (event) =>{\r\n        emailValidate(event.target.value)\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) =>{\r\n        passwordValidate(event.target.value)\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleDepartmentChange = (event)=>{\r\n        setDepartment(event.target.value)\r\n    }\r\n\r\n    const handleRoleChange = (event) => {\r\n      setRole(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(valid){\r\n            AuthService.register(\r\n                email,\r\n                password,\r\n                fullName,\r\n                department,\r\n                position,\r\n                role\r\n            )\r\n            .then((response)=>{\r\n                    if (role === 'employee') setRedirect(\"/leaders\")\r\n                    else setRedirect(\"/dashboard\")\r\n                    // console.log(response)\r\n\r\n                },\r\n                error => {\r\n                    let resMessage = \"\"\r\n                    if(error.response){\r\n                        if (error.response.status == 500) resMessage = \"Server error\"\r\n                        else resMessage = error.response.data.message\r\n                    }\r\n                    else resMessage=\"Server is not available\"\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: resMessage,\r\n                        type: \"error\"\r\n                    })\r\n                    \r\n                    setMessage(resMessage);\r\n                })\r\n        }\r\n    }\r\n    if(redirect){        \r\n        return (\r\n            <div>\r\n                <Redirect to={redirect}/>\r\n                {/* <Redirect to={{\r\n                        pathname: redirect,\r\n                        state: {\r\n                            notify: true\r\n                        }\r\n                    }}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n    <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner-singup\">\r\n\r\n            <Grid container justify=\"center\">\r\n                <Grid item>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign up\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input\r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Email\" \r\n                            margin=\"normal\"\r\n                            onChange={handleEmailChange}\r\n                            error={emailErrMessage}\r\n                            errorText=\"table\"\r\n                            errorStyle=\"relative\"/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                                \r\n                                <Controls.Input \r\n                                    required \r\n                                    margin=\"normal\"\r\n                                    className={classes.inputField}\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    onChange={handlePasswordChange}\r\n                                    error={passwordErrMessage}\r\n                                />\r\n                        </Grid>\r\n                        \r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            required \r\n                            className={classes.inputField} \r\n                            label=\"Full name\"  \r\n                            margin=\"normal\"\r\n                            onChange={handleFullNameChange}/>\r\n                                {/* <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" /> */}\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n \r\n                            className={classes.inputField} \r\n                            label=\"Department\" \r\n                            margin=\"normal\"\r\n                            onChange={handleDepartmentChange}/>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <FormControl \r\n                                margin=\"normal\" \r\n                                className={classes.formControl}>\r\n                                    <InputLabel required>Position type</InputLabel>\r\n                                    <Select\r\n                                    value={role}\r\n                                    onChange={handleRoleChange}\r\n                                    >\r\n                                        <MenuItem value={\"leader\"}>Manager</MenuItem>\r\n                                        <MenuItem value={\"employee\"}>Employee</MenuItem>\r\n                                    </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item md={6}>\r\n                            <Controls.Input \r\n                            className={classes.inputField} \r\n                            label=\"Position\" \r\n                            margin=\"normal\"\r\n                            onChange={handlePositionChange}/>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container md={12} >\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.signUpButton} style={{width: '100%'}} type=\"submit\">Sign Up</Button>    \r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                        <Link to={\"/sign-in\"} variant=\"body2\">\r\n                            <Typography variant=\"caption\" style={{color: '#060b26'}}>\r\n                                Already have an account? Sign in\r\n                            </Typography>\r\n                        </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                <Notification\r\n                    notify={notify}\r\n                    setNotify={setNotify}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\serviceWorker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\topbar.component.js",["286","287","288","289","290"],"import React from 'react';\r\n\r\nimport Person from \"@material-ui/icons/Person\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography,\r\n  Container, \r\n  IconButton, \r\n  Button,\r\n  Box, MenuItem, Select\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\n\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    route:{\r\n      flexGrow: 1\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1)\r\n    }, \r\n    title: { \r\n      flexGrow: 1\r\n    },\r\n  }))\r\n\r\nexport default function TopBar(props) {\r\n        const classes = useStyles();\r\n        const [openProfile, setOpenProfile] = React.useState(null);\r\n        const handleClickProfile = event => {\r\n          if (openProfile && openProfile.contains(event.target)) {\r\n            setOpenProfile(null);\r\n          } else {\r\n            setOpenProfile(event.currentTarget);\r\n          }\r\n        };\r\n        const handleCloseProfile = () => {\r\n          setOpenProfile(null);\r\n        };\r\n    \r\n        return(\r\n            <>\r\n                <AppBar position=\"fixed\">\r\n                        <Container fixed>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" className={classes.menuButton}>\r\n                            </IconButton>\r\n                            {/* Компонент куда записываем текст */}\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                            Time Tracker\r\n                            </Typography>\r\n                            {/* <Box mr={3}>\r\n                            <Button color=\"inherit\" variant=\"outlined\">Log In</Button>\r\n                            </Box> */}\r\n                            {/* <Button color=\"secondary\" variant=\"contained\">Sign Up</Button> */}\r\n                            <div className={classes.manager}>\r\n                                <Button\r\n                                    style={{color:\"black\"}}\r\n                                    onClick={handleClickProfile}\r\n                                    className={classes.buttonLink}\r\n                                >\r\n                                    <Person style={{color:\"black\"}}className={classes.icons} />\r\n                                </Button>\r\n                                <Poppers\r\n                                    open={Boolean(openProfile)}\r\n                                    anchorEl={openProfile}\r\n                                    transition\r\n                                    disablePortal\r\n                                >\r\n                                {({ TransitionProps, placement }) => (\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                                        <MenuList role=\"menu\">\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-in\"} style={{color:\"black\"}}>\r\n                                                    Log in\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                <Link to={\"/sign-up\"} style={{color:\"black\"}}>\r\n                                                        Sign up\r\n                                                </Link>\r\n                                            </MenuItem>\r\n                                            <Divider light />\r\n                                            <MenuItem\r\n                                                onClick={handleCloseProfile}\r\n                                                className={classes.dropdownItem}\r\n                                            >\r\n                                                \r\n                                            Forgot password\r\n                                            </MenuItem>\r\n                                        </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                    // </Grow>\r\n                                )}\r\n                                </Poppers>\r\n                            </div>\r\n\r\n                            \r\n                        </Toolbar>\r\n                        </Container>\r\n                </AppBar>\r\n            </>\r\n        )\r\n}\r\n",["291","292"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\index.js",["293","294"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\n\r\n\r\n// const Home = () => {\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         height: '90vh'\r\n//       }}\r\n//     >\r\n//       <h1>Home</h1>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\index.js",["295","296","297","298"],"import React from 'react';\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink\r\n} from './NavbarElements';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography, IconButton } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../services/auth.service\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    // position: 'relative',\r\n    // top: '0px',\r\n    // left: '0px',\r\n    // position: 'fixed',\r\n    // top: '0px',\r\n    // width: '100%',\r\n    marginBottom: '-1px'\r\n  },\r\n  navMenu:{\r\n    // display: 'flex',\r\n    // justifyContent: 'space-between',\r\n    marginLeft: '56px'\r\n  },\r\n  // signOut:{\r\n  //   marginRight: '62px',\r\n  //   // marginTop: '12px',\r\n  //   display: 'flex',\r\n  //   alignItems: 'center',\r\n  //   height: '40px',\r\n  //   background: '#00a6fb',\r\n  //   color: 'black'\r\n  // }\r\n\r\n  exitIcon: {\r\n    fontSize: '32px',\r\n    '&:hover': {\r\n      color: \"#f50057\",\r\n      // cursor: 'default'\r\n  }\r\n  }\r\n}));\r\n\r\nconst handleLogOut = e =>{\r\n  AuthService.logout()\r\n}\r\n\r\nconst Navbar = () => {\r\n  const user = AuthService.getCurrentUser().userInfo;\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Nav  className={classes.navbar}>\r\n        <Bars />\r\n        <NavMenu className={classes.navMenu}>\r\n          {/* <div> */}\r\n          {user.userRole === 'LEADER' && \r\n            <NavLink to='/dashboard' activeStyle>\r\n              Dashboard\r\n            </NavLink>}\r\n\r\n\r\n            {user.userRole === \"LEADER\" ?\r\n                (<NavLink to='/employees' activeStyle>\r\n                  Employees\r\n                </NavLink>)\r\n                :\r\n                (<NavLink to='/leaders' activeStyle>\r\n                  Managers\r\n                </NavLink>)\r\n            }\r\n            <NavLink to='/profile' activeStyle>\r\n              Profile\r\n            </NavLink>\r\n          {/* </div> */}\r\n        </NavMenu>\r\n            {/* <Button>\r\n              <Link  to={'/sign-in'} variant=\"body2\" className={classes.signOut}>>\r\n\r\n              </Link>\r\n            </Button> */}\r\n\r\n          <div>\r\n            <Typography variant='h6' style={{color: 'white', display: 'inline-block', marginRight: '24px', fontWeight:'500', marginTop: '15px'}}>{user.email}</Typography>\r\n            <IconButton component={ Link } to=\"/sign-in\" variant=\"contained\" style={{display: 'inline-block', color: 'white', marginRight: '48px'}}>\r\n                <ExitToAppOutlinedIcon className={classes.exitIcon}/>\r\n            </IconButton>\r\n          </div>\r\n          {/* <Link to={'/sign-in'} variant=\"body2\" className={classes.signOut}>\r\n              <Button variant=\"contained\" color=\"primary\"  onClick={handleLogOut}>Sign Out</Button>   \r\n          </Link> */}\r\n\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\dashboard.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\employees.js",["299","300"],"import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport EmployeesComponent from './Employees/EmployeesComponent';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport AuthService from '../services/auth.service'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#333996\",\r\n      light: '#3c44b126'\r\n    },\r\n    secondary: {\r\n      main: \"#f83245\",\r\n      light: '#f8324526'\r\n    },\r\n    background: {\r\n      default: \"#f4f5fd\"\r\n    },\r\n  },\r\n  overrides:{\r\n    MuiAppBar:{\r\n      root:{\r\n        transform:'translateZ(0)'\r\n      }\r\n    }\r\n  },\r\n  props:{\r\n    MuiIconButton:{\r\n      disableRipple:true\r\n    }\r\n  }\r\n})\r\n\r\nconst Employees = () => {\r\n\r\n  // const user = AuthService.getCurrentUser();\r\n\r\n\r\n  // if(user && user.userInfo.userRole === \"LEADER\"){\r\n    return (\r\n      <>\r\n      <Navbar position=\"fixed\"/>\r\n      <ThemeProvider theme={theme}>        \r\n        <EmployeesComponent/>\r\n      </ThemeProvider>\r\n      </>\r\n    );\r\n  // }\r\n  // else if (user && user.userInfo.userRole === \"EMPLOYEE\") return(<div/>)\r\n  // return (<Redirect to =\"sign-in\"/>)\r\n};\r\n\r\nexport default Employees;\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\profile.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeesComponent.js",["301","302","303","304","305"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\Employees\\EmployeeForm.js",["306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../components/employees/controls/Controls\";\r\nimport { useForm, Form } from '../../components/employees/useForm';\r\nimport * as employeeService from \"../../services/employeeService\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'MALE', title: 'Male' },\r\n    { id: 'FEMALE', title: 'Female' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    department: '',\r\n    position: '',\r\n    gender: 'male',\r\n    hireDate: new Date(),\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { updateEmployee, recordForEdit } = props\r\n    // const [userInfo, setUserInfo] = useState(Auth)\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        // if ('departmentId' in fieldValues)\r\n        //     temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n    // console.log(initialFValues)\r\n\r\n    // console.log(values)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateEmployee(values)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        disabled\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Department\"\r\n                        name=\"department\"\r\n                        value={values.department}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <Controls.OutlinedInput\r\n                        label=\"Position\"\r\n                        name=\"position\"\r\n                        value={values.position}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Controls.RadioGroup\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        value={values.gender}\r\n                        onChange={handleInputChange}\r\n                        items={genderItems}\r\n                    />\r\n                    {/* <Controls.OutlinedInput\r\n                        name=\"mobile\"\r\n                        label=\"Mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        // options={employeeService.getDepartmentCollection()}\r\n                        error={errors.mobile}\r\n                    /> */}\r\n                    <Controls.DatePicker\r\n                        name=\"hireDate\"\r\n                        label=\"Hire Date\"\r\n                        value={values.hireDate}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" \r\n                            color=\"secondary\"/>\r\n                        {/* <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} /> */}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employeeService.js",["313","314","315","316","317"],"const KEYS = {\r\n    employees: 'employees',\r\n    employeeId: 'employeeId'\r\n}\r\n\r\nlet data = {\r\n    city: \"dfgdsfhtrjrjf\",\r\n    email: \"sdfsdgdfherhe@dsfgdfg\",\r\n    fullName: \"dfgdfgdf\",\r\n    gender: \"male\",\r\n    hireDate: \"2021-01-20T19:08:16.404Z\",\r\n    id: 12,\r\n    isPermanent: false,\r\n    mobile: \"3453453542\",\r\n  };\r\n  \r\n  let json = JSON.stringify(data);\r\n  let arr = [];\r\n\r\nexport const getDepartmentCollection = () => ([\r\n    { id: '1', title: 'Development' },\r\n    { id: '2', title: 'Marketing' },\r\n    { id: '3', title: 'Accounting' },\r\n    { id: '4', title: 'HR' },\r\n])\r\n\r\nexport function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId()\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\nexport function updateEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    let recordIndex = employees.findIndex(x => x.id == data.id);\r\n    employees[recordIndex] = { ...data }\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function deleteEmployee(id) {\r\n    let employees = getAllEmployees();\r\n    employees = employees.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\r\n}\r\n\r\nexport function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, '0')\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\r\n    return id;\r\n}\r\n\r\nexport function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\r\n    // let employees = JSON.parse(json)\r\n    //map departmentID to department title\r\n    let departments = getDepartmentCollection();\r\n    arr.push(data)\r\n    // console.log(employees)\r\n    // console.log(arr)\r\n\r\n\r\n    // return employees.map(x => ({\r\n    //     ...x,\r\n    //     department: departments[x.departmentId - 1].title\r\n    // }))\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useForm.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Controls.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\ActionButton.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Button.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\DatePicker.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Checkbox.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Input.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\Select.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\RadioGroup.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Notification.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\Popup.js",["318"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, IconButton} from '@material-ui/core';\r\nimport Controls from \"./controls/Controls\";\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        // padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, setOpenPopup } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle} style={{color: 'white', backgroundColor: '#060b26'}}>\r\n                <div style={{ display: 'flex'}}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1, fontWeight: '600', marginTop: '8px' }}>\r\n                        {title}\r\n                    </Typography>\r\n\r\n                    <IconButton size=\"small\" color = \"secondary\" style={{marginRight: '16px'}} onClick={()=>{setOpenPopup(false)}} >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    {/* <Controls.ActionButton\r\n                        color=\"secondary\"\r\n                        onClick={()=>{setOpenPopup(false)}}>\r\n                        <CloseIcon />\r\n                    </Controls.ActionButton> */}\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\useTable.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\ConfirmDialog.js",["319","320"],"import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, makeStyles, IconButton } from '@material-ui/core'\r\nimport Controls from \"./controls/Controls\";\r\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center'\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.main,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.secondary.light,\r\n            cursor: 'default'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '8rem',\r\n        }\r\n    }\r\n}))\r\n\r\nexport default function ConfirmDialog(props) {\r\n\r\n    const { confirmDialog, setConfirmDialog } = props;\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Dialog open={confirmDialog.isOpen} classes={{ paper: classes.dialog }}>\r\n\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <IconButton disableRipple className={classes.titleIcon}>\r\n                    <NotListedLocationIcon />\r\n                    {/* < PermIdentityOutlinedIcon/> */}\r\n                </IconButton>\r\n            </DialogTitle>\r\n\r\n            <DialogContent className={classes.dialogContent}>\r\n                <Typography variant=\"h6\">\r\n                    {confirmDialog.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\">\r\n                    {confirmDialog.subTitle}\r\n                </Typography>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogAction}>\r\n                <Controls.Button\r\n                    text=\"No\"\r\n                    color=\"default\"\r\n                    onClick={() => setConfirmDialog({ ...confirmDialog, isOpen: false })} />\r\n                <Controls.Button\r\n                    text=\"Yes\"\r\n                    color=\"secondary\"\r\n                    onClick={confirmDialog.onConfirm} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\profileInfo.component.js",["321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Paper, IconButton, Icon, Button, DialogContent, Container, Typography} from \"@material-ui/core\";\r\nimport PermIdentityOutlinedIcon from '@material-ui/icons/PermIdentityOutlined';\r\nimport Controls from \"./employees/controls/Controls\";\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthService from \"../services/auth.service\";\r\nimport UserService from \"../services/user.service\";\r\nimport Notification from \"./employees/Notification\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useForm, Form } from './employees/useForm';\r\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialog: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        textAlign: 'center',\r\n        backgroundColor: '#060b26',\r\n        color: 'white'\r\n    },\r\n    dialogContent: {\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        padding: \"auto\",\r\n    },\r\n    dialogAction: {\r\n        justifyContent: 'center'\r\n    },\r\n    titleIcon: {\r\n        // backgroundColor: \"#f8324526\",#060b26\r\n        // backgroundColor: \"#4aedc4\",\r\n        backgroundColor: \"whie\",\r\n        marginTop: '20px',\r\n\r\n        color: \"#060b26\",\r\n        justify:\"center\",\r\n        // '&:hover': {\r\n        //     backgroundColor: \"#00b0ff\",\r\n        //     cursor: 'default'\r\n        // },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '10rem',\r\n        }\r\n    },\r\n    formControl: {\r\n        marginBottom: theme.spacing(3),\r\n      //   margin: theme.spacing(3),\r\n        minWidth: '30ch',\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      avatar: {\r\n          marginBottom: theme.spacing(1),\r\n          marginLeft: theme.spacing(2),\r\n          backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      inputField:{\r\n          width: '40ch',\r\n      },\r\n\r\n      settings: {\r\n        paddingLeft: theme.spacing(9),\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(5)\r\n      },\r\n}))\r\n\r\n\r\nChangePassword.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    selectedValue: PropTypes.string.isRequired,\r\n  };\r\n\r\n\r\nexport default function ProfileInfo(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [userInfo, setUserInfo] = useState(AuthService.getCurrentUser().userInfo);\r\n    const [errors, setErrors] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(null);\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n\r\n    const genderItems = [\r\n        { id: 'MALE', title: 'male' },\r\n        { id: 'FEMALE', title: 'female' },\r\n    ]\r\n    const validateOnChange = true\r\n\r\n    const validate = (fieldValues = userInfo) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == userInfo)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserService.getUserInfo(userInfo.id)\r\n        .then((response) =>{\r\n            setUserInfo(response)\r\n        },\r\n        error =>{\r\n            console.log(\"ERROR\", error.response)\r\n            let errMessage = \"\"\r\n            if (error.response){\r\n                if(error.response.status == 500) errMessage = \"Server error\"\r\n                else errMessage = error.response.data\r\n            }\r\n            else errMessage = \"Server is not available\"\r\n\r\n            setNotify({\r\n                isOpen: true,\r\n                message: errMessage,\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n    \r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setUserInfo({\r\n            ...userInfo,\r\n            [name]: value\r\n        })\r\n        if (validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = (value) => {\r\n      setOpen(false);\r\n      setSelectedValue(value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            UserService.updateUserInfo(userInfo)\r\n            .then(\r\n                (response) =>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                },\r\n                error =>{\r\n                    console.log(\"ERROR\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n                }\r\n            );\r\n        }\r\n    }\r\n    if (userInfo.userRole === 'LEADER'){\r\n        return(\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PersonRoundedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={classes.settings}>\r\n                        <Grid container justify=\"center\">\r\n                            <Grid item xs={12} sm={6} md={6} >\r\n                                <Controls.Input\r\n                                    className={classes.inputField}\r\n                                    name=\"fullName\"\r\n                                    label=\"Full Name\"\r\n                                    value={userInfo.fullName}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.fullName}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input\r\n                                    disabled\r\n                                    className={classes.inputField}\r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={userInfo.email}\r\n                                    onChange={handleInputChange}\r\n                                    error={errors.email}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <Controls.Input \r\n                                    className={classes.inputField}\r\n                                    name=\"department\" \r\n                                    label=\"Department\" \r\n                                    value={userInfo.department}\r\n                                    onChange={handleInputChange}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6}>\r\n                                <TextField\r\n                                        className={classes.inputField}\r\n                                        label=\"Position\"\r\n                                        name=\"position\"\r\n                                        value={userInfo.position}\r\n                                        onChange={handleInputChange}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                </div>  \r\n            <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\", backgroundColor: 'white'}}>Change Password</Button>\r\n                    </Grid>\r\n            </Grid>\r\n            </form>\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n            <Container maxWidth=\"md\">\r\n            <Grid container justify=\"center\">\r\n                    <IconButton disableRipple className={classes.titleIcon}>\r\n                            {/* <NotListedLocationIcon /> */}\r\n                            <PersonRoundedIcon/>\r\n                    </IconButton>\r\n            </Grid>\r\n            <Form onSubmit={handleSubmit}>\r\n            <div className={classes.settings} justifyContent=\"center\" justify=\"center\">\r\n\r\n                <Grid container justify=\"center\" justifyContent=\"center\">\r\n                    <Grid item xs={6}>\r\n\r\n                        <Controls.Input\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            value={userInfo.email}\r\n                            onChange={handleInputChange}\r\n                            error={errors.email}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        \r\n                        <Controls.Input\r\n                            label=\"Department\"\r\n                            name=\"department\"\r\n                            value={userInfo.department}\r\n                            onChange={handleInputChange}\r\n                            // error={errors.department}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <Controls.Input\r\n                            label=\"Position\"\r\n                            name=\"position\"\r\n                            value={userInfo.position}\r\n                            onChange={handleInputChange}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n\r\n                    <Controls.Input\r\n                            name=\"fullName\"\r\n                            label=\"Full Name\"\r\n                            value={userInfo.fullName}\r\n                            onChange={handleInputChange}\r\n                            error={errors.fullName}\r\n                            variant=\"outlined\"\r\n                            />\r\n\r\n                        <Controls.DatePicker\r\n                            name=\"hireDate\"\r\n                            label=\"Hire Date\"\r\n                            value={userInfo.hireDate}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <Controls.RadioGroup\r\n                            name=\"gender\"\r\n                            label=\"Gender\"\r\n                            value={userInfo.gender}\r\n                            onChange={handleInputChange}\r\n                            items={genderItems}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n                <Grid container spacing={3} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" style={{width:\"192px\"}}>Update</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" onClick={handleClickOpen} style={{width:\"192px\"}}>Change Password</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </Form>\r\n            \r\n\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n\r\n            <ChangePassword userEmail={userInfo.email} selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n\r\n            \r\n            </Container>\r\n        \r\n    )}\r\n\r\n\r\n    function ChangePassword(props) {\r\n        const classes = useStyles()\r\n    \r\n        const onClose = props.onClose\r\n        const selectedValue = props.selectedValue\r\n        const open = props.open\r\n        const userEmail = props.userEmail;\r\n    \r\n        const [errMessageNew, setErrMessageNew] = useState(\"\") \r\n        const [errMessageConfirm, setErrMessageConfirm] = useState(\"\") \r\n        const [newPassword, setNewPassword] = useState(\"\") \r\n        const [password, setPassword] = useState(\"\")\r\n        const [notify, setNotify] = React.useState({ isOpen: false, message: '', type: '' })\r\n\r\n      \r\n        const handleClose = () => {\r\n          onClose(selectedValue);\r\n        };\r\n      \r\n        const handleInputNewPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value.length < 6 ) \r\n                setErrMessageNew(\"the minimum password length must be 6\")\r\n            else {\r\n                setErrMessageNew(\"\")\r\n                setNewPassword(value)\r\n            }\r\n        }\r\n        const handleInputConfirmPassword = e => {\r\n            const { name, value } = e.target\r\n            if(value !== newPassword) setErrMessageConfirm(\"Passwords do not match\")\r\n            else setErrMessageConfirm(\"\")\r\n        }\r\n    \r\n        const handlePasswordSubmit = e =>{\r\n            e.preventDefault()\r\n            console.log(errMessageNew, errMessageConfirm)\r\n            const body = {\r\n                email: userEmail,\r\n                password: password,\r\n                newPassword: newPassword\r\n            }\r\n            if (!errMessageNew \r\n                && !errMessageConfirm \r\n                && password.length > 0 \r\n                && newPassword.length > 0){\r\n                UserService.updateUserPassword(body)\r\n                .then((response)=>{\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: response,\r\n                        type: \"success\"\r\n                    })\r\n                    console.log(\"Response\", response.data)\r\n                }\r\n                ,\r\n                error=>{\r\n                    console.log(\"RESP\", error.response)\r\n                    let errMessage = \"\"\r\n                    if (error.response){\r\n                        if(error.response.status == 500) errMessage = \"Server error\"\r\n                        else errMessage = error.response.data\r\n                    }\r\n                    else errMessage = \"Server is not available\"\r\n\r\n                    setNotify({\r\n                        isOpen: true,\r\n                        message: errMessage,\r\n                        type: \"error\"\r\n                    })\r\n\r\n                }\r\n                )\r\n            }\r\n        }\r\n    \r\n        return (\r\n            <div>\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n          <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open} className={classes.dialog}>\r\n            <DialogTitle id=\"simple-dialog-title\" className={classes.dialogTitle}><Typography variant=\"h6\">Change password</Typography></DialogTitle>\r\n            <DialogContent className={classes.dialogContent}>\r\n    \r\n                <form onSubmit={handlePasswordSubmit}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} sm={6} md={8} >\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            />\r\n                        <Controls.Input    \r\n                            style={{margin:'8px', width: '100%'}}    \r\n                            label=\"New password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputNewPassword}\r\n                            error={errMessageNew}\r\n                            variant=\"outlined\"/>   \r\n                        <Controls.Input   \r\n                            style={{margin:'8px', width: '100%'}}\r\n                            label=\"Confirm new password\"\r\n                            type=\"password\"\r\n                            onChange={handleInputConfirmPassword}\r\n                            error={errMessageConfirm}\r\n                            variant=\"outlined\"/>  \r\n                        <Button \r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\" \r\n                            style={{width:\"50%\", marginTop: \"8px\"}} \r\n                            onClick={handleClose}>Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n    \r\n            </DialogContent>\r\n          </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\auth.service.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\employees\\controls\\OutlinedInput.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\leaders.js",[],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\user.service.js",["335"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8080/user\"\r\nclass User{\r\n\r\n\r\n    getUserInfo(userId){\r\n        return axios.get(API_URL + \"/getUserInfo\",{ \r\n                                                    params:{userId:userId},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                  })\r\n        .then(response =>{\r\n            if (response.data.id){\r\n                let user = JSON.parse(sessionStorage.getItem('user'))\r\n                response.data.token = user.userInfo.token;\r\n                user.userInfo = response.data\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n            }\r\n            return response.data\r\n        })\r\n    }\r\n\r\n    updateUserInfo(newUserInfo) {\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        user.userInfo = newUserInfo\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        console.log(\"USER\",user)\r\n\r\n        return axios.post(API_URL + \"/update/info\", newUserInfo, this.config())\r\n        .then(response => {\r\n            return response.data})\r\n    }\r\n\r\n    updateUserPassword(body){\r\n        return axios.post(API_URL + \"/update/password\", body, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then(response => {\r\n            return response.data}\r\n        )\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new User()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\manager.service.js",["336","337"],"// import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8090/user\"\r\n\r\n\r\nclass Manager{\r\n\r\n    getEmployeesRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getEmployees\",{ \r\n                                                    params:{userId:user.userInfo.id},\r\n                                                    headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n            .then(response =>{\r\n                    user.employees = response.data\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                    return response.data}\r\n            )\r\n    }\r\n\r\n    updateEmployeeInfo(employeeInfo){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeInfo.id){\r\n                user.employees[i] = employeeInfo\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n\r\n    updateEmployeeInfoRest(employeeInfo){    \r\n        return axios.post(API_URL + \"/update/employee\", employeeInfo, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let i=0; i< user.employees.length; i++){\r\n            if (user.employees[i].id === employeeId){\r\n                user.employees.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        return user.employees\r\n    }\r\n    \r\n    deleteEmployeeRest(employeeId){\r\n        return axios.post(API_URL + \"/delete/employee\", {\"employeeId\": employeeId}, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return  AuthService.getCurrentUser().userInfo.token\r\n    }\r\n\r\n\r\n    getEmployeeInfoFromSessionStorage(employeeId){\r\n        \r\n        let user = JSON.parse(sessionStorage.getItem('user'))\r\n        for (let employee of user.employees){\r\n            // console.log(\"EM\", employee)\r\n            if (employee.id == employeeId) {\r\n                // console.log('LLKL')\r\n                return employee\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new Manager()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\employee.service.js",["338","339"],"import { AlternateEmail } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport AuthService from \"./auth.service\"\r\n\r\n\r\nconst API_URL = \"http://localhost:8090/user\"\r\n\r\n\r\nclass EmployeeService{\r\n\r\n    getAllManagersRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getAllManagers\",{headers: {Authorization: \"Bearer \"+ this.getToken()}})\r\n                .then(response =>{\r\n                        user.managers = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    getManagerRest(){\r\n        let user = AuthService.getCurrentUser()\r\n        return axios.get(API_URL + \"/getManager\",{ \r\n                                                        params:{userId:user.userInfo.id},\r\n                                                        headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n                                                    })\r\n                .then(response =>{\r\n                        user.userManager = response.data\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        return response.data}\r\n                )\r\n    }\r\n\r\n    chooseManagerRest(manager){\r\n         let user = AuthService.getCurrentUser();\r\n         user.userManager = manager;\r\n         sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n\r\n         let body = {\r\n             \"userId\": user.userInfo.id,\r\n             \"managerId\": manager.id\r\n         }\r\n\r\n         return axios.post(API_URL + \"/addManager\", body, this.config())\r\n         .then((response) => {return this.buildNotification(response)},\r\n            (error) => {return this.buildErrorNotification(error)})\r\n    }\r\n\r\n    deleteManagerRest(){\r\n        let user = AuthService.getCurrentUser();\r\n        user.userManager = null;\r\n        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n        let body = {\r\n            \"userId\": user.userInfo.id,\r\n        }\r\n\r\n        return axios.post(API_URL + \"/deleteManager\", body, this.config())\r\n        .then((response) => {return this.buildNotification(response)},\r\n             (error) => {return this.buildErrorNotification(error)}\r\n        )\r\n    }\r\n\r\n    getUserManger(){\r\n        return JSON.parse(sessionStorage.getItem(\"user\")).userManager\r\n    }\r\n\r\n\r\n    buildNotification(response){\r\n        return {\r\n            isOpen: true,\r\n            message: response.data,\r\n            type: \"success\"\r\n        }\r\n    }\r\n\r\n    buildErrorNotification(error){\r\n        let errMessage = \"\"\r\n        if (error.response){\r\n            if(error.response.status == 500) errMessage = \"Server error\"\r\n            else errMessage = error.response.data\r\n        }\r\n        else errMessage = \"Server is not available\"\r\n        return {\r\n            isOpen: true,\r\n            message: errMessage,\r\n            type: \"error\"\r\n        }\r\n    }\r\n    \r\n    config(){\r\n        return {\r\n            headers: {Authorization: \"Bearer \"+ this.getToken()}\r\n        }\r\n    }\r\n    getToken(){\r\n        return AuthService.getCurrentUser().userInfo.token\r\n    }\r\n}\r\n\r\nexport default new EmployeeService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\pages\\LeadersComponent.js",["340","341","342","343","344","345","346"],"import React, { useState, useEffect } from 'react'\r\nimport { Paper, makeStyles, TableBody, TableRow, TableCell, Typography, TextField} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\n\r\nimport Notification from \"../components/employees/Notification\";\r\nimport ConfirmDialog from \"../components/employees/ConfirmDialog\";\r\nimport Controls from \"../components/employees/controls/Controls\";\r\nimport useTable from \"../components/employees/useTable\";\r\nimport AuthService from \"../services/auth.service\"\r\nimport EmployeeService from \"../services/employee.service\";\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n    },\r\n    searchInput: {\r\n        width: '176px',\r\n        paddingLeft: '48px',\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    employeesComponent:{\r\n        width: '100%',\r\n        position: 'absolute',\r\n      },\r\n    root: {\r\n        width: '100%',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(3),\r\n        boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n        borderRadius: \"25px\",\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n}))\r\n\r\n\r\n\r\nconst headCells = [\r\n    { id: 'email', alignRight: false, disablePadding: true, label: 'Email Adress' },\r\n    { id: 'fullName', alignRight: false, disablePadding: false, label: 'Manager Name'},\r\n    { id: 'department', alignRight: false, disablePadding: false, label: 'Department'},\r\n    { id: 'position', alignRight: false, disablePadding: false, label: 'Position' },\r\n    { id: 'action', alignRight: false, disablePadding: false, label: 'Action' },\r\n  ];\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n          </TableCell>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.alignRight ? 'right' : 'left'}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nexport default function LeadersComponent() {\r\n\r\n    const [rows, setRows] = useState(AuthService.getCurrentUser().managers)\r\n\r\n    const classes = useStyles();\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [notify, setNotify] = useState({ isOpen: false, message: '', type: '' })\r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen: false, title: '', subTitle: '' })\r\n    const [userManager, setUserManager ]=useState(AuthService.getCurrentUser().userManager)\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('name');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(rows, headCells, filterFn);\r\n\r\n\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n    \r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        EmployeeService.getManagerRest()\r\n        .then((response) =>{\r\n            setUserManager(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n\r\n        EmployeeService.getAllManagersRest()\r\n        .then((response) =>{\r\n            setRows(response)\r\n        },\r\n        error =>{\r\n            setNotify({\r\n                isOpen: true,\r\n                message: EmployeeService.buildErrorNotification(error),\r\n                type: \"error\"\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value == \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.email.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const chooseManager = (item) => {\r\n        setUserManager(item)\r\n        EmployeeService.chooseManagerRest(item)\r\n        .then((response) => {\r\n            setNotify(response)})\r\n    }\r\n\r\n    const deleteManager = () => {\r\n        setUserManager(null)\r\n        EmployeeService.deleteManagerRest()\r\n        .then((response) => {\r\n            setNotify(response)})\r\n\r\n        setConfirmDialog({\r\n            ...confirmDialog,\r\n            isOpen: false\r\n        })\r\n    }\r\n\r\n    if(userManager){\r\n        return(\r\n            <>\r\n            <Paper className={classes.pageContent}>\r\n            <Typography style={{paddingLeft: '64px', paddingTop: '24px', paddingBottom: '24px'}} variant=\"h4\">Your manager</Typography>\r\n\r\n                <div className={classes.root}>\r\n                    <TableContainer>\r\n\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell padding=\"checkbox\"></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Email</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Full name</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Department</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Position</Typography></TableCell>\r\n                                <TableCell><Typography className=\"font-weight-bold\">Action</Typography></TableCell>\r\n\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                        <TableBody>\r\n                            <TableRow key={userManager.id}>\r\n                                <TableCell padding=\"checkbox\"></TableCell>\r\n                                <TableCell>{userManager.email}</TableCell>\r\n                                <TableCell>{userManager.fullName}</TableCell>\r\n                                <TableCell>{userManager.department}</TableCell>\r\n                                <TableCell>{userManager.position}</TableCell>\r\n                                \r\n                                <TableCell>\r\n                                <Controls.ActionButton\r\n                                                color=\"secondary\"\r\n                                                onClick={() => {\r\n                                                    setConfirmDialog({\r\n                                                        isOpen: true,\r\n                                                        title: 'Are you sure to delete this record?',\r\n                                                        onConfirm: () => {deleteManager() }\r\n                                                    })\r\n                                                }}>\r\n                                                <CloseIcon fontSize=\"small\" />\r\n                                            </Controls.ActionButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            </Paper>\r\n\r\n            {/* <Paper className={classes.pageContent}>\r\n                <h4>Your manager</h4>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        <TableRow key={userManager.id}>\r\n                            <TableCell>{userManager.email}</TableCell>\r\n                            <TableCell>{userManager.fullName}</TableCell>\r\n                            <TableCell>{userManager.department}</TableCell>\r\n                            <TableCell>{userManager.position}</TableCell>\r\n                            \r\n                            <TableCell>\r\n                            <Controls.ActionButton\r\n                                            color=\"secondary\"\r\n                                            onClick={() => {\r\n                                                setConfirmDialog({\r\n                                                    isOpen: true,\r\n                                                    title: 'Are you sure to delete this record?',\r\n                                                    onConfirm: () => {deleteManager() }\r\n                                                })\r\n                                            }}>\r\n                                            <CloseIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </TblContainer>\r\n            </Paper>  */}\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            </>\r\n        )\r\n    }\r\n    else\r\n    return (\r\n        <>\r\n        <div style={{paddingRight: '32px', paddingLeft:'32px'}}>\r\n            <Paper className={classes.pageContent}>\r\n                <TextField style={{width: '27%', marginLeft: '48px', marginBottom: '16px', marginTop: '16px'}} label=\"Search employee\" onChange={handleSearch}>\r\n                </TextField>\r\n                <div className={classes.root}>\r\n                    <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n\r\n\r\n                        <TableBody>\r\n                        {stableSort(filterFn.fn(rows), getComparator(order, orderBy))\r\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                            .map((item, index) => {\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    role=\"checkbox\"\r\n                                    tabIndex={-1}\r\n                                    key={item.fullName}\r\n                                >\r\n                                <TableCell padding=\"checkbox\">\r\n                                </TableCell>\r\n                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                    {item.email}\r\n                                </TableCell>\r\n                                <TableCell>{item.fullName}</TableCell>\r\n                                <TableCell>{item.department}</TableCell>\r\n                                <TableCell>{item.position}</TableCell>\r\n                                <TableCell>\r\n\r\n                                            <Controls.ActionButton\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => { chooseManager(item) }}>\r\n                                                <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                            </Controls.ActionButton>\r\n\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n\r\n\r\n\r\n\r\n            {/* <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search manager by email\"\r\n                        className={classes.searchInput}\r\n                        onChange={handleSearch}\r\n                    />\r\n                </Toolbar>\r\n\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting().map((item, index )=>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.fullName}</TableCell>\r\n                                    <TableCell>{item.department}</TableCell>\r\n                                    <TableCell>{item.position}</TableCell>\r\n                                    \r\n                                    <TableCell>\r\n\r\n                                        <Controls.ActionButton\r\n                                                color=\"primary\"\r\n                                                onClick={() => { chooseManager(item) }}>\r\n                                        <CheckCircleOutlineOutlinedIcon fontSize=\"small\" />\r\n                                        </Controls.ActionButton>\r\n                                    \r\n                                    </TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper> */}\r\n\r\n            <Notification\r\n                notify={notify}\r\n                setNotify={setNotify}\r\n            />\r\n            <ConfirmDialog\r\n                confirmDialog={confirmDialog}\r\n                setConfirmDialog={setConfirmDialog}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\dashboardEfficiency.js",["347","348","349","350","351","352","353","354"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStat.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { useState, Fragment  } from \"react\";\r\nimport { Grid, Select, MenuItem, Input, Typography, Card } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classnames from \"classnames\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport EfficiencyService from '../../services/efficiency.service';\r\nimport DateService from '../../services/date.service';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\n\r\n\r\nconst useStyles =  makeStyles((theme) => ({\r\n  totalValueContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"baseline\",\r\n  },\r\n  card:{\r\n    boxShadow: \"0px 7px 20px rgba(10, 1, 50, 0.3)\",\r\n    borderRadius: \"20px\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingRight: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  title:{\r\n    paddingTop: theme.spacing(2),\r\n    // paddingBottom: theme.spacing(2),\r\n  },\r\n  totalValue: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  bottomTypography:{\r\n    fontWeight: '600',\r\n    fontSize: '12px',\r\n    fontFamily: 'Poppins, sans-serif'\r\n  },\r\n  bottomStatsContainer:{\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardAction: {\r\n    borderRadius: \"20px\",\r\n    width: '118%',\r\n    marginLeft: \"-25px\",\r\n    marginRight: \"-20px\",\r\n    display: 'block',\r\n    textAlign: 'initial'\r\n  },\r\n  actionArea: {\r\n    \"&:hover $focusHighlight\": {\r\n      opacity: 0\r\n    }\r\n  },\r\n  focusHighlight: {}\r\n}));\r\n\r\n\r\nexport default function BigStat(props) {\r\n  var { category, total, percentage} = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n\r\n\r\n  return (\r\n\r\n//     <ButtonBase\r\n//     className={classes.cardAction}\r\n//     onClick={event => {}}\r\n// > \r\n<Fragment>\r\n\r\n<div className=\"icon-demo-box\">\r\n\r\n    <Card className=\"p-2 text-primary\">\r\n      {/* <CardActionArea\r\n        classes={{\r\n          root: classes.actionArea,\r\n          focusHighlight: classes.focusHighlight\r\n        }}\r\n      > */}\r\n\r\n     \r\n      {/* <CardContent> */}\r\n\r\n        <div className={classes.title}>\r\n            <Typography style={{fontFamily: 'Poppins, sans-serif', fontWeight: '600',}} variant=\"h6\">{category}</Typography>\r\n        </div>\r\n        <div className={classes.totalValueContainer}>\r\n          <div className={classes.totalValue}>\r\n            <Typography variant=\"h3\" style={{fontFamily: 'Poppins, sans-serif', marginRight:'12px', fontWeight: '900'}}>\r\n              {DateService.secondsToHoursAndMinutes(total.value)}\r\n            </Typography>\r\n          </div>\r\n          {(category === 'Effective' || category === 'Neutral') && \r\n                (total.percent.profit\r\n                      ? \r\n                (total.percent.value == 0 ? <div></div> : <div>\r\n                  <ArrowUpwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                  <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div>) : \r\n                (total.percent.value == 0 ? <div></div> : <div>\r\n                    <ArrowDownwardIcon style={{color: 'crimson'}}/>\r\n                    <Typography style={{color:\"crimson\", display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>))\r\n            }\r\n            {/* {category === 'Neutral' && \r\n                (total.percent.profit\r\n                      ? \r\n                <div style={{marginRight: '90px'}}>\r\n                  <ArrowUpwardIcon style={{marginTop: '-8px'}}/>\r\n                  <Typography style={{ display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div> : \r\n                <div>\r\n                    <ArrowDownwardIcon/>\r\n                    <Typography style={{display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>)\r\n            } */}\r\n            {(category === 'Ineffective' || category === 'Without') && \r\n                (total.percent.profit\r\n                      ? \r\n                (total.percent.value === 0 ? <div></div> : <div >\r\n                  <ArrowUpwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                  <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                      {total.percent.value}%\r\n                  </Typography>\r\n                </div>) : \r\n                (total.percent.value === 0 ? <div></div> :<div>\r\n                    <ArrowDownwardIcon style={{color: '#00cc65'}}/>\r\n                    <Typography style={{color:\"#00cc65\", display: 'inline-block'}}>\r\n                        {total.percent.value}%\r\n                      </Typography>\r\n                </div>))\r\n            }\r\n        </div>\r\n\r\n        <div className={classes.totalValueContainer}>\r\n          <Typography className=\"text-black-50\" style={{fontSize:'20 px', marginRight:'12px'}}>{percentage.value}%</Typography>\r\n          <div style={{marginRight: '90px'}}>\r\n            {(category === 'Effective' || category === 'Neutral') && (percentage.percent.profit ? \r\n                    ( percentage.percent.value === 0 ? <div></div> : <div>\r\n                      <ArrowUpwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                          {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (percentage.percent.value === 0 ? <div></div> : <div>\r\n                      <ArrowDownwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            }\r\n            {/* {category === 'Neutral' && (percentage.percent.profit ? \r\n                    (<div>\r\n                      <ArrowUpwardIcon style={{marginTop: '-8px'}}/>\r\n                      <Typography style={{display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (<div>\r\n                      <ArrowDownwardIcon style={{ marginTop: '-8px'}}/>\r\n                      <Typography style={{display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            } */}\r\n            {(category === 'Ineffective' || category === 'Without') && (percentage.percent.profit ? \r\n                    (percentage.percent.value === 0 ? <div></div> : <div>\r\n                      <ArrowUpwardIcon style={{color:'crimson', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"crimson\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>)\r\n                     : \r\n                    (percentage.percent.value === 0 ? <div></div> : <div>\r\n                      <ArrowDownwardIcon style={{color:'#00cc65', marginTop: '-8px'}}/>\r\n                      <Typography style={{color:\"#00cc65\", display: 'inline-block', fontSize: '14px'}}>\r\n                        {percentage.percent.value}%\r\n                      </Typography>\r\n                    </div>))\r\n            }\r\n            \r\n          </div>\r\n        </div>\r\n        {/* </CardContent>\r\n        </CardActionArea> */}\r\n\r\n      </Card>\r\n      </div>\r\n          </Fragment>\r\n\r\n\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\effectiveLineChart.js",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\wrappers\\Typography.js",["389","390"],"import { Typography} from '@material-ui/core';\r\n\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    roboto:{\r\n        fontWeight: '400',\r\n        fontSize: '14px',\r\n        fontFamily: 'Roboto, sans-serif',\r\n    },\r\n    popins:{\r\n        fontFamily: 'Poppins, sans-serif'\r\n    },\r\n    poppinsDefault:{\r\n        fontWeight: '900',\r\n        fontSize: '16px',\r\n        fontFamily: 'Poppins, sans-serif'\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport default function MuiTypography(props){\r\n    const {value, font, weight, className, style, variant} = props\r\n    const classes = styles()\r\n    if (className){\r\n        return <Typography className={className} style={style} variant={variant}>{value}</Typography>\r\n    }\r\n    if (font === 'poppins'){\r\n        return (<Typography variant={variant} className={classes.popins} style={style}>{value}</Typography>)\r\n    }\r\n    return (<Typography className={classes.roboto} style={style} variant={variant}>{value}</Typography>)\r\n}","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamChart.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport AuthService from '../../../services/auth.service'\r\nimport EfficiencyService from '../../../services/efficiency.service'\r\n// import EfficiencyService from '../../../services/efficiency.service'\r\n// import DateService from '../../../services/data.service'\r\nimport ReactApexChart from 'apexcharts';\r\nimport DateService from '../../../services/date.service';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\nconst dataEffective = [121,60,143,90,41,200,100, 131, 300, 100, 57,99]\r\nconst dataNeutral =   [136,190,101,98,230,15,240, 23, 90,20,34,90]\r\nconst dataIneffective = [100,120,10,10,15,20, 11, 0,76,1.0,80,1]\r\nconst dataWithout = [200,55,104,210,100,201,0, 100, 10,99,20,33]\r\n\r\nconst dataEffectiveWeek = [121,230,240,250,130,120,140,123,243,120,86,135]\r\nconst dataNeutralWeek = [100,212,20,80,130,270,310,107,14,78,101,100]\r\nconst dataIneffectiveWeek = [20,120,150,154,76,45,13,67,72,50,61,21]\r\nconst dataWithoutWeek = [132,11,13,53,46,97,120,53,62,78,23,109]\r\n\r\n\r\nconst maxYVal = 28800\r\nconst tickAmount = 4\r\n\r\n  function computeNewOptions(beginInd, endInd, dataAndCategories){\r\n    return {\r\n      series: [\r\n        {\r\n          name: 'Ineffective',\r\n          data: dataAndCategories.ineffective.slice(beginInd, endInd + 1)\r\n        },\r\n        {\r\n        name: 'Neutral',\r\n        data: dataAndCategories.neutral.slice(beginInd, endInd + 1)\r\n      },\r\n      {\r\n        name: 'Effective',\r\n        data: dataAndCategories.effective.slice(beginInd, endInd + 1)\r\n      },\r\n      {\r\n        name: 'Without category',\r\n        data: dataAndCategories.without.slice(beginInd, endInd + 1)\r\n      }],\r\n      xaxis:{\r\n        categories: dataAndCategories.categories.slice(beginInd, endInd + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const getEmployeesInfo = () =>{\r\n    let res = []\r\n    const employeeList = AuthService.getCurrentUser().employees\r\n    employeeList.forEach(employee => {\r\n      res.push({\r\n        \"id\": employee.id,\r\n        \"name\": employee.fullName\r\n      })\r\n    })\r\n    return res\r\n  }\r\n\r\n\r\n  const getDataAndCategories = () =>{\r\n\r\n    let categories = []\r\n    let effective = []\r\n    let neutral = []\r\n    let ineffective = []\r\n    let without = []\r\n\r\n    let efficiencyAllTeam = EfficiencyService.getEfficiencyFromSSAllTeam()\r\n    let employeeInfoList = getEmployeesInfo()\r\n    console.log(employeeInfoList)\r\n\r\n    for (const [key, value] of Object.entries(efficiencyAllTeam)){\r\n        for (let employeeInfo of employeeInfoList){\r\n          console.log(employeeInfo)\r\n          console.log(key)\r\n          if (employeeInfo.id == key){\r\n            console.log('HERE')\r\n            categories.push([employeeInfo.name])\r\n            break;\r\n          }\r\n        }\r\n        let numOfWorkingDays = 1\r\n        if (value.current.EFFECTIVE.length === 7) numOfWorkingDays = 5\r\n\r\n        effective.push(Math.floor(value.current.EFFECTIVE.reduce((a,b) => a + b)/numOfWorkingDays))\r\n        neutral.push(Math.floor(value.current.NEUTRAL.reduce((a,b) => a + b)/numOfWorkingDays))\r\n        ineffective.push(Math.floor(value.current.INEFFECTIVE.reduce((a,b) => a + b)/numOfWorkingDays))\r\n        without.push(Math.floor(value.current.WITHOUT.reduce((a,b) => a + b)/numOfWorkingDays))\r\n    }\r\n\r\n    return {\r\n      categories: categories,\r\n      effective: effective,\r\n      neutral: neutral,\r\n      ineffective: ineffective,\r\n      without: without\r\n    }\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const dataAndCategories = getDataAndCategories()\r\n    // const catLen = dataAndCategories.categories.length\r\n\r\n    // console.log(catLen)\r\n    // const eInd = Math.min(ca)\r\n    // console.log(dataAndCategories.categories)\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(Math.min(dataAndCategories.categories.length, 6))\r\n\r\n    const series =  [\r\n      {\r\n        name: 'Ineffective',\r\n        data: dataAndCategories.ineffective.slice(0,6),\r\n      },\r\n      {\r\n        name: 'Neutral',\r\n        data: dataAndCategories.neutral.slice(0,6)\r\n      }, \r\n      {\r\n        name: 'Effective',\r\n        data: dataAndCategories.effective.slice(0,6)\r\n      }, \r\n      {\r\n        name: 'Without',\r\n        data: dataAndCategories.without.slice(0,6)\r\n      }\r\n    ]\r\n\r\n    const options = {\r\n      chart: {\r\n        id: 'efficiencyOfEmployees',\r\n        type: 'bar',\r\n        height: 350,\r\n        stacked: true,\r\n        width: 1,\r\n        animations: {\r\n          enabled: true,\r\n          easing: 'easeinout',\r\n          speed: 300,\r\n          animateGradually: {\r\n              enabled: true,\r\n              delay: 1\r\n          },\r\n          dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 350\r\n          }\r\n       },\r\n      toolbar:{\r\n        show: false\r\n      }\r\n      },\r\n  \r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 6,\r\n          columnWidth: '5%',\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      xaxis: {\r\n          categories: dataAndCategories.categories.slice(0, 6),\r\n          labels: {rotate: -45}\r\n      }\r\n      ,\r\n      yaxis:{\r\n  \r\n        min: 0,\r\n        max: maxYVal,\r\n        tickAmount: tickAmount,\r\n  \r\n        labels: {\r\n          show: true,\r\n          align: 'right',\r\n          minWidth: 0,\r\n          maxWidth: 160,\r\n          style: {\r\n              colors: [],\r\n              fontSize: '12px',\r\n              fontFamily: 'Poppins, sans-serif',\r\n              fontWeight: 900,\r\n          },\r\n          formatter: (value) => { return DateService.secondsToHours(value)},\r\n        },\r\n      },\r\n    \r\n      fill: {\r\n        colors: ['#d90368', '#f5cc00', '#00cc99', '#bcb8b1'],\r\n        opacity: 1\r\n        },\r\n    }\r\n    \r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= dataAndCategories.categories.length -1 ? newBeginInd + 6 : dataAndCategories.categories.length - 1\r\n\r\n      // let dataE, dataN, dataI, dataW\r\n      // if (timePeriod === 2){\r\n      //   dataE = dataEffectiveWeek\r\n      //   dataN = dataNeutralWeek\r\n      //   dataI = dataIneffectiveWeek\r\n      //   dataW = dataWithoutWeek\r\n      // }\r\n      // else {\r\n      //   dataE = dataEffective\r\n      //   dataN = dataNeutral\r\n      //   dataI = dataIneffective\r\n      //   dataW = dataWithout\r\n      // }\r\n      const newOpt = computeNewOptions(newBeginInd, newEndInd, dataAndCategories)\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > dataAndCategories.categories.length - 1 - 6) newEndInd = dataAndCategories.categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n        \r\n        // let dataE, dataN, dataI, dataW\r\n        // if (timePeriod === 2){\r\n        //   dataE = dataEffectiveWeek\r\n        //   dataN = dataNeutralWeek\r\n        //   dataI = dataIneffectiveWeek\r\n        //   dataW = dataWithoutWeek\r\n        // }\r\n        // else {\r\n        //   dataE = dataEffective\r\n        //   dataN = dataNeutral\r\n        //   dataI = dataIneffective\r\n        //   dataW = dataWithout\r\n        // }\r\n        const newOpt = computeNewOptions(newBeginInd, newEndInd, dataAndCategories)\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    }\r\n    \r\n\r\n    // React.useEffect(() => {\r\n    //   if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n    //   else if(props.timePeriod == 2){\r\n    //     const newOpt = computeNewOptions(beginInd, endInd, dataEffectiveWeek, dataNeutralWeek, dataIneffectiveWeek, dataWithoutWeek)\r\n    //     ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)  \r\n    //     setTimePeriod(props.timePeriod)\r\n    //   }\r\n\r\n    //   else if(props.timePeriod == 1){\r\n    //     const newOpt = computeNewOptions(beginInd, endInd, dataEffective, dataNeutral, dataIneffective, dataWithout)\r\n    //     ReactApexChart.exec(\"efficiencyOfEmployees\", 'updateOptions', newOpt, true)\r\n    //     setTimePeriod(props.timePeriod)\r\n    //   }\r\n    // });\r\n\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          <div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === dataAndCategories.categories.length ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>)\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\efficiencyOfTeamSumChart.js",["407","408","409","410"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\nimport EfficiencyService from '../../../services/efficiency.service'\r\nimport DateService from '../../../services/date.service'\r\n\r\n\r\n\r\nconst series = [0,0,0,0]\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'efficiencyOfEmployeesSum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective', 'Without'],\r\n  fill: {\r\n    colors: ['#d90368', '#ffee32', '#00cc99', '#bcb8b1'],  \r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return DateService.secondsToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Average',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return DateService.secondsToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors:['#020202', '#020202', '#020202', '#020202']\r\n        }\r\n      },\r\n    legend: {show: false},\r\n    tooltip: {enabled: false},\r\n}\r\n\r\n\r\nconst getSeries = () => {\r\n  const efficiencyForAllTeam = EfficiencyService.getEfficiencyFromSSAllTeam();\r\n  let effectiveCurrentTotal = 0\r\n  let neutralCurrentTotal = 0\r\n  let ineffectiveCurrentTotal = 0\r\n  let withoutCurrentTotal = 0\r\n\r\n  let counter = 0\r\n  let numOfWorkingDays = 1;\r\n  for (const [key, value] of Object.entries(efficiencyForAllTeam)){\r\n      if (counter == 0) {\r\n        if (value.current.EFFECTIVE.length == 24) numOfWorkingDays = 1\r\n        else if (value.current.EFFECTIVE.length == 7) numOfWorkingDays = 5\r\n      }\r\n      effectiveCurrentTotal += value.current.EFFECTIVE.reduce((a,b) => a + b)\r\n      neutralCurrentTotal += value.current.NEUTRAL.reduce((a,b) => a + b)\r\n      ineffectiveCurrentTotal += value.current.INEFFECTIVE.reduce((a,b) => a + b)\r\n      withoutCurrentTotal += value.current.WITHOUT.reduce((a,b) => a + b)\r\n      counter++\r\n  }\r\n\r\n  \r\n  let effectiveCurrent = 0\r\n  let neutralCurrent = 0\r\n  let ineffectiveCurrent = 0\r\n  let withoutCurrent = 0\r\n\r\n\r\n  if (counter !== 0){\r\n      effectiveCurrent = Math.floor(effectiveCurrentTotal/(counter * numOfWorkingDays))\r\n      neutralCurrent = Math.floor(neutralCurrentTotal/(counter * numOfWorkingDays))\r\n      ineffectiveCurrent = Math.floor(ineffectiveCurrentTotal/(counter * numOfWorkingDays))\r\n      withoutCurrent =  Math.floor(withoutCurrentTotal/(counter * numOfWorkingDays))\r\n  }\r\n  return [effectiveCurrent, neutralCurrent, ineffectiveCurrent, withoutCurrent]\r\n}\r\n\r\nexport default function EfficiencySumChart(props){\r\n    \r\n    React.useEffect(() => {\r\n\r\n      const newSeries = getSeries()\r\n      const newOptions = {\r\n        series: newSeries\r\n      }\r\n      ReactApexChart.exec(\"efficiencyOfEmployeesSum\", 'updateOptions', newOptions, true)  \r\n    });\r\n    return (\r\n      <Chart options={options} series={series} type=\"donut\" />\r\n    )\r\n}\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamChart.js",["411","412","413","414","415","416","417","418","419"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n  }\r\n}))\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst dataUsing = [121,60,143,90,41,200,100, 131, 300, 100, 57,99]\r\nconst dataWaste =   [136,190,101,98,230,15,240, 23, 90,20,34,90]\r\n// const dataIneffective = [100,120,10,10,15,20, 11, 0,76,1.0,80,1]\r\n// const dataWithout = [200,55,104,210,100,201,0, 100, 10,99,20,33]\r\n\r\nconst dataUsingWeek = [121,230,240,250,130,120,140,123,243,120,86,135]\r\nconst dataWasteWeek= [100,212,20,80,130,270,310,107,14,78,101,100]\r\n// const dataIneffectiveWeek = [20,120,150,154,76,45,13,67,72,50,61,21]\r\n// const dataWithoutWeek = [132,11,13,53,46,97,120,53,62,78,23,109]\r\n\r\n\r\nconst maxYVal = 600\r\nconst tickAmount = 5\r\n\r\nconst categories = [['Bobrov Artur'],['Kuznezova Veronika'], ['Lisa Davies'],['Maria Jones'],['Mark Evans'],['Michaylov Dmitry'],['Novikova Anna'],\r\n['David Smith'],['Paul Taylor'],['Popov Ilya'], ['Prokhorov Andrew'], ['Sorokin Alexandr']]\r\n\r\nconst series =  [\r\n  {\r\n    name: 'Using',\r\n    data: dataUsing.slice(0,6),\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: dataWaste.slice(0,6)\r\n  }\r\n]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usageTeam',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 350\r\n        }\r\n    },\r\n    toolbar:{\r\n      show: false\r\n    }\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 6,\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n        categories: categories.slice(0, 6),\r\n        labels: {rotate: -45}\r\n    }\r\n    ,\r\n    yaxis:{\r\n\r\n      min: 0,\r\n      max: maxYVal,\r\n      tickAmount: tickAmount,\r\n\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return minutesToHours(value) },\r\n      },\r\n    },\r\n    fill: {\r\n        colors: ['#e91e63', '#031d44'],\r\n        opacity: 1\r\n      },\r\n  }\r\n\r\n  function computeNewOptions(beginInd, endInd, dataUsing, dataWaste){\r\n    return {\r\n      series: [\r\n        {\r\n          name: 'Using',\r\n          data: dataUsing.slice(beginInd, endInd + 1)\r\n        },\r\n        {\r\n        name: 'Waste',\r\n        data: dataWaste.slice(beginInd, endInd + 1)\r\n      }],\r\n      xaxis:{\r\n        categories: categories.slice(beginInd, endInd + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(0)\r\n    const [endInd, setEndInd] = React.useState(6)\r\n    const catLen = categories.length\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      let newBeginInd\r\n      if (beginInd < 6)  newBeginInd = 0\r\n      else newBeginInd = beginInd - 6\r\n      let newEndInd = newBeginInd + 6 <= categories.length -1 ? newBeginInd + 6 : categories.length - 1\r\n\r\n      let dataU, dataW\r\n      if (timePeriod === 2){\r\n        dataU = dataUsingWeek\r\n        dataW = dataWasteWeek\r\n      }\r\n      else {\r\n        dataU = dataUsing\r\n        dataW = dataWaste\r\n      }\r\n      const newOpt = computeNewOptions(newBeginInd, newEndInd, dataU, dataW)\r\n      setBeginInd(newBeginInd)\r\n      setEndInd(newEndInd)\r\n      ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        let newEndInd\r\n        if (endInd > categories.length - 1 - 6) newEndInd = categories.length - 1\r\n        else newEndInd = endInd + 6\r\n        let newBeginInd = newEndInd-6 >= 0 ? newEndInd - 6 : 0\r\n        \r\n        let dataU, dataW\r\n        if (timePeriod === 2){\r\n          dataU = dataUsingWeek\r\n          dataW = dataWasteWeek\r\n        }\r\n        else {\r\n          dataU = dataUsing\r\n          dataW = dataWaste\r\n        }\r\n        const newOpt = computeNewOptions(newBeginInd, newEndInd, dataU, dataW)\r\n        setBeginInd(newBeginInd)\r\n        setEndInd(newEndInd)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        const newOpt = computeNewOptions(beginInd, endInd, dataUsingWeek, dataWasteWeek)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        const newOpt = computeNewOptions(beginInd, endInd,dataUsing, dataWaste)\r\n        ReactApexChart.exec(\"usageTeam\", 'updateOptions', newOpt, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n    return(\r\n      <div>\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          <div className={classes.bottomArrows}>\r\n            {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n            {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n          </div>)\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageChart.js",["420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435"],"// import React from 'react';\r\n// import Chart from 'react-apexcharts';\r\n// import ReactApexChart from 'apexcharts'\r\n// import {Button } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n// import KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n// import KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\n\r\n\r\n// const styles = makeStyles((theme) => ({\r\n//   bottomArrows:{\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     marginTop: theme.spacing(1)*-2\r\n//   }\r\n// }))\r\n\r\n\r\n\r\n// const dataUsing = [44, 50, 41, 37, 22, 13,12,25,21,27,21,34,12, 44, 50, 41, 37, 22, 13,12,25,21,27,21,34,12]\r\n// const dataWaste = [11, 5, 19, 20, 30, 41,43,30,19,21,30,16,48, 11, 5, 19, 20, 30, 41,43,30,19,21,30,16,48]\r\n// const categories = [['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n//         ['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n//         ['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00']]\r\n\r\n// const series =  [{\r\n//     name: 'using',\r\n//     data: dataUsing.slice(8, 20)\r\n//   },\r\n//   {\r\n//     name: 'waste',\r\n//     data: dataWaste.slice(8, 20)\r\n//   }]\r\n  \r\n//   const options = {\r\n//     chart: {\r\n//       id: 'usage',\r\n//       type: 'bar',\r\n//       height: 350,\r\n//       stacked: true,\r\n//       width: 50,\r\n//       foreColor: '#373d3f',\r\n//       animations: {\r\n//         enabled: true,\r\n//         easing: 'easeinout',\r\n//         speed: 800,\r\n//         animateGradually: {\r\n//             enabled: true,\r\n//             delay: 150\r\n//         },\r\n//         dynamicAnimation: {\r\n//             enabled: true,\r\n//             speed: 350\r\n//         }\r\n      \r\n//         },\r\n//         toolbar:{\r\n//             show: false\r\n//         }\r\n//     },\r\n  \r\n//     plotOptions: {\r\n//       bar: {\r\n//         borderRadius: 6,\r\n//         columnWidth: '25%',\r\n//       }\r\n//     },\r\n//     dataLabels: {\r\n//       enabled: false\r\n//     },\r\n//     legend: {\r\n//       show: false\r\n//     },\r\n//     states: {\r\n//       hover: {\r\n//           filter: {\r\n//               type: 'darken',\r\n//               value: 0.5,\r\n//           }\r\n//       },\r\n//     },\r\n//     xaxis: {\r\n//       categories: categories\r\n//     },\r\n  \r\n//     fill: {\r\n//         colors: ['#e91e63', '#031d44'],\r\n//         opacity: 1\r\n//       }\r\n    \r\n//   }\r\n\r\n\r\n//   const seriesWeek =  [{\r\n//     name: 'PRODUCT A',\r\n//     data: [44, 55, 41, 37, 22, 13,12],\r\n//   },\r\n//   {\r\n//     name: 'PRODUCT B',\r\n//     data: [16, 5, 19, 23, 38, 47,48]\r\n//   }]\r\n\r\n//   const optionsWeek = {\r\n//     series: seriesWeek,\r\n//     xaxis: {\r\n//       categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n//     },\r\n//   }\r\n\r\n//   const optionsDay = {\r\n//     series: series,\r\n//     xaxis: {\r\n//       categories: categories\r\n//     }\r\n//   }\r\n  \r\n\r\n\r\n//   function computeNewOptions(beginInd, endInd, dataUsing, dataWaste, categories){\r\n//     return {\r\n//       series: [{\r\n//           name: 'Using',\r\n//           data: dataUsing.slice(beginInd, endInd)\r\n//         }, {\r\n//           name: 'Waste',\r\n//           data: dataWaste.slice(beginInd, endInd)\r\n//         }],\r\n//         xaxis:{\r\n//           categories: categories.slice(beginInd, endInd)\r\n//         }\r\n//       }\r\n//   }\r\n\r\n\r\n//   export default function UsageByHoursChart(props){\r\n\r\n//     const classes = styles()\r\n\r\n//     const [timePeriod, setTimePeriod] = React.useState(0)\r\n//     const [beginInd, setBeginInd] = React.useState(8)\r\n//     const [endInd, setEndInd] = React.useState(20)\r\n//     const catLen = categories.length\r\n\r\n//     // const [endInd, setEndInd] = React.useState(20)\r\n\r\n//     const handleLeftClick = event => {\r\n\r\n//       if (beginInd == 0) return\r\n\r\n//       let newBeginInd = beginInd\r\n//       if (beginInd == 8){\r\n//         newBeginInd = 0\r\n//       }\r\n//       else if (beginInd == 12){\r\n//         newBeginInd = 8\r\n//       }\r\n\r\n//       const newOpt = computeNewOptions(newBeginInd, newBeginInd + 12, dataUsing, dataWaste, categories)\r\n//       console.log(\"NO\", newOpt)\r\n//       // {\r\n//       // series: [{\r\n//       //     name: 'Effective',\r\n//       //     data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }, {\r\n//       //     name: 'Neutral',\r\n//       //     data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }, {\r\n//       //     name: 'Ineffective',\r\n//       //     data: dataC.slice(newBeginInd, newBeginInd + 12)\r\n//       //   },\r\n//       //   {\r\n//       //     name: 'Without category',\r\n//       //     data: dataD.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }],\r\n//       //   xaxis:{\r\n//       //     categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n//       //   }\r\n//       // }\r\n//       setBeginInd(newBeginInd)\r\n//       setEndInd(newBeginInd + 12)\r\n//       ReactApexChart.exec(\"usage\", 'updateOptions', newOpt, true)\r\n//     }\r\n\r\n//     const handleRightClick = event => {\r\n\r\n//         if (beginInd == 12) return\r\n\r\n//         let newBeginInd = beginInd\r\n//         if (beginInd == 0) newBeginInd = 8\r\n//         else if (beginInd == 8) newBeginInd = 12\r\n\r\n//         const newOptions = computeNewOptions(newBeginInd, newBeginInd + 12, dataUsing, dataWaste, categories)\r\n//         // {\r\n//         //   series: [{\r\n//         //     name: 'Effective',\r\n//         //     data: dataA.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }, {\r\n//         //     name: 'Neutral',\r\n//         //     data: dataB.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }, {\r\n//         //     name: 'Ineffective',\r\n//         //     data: dataC.slice(newBeginInd, newBeginInd +12)\r\n//         //   },\r\n//         //   {\r\n//         //     name: 'Without category',\r\n//         //     data: dataD.slice(newBeginInd, newBeginInd +12)\r\n//         //   }\r\n//         // ],\r\n//         //   xaxis:{\r\n//         //     categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n//         //   }\r\n//         // }\r\n//         setBeginInd(newBeginInd)\r\n//         setEndInd(newBeginInd + 12)\r\n//         ReactApexChart.exec(\"usage\", 'updateOptions', newOptions, true)\r\n//     }\r\n\r\n\r\n        \r\n//       React.useEffect(() => {\r\n    \r\n//         if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n//         else if(props.timePeriod == 2){\r\n//           ReactApexChart.exec(\"usage\", 'updateOptions', optionsWeek, true) \r\n//           setTimePeriod(props.timePeriod)\r\n//         }\r\n \r\n\r\n//         else if(props.timePeriod == 1){\r\n//           ReactApexChart.exec(\"usage\", 'updateOptions', optionsDay, true)  \r\n//           setTimePeriod(props.timePeriod)\r\n//         }\r\n\r\n//       });\r\n\r\n//       return (\r\n//         <div>\r\n//           <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n\r\n\r\n//           {timePeriod === 1 && (<div className={classes.bottomArrows}>\r\n//               {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n//               {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n//           </div>)}\r\n\r\n          \r\n//           {/* {timePeriod === 2 && (<div className={classes.bottomArrows}>\r\n//               {beginInd === 0 ? (<Button disabled><KeyboardArrowLeftIcon/></Button>):(<Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>)}\r\n//               {endInd === catLen - 1 ? (<Button disabled><KeyboardArrowRightIcon/></Button>) : (<Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>)}\r\n//             </div>)} */}\r\n//         </div>\r\n//       )\r\n//   }\r\n  \r\n  \r\n\r\n\r\n\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n    // marginLeft: theme.spacing(5)\r\n  }\r\n}))\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\nconst maxYVal = 600\r\nconst tickAmount = 5\r\n\r\n\r\nconst dataUsing = [0,0,0,0,0,0,0,0, 23, 20, 8, 13, 17,11,12,12 ,20,20,10,19,16,14,19,14]\r\nconst dataWaste = [0,0,0,0,0,0,0,17,14,8,10,10,11,2,11,11,4,0,12,10,0,11,14,12,14]\r\n\r\n\r\nconst categories = [['00:00','-','01:00'],['01:00','-','2:00'], ['02:00','-','3:00'],['03:00','-','04:00'],['04:00','-','5:00'],['05:00','-','6:00'],['06:00','-','7:00'],\r\n['07:00','-','8:00'],['08:00','-','9:00'],['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00'], ['22.00','-','23:00'],['23.00','-','00:00']]\r\n\r\nconst series =  [ \r\n  {\r\n    name: 'Using',\r\n    data: dataUsing.slice(8,20)\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: dataWaste.slice(8,20)\r\n  }\r\n]\r\n  \r\n  \r\n  const options = {\r\n    chart: {\r\n      id: 'usage',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 450\r\n        }\r\n      },\r\n      toolbar:{show: false}\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return value + 'm' },\r\n      },\r\n    },\r\n    fill: {\r\n      colors: ['#e91e63', '#031d44'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\nconst seriesWeek =  [\r\n  {\r\n    name: 'Using',\r\n    data: [320, 217, 400, 423, 314, 0,0]\r\n  },\r\n  {\r\n    name: 'Waste',\r\n    data: [23, 21, 79, 85, 34, 0,0]\r\n  }\r\n]\r\n  \r\n  const optionsWeek = {\r\n    series: seriesWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: maxYVal,\r\n      tickAmount: tickAmount,\r\n      labels: {\r\n        formatter: (value) => { return minutesToHours(value) },\r\n      },\r\n    },\r\n  }\r\n\r\n  const optionsDay = {\r\n    series: series,\r\n    xaxis: {\r\n      categories:  categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 60,\r\n      tickAmount: 6,\r\n      labels: {\r\n        formatter: (value) => { return value + 'm'  },\r\n      },\r\n    },\r\n  }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n    const classes = styles()\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n    // const [endInd, setEndInd] = React.useState(20)\r\n\r\n    const handleLeftClick = event => {\r\n\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: [{\r\n          name: 'Using',\r\n          data: dataUsing.slice(newBeginInd, newBeginInd + 12)\r\n        }, {\r\n          name: 'Waste',\r\n          data: dataWaste.slice(newBeginInd, newBeginInd + 12)\r\n        }],\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"usage\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n\r\n        if (beginInd == 12) return\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: [{\r\n            name: 'Using',\r\n            data: dataUsing.slice(newBeginInd, newBeginInd + 12)\r\n          }, {\r\n            name: 'Waste',\r\n            data: dataWaste.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        ],\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', optionsWeek, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usage\", 'updateOptions', optionsDay, true)\r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n\r\n    return(\r\n      <div>\r\n\r\n          <Chart options={options} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n            <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n            <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n          </div>) : (<div></div>)}\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencySumChart.js",["436","437","438","439","440","441","442"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\nimport { FaRegClosedCaptioning } from 'react-icons/fa';\r\n\r\nimport EfficiencyService from '../../../services/efficiency.service'\r\nimport DateService from '../../../services/date.service'\r\n\r\n\r\nconst getOptions = (series, timePeriod) => {\r\n  if (timePeriod == 1 || timePeriod == 0){\r\n    return {\r\n      series:series,\r\n      plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    total: {label: 'Total'}\r\n                }\r\n            }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return  {\r\n    series: series,\r\n    plotOptions: {\r\n      pie: {\r\n          donut: {\r\n              labels: {\r\n                  total: {\r\n                      label: 'Average',\r\n                      formatter: function (w) {\r\n                        return DateService.secondsToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                          return a + b\r\n                        }, 0))\r\n                      }\r\n                    }\r\n                }\r\n            }\r\n          }\r\n        }\r\n    }\r\n}\r\n\r\nconst updateChart = (opt) =>{\r\n  ReactApexChart.exec(\"efficiencySum\", 'updateOptions', opt, true)  \r\n}\r\n\r\n\r\nconst getSeries = (efficiency, timePeriod) =>{\r\n\r\n  let effective, neutral, ineffective, without\r\n\r\n  if(timePeriod == 1 || timePeriod == 0){\r\n    effective = efficiency.EFFECTIVE.reduce((a, b) => a + b)\r\n    neutral = efficiency.NEUTRAL.reduce((a, b) => a + b)\r\n    ineffective = efficiency.INEFFECTIVE.reduce((a, b) => a + b)\r\n    without = efficiency.WITHOUT.reduce((a, b) => a + b)\r\n  }\r\n  else if (timePeriod == 2){\r\n    // console.log(\"Efficiency\", efficiency)\r\n\r\n    const numberOfWorkingDays = 5\r\n\r\n    effective = Math.floor(efficiency.EFFECTIVE.reduce((a, b) => (a + b)) / numberOfWorkingDays);\r\n    neutral = Math.floor(efficiency.NEUTRAL.reduce((a, b) => (a + b)) / numberOfWorkingDays);\r\n    ineffective = Math.floor(efficiency.INEFFECTIVE.reduce((a, b) => (a + b)) / numberOfWorkingDays);\r\n    without = Math.floor(efficiency.WITHOUT.reduce((a, b) => (a + b)) / numberOfWorkingDays);\r\n  }\r\n\r\n  return [effective, neutral, ineffective, without]\r\n}\r\n\r\n\r\nconst series = [0,0,0,0]\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'efficiencySum'\r\n  },\r\n  labels: ['Ineffective', 'Neutral', 'Effective', 'Without category'],\r\n  fill: {\r\n    colors: ['#d90368', '#ffee32', '#00cc99', '#bcb8b1'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return DateService.secondsToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return DateService.secondsToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    tooltip: {\r\n      enabled: false\r\n    },\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors:['#020202', '#020202', '#020202', '#020202']\r\n        }\r\n      },\r\n    \r\n    legend: {\r\n      show: false\r\n    },\r\n}\r\n\r\n\r\n  export default function EfficiencySumChart(props){\r\n      const employeeId = props.employeeId\r\n\r\n      React.useEffect(() => {\r\n        const ser = getSeries(EfficiencyService.getEfficiencyFromSessionStorage(employeeId).current, props.timePeriod)\r\n        const options = getOptions(ser, props.timePeriod)\r\n        ReactApexChart.exec(\"efficiencySum\", 'updateOptions', options, true)\r\n      });\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" width={'100%'} height={'80%'} />\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\tableMember.js",["443","444","445"],"import React from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n      marginTop: theme.spacing(3),\r\n      boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })); \r\n\r\n\r\nfunction createData(name, position, department, experience, status) {\r\n  return { name, position, department, experience, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 'Software Engineer', 'Dev', '3 years 4 mounth', true),\r\n  createData('Donut', 'ML engineer', 'ML', '0 years 3 mounth', false),\r\n  createData('Eclair', 'System Analytic', 'Analytics', '1 year 3 mounth', false),\r\n  createData('Frozen yoghurt', 'Senior System Analytic', 'Analytic', '2 years 2 mouth',true),\r\n  createData('Gingerbread', 'Juniour Software Developer', 'Dev', '0 years 2 mounth', true),\r\n  createData('Honeycomb', 'Senior Software Developer', 'Dev', '5 years 3 mounth', true),\r\n  createData('Ice cream sandwich', 'HR manager', \"HR\", '3 years', true),\r\n  createData('Jelly Bean', 'Accounter', 'Bookkeeping', '2 years 7 mounth', true),\r\n  createData('KitKat', 'Manager', 'Inner Managament', '4 years 2 mounth', true),\r\n  createData('Lollipop', 'Data Scientist', 'Analytics', '1 year 5 mounth', true),\r\n  createData('Marshmallow', 'ML researcher', 'Research', '0 years 3 mounth', false),\r\n  createData('Nougat', 'Data Engineer', 'ML', '3 years 2 mounth', true),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', alignRight: false, disablePadding: true, label: 'Members' },\r\n  { id: 'position', alignRight: true, disablePadding: false, label: 'Position' },\r\n  { id: 'department', alignRight: true, disablePadding: false, label: 'Department' },\r\n  { id: 'experience', alignRight: true, disablePadding: false, label: 'Experience' },\r\n  { id: 'status', alignRight: true, disablePadding: false, label: 'Status' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography className=\"font-weight-bold\">{headCell.label}</Typography>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n\r\n  const setSubjectOfChange = props.setSubjectOfChange\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [selectedMember, setSelectedMember] = React.useState(null);\r\n\r\n  const handleCheck = (event, name) =>{\r\n        if (selectedMember === name){\r\n          setSubjectOfChange(2)\r\n          setSelectedMember(null)\r\n        }\r\n        else{\r\n          setSubjectOfChange(1)\r\n          setSelectedMember(name)\r\n        }\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedMember === row.name;\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleCheck(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.position}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                      <TableCell align=\"right\">{row.experience}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                          {row.status ? <div className=\"badge badge-success h-auto\">\r\n                                            ACTIVE\r\n                                        </div>:\r\n                                            <div className=\"badge badge-danger h-auto\">\r\n                                                NOT ACTIVE\r\n                                            </div>\r\n                  }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n",["446","447"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\efficiencyChart.js",["448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nimport ReactApexChart from 'apexcharts';\r\n\r\nimport EfficiencyService from '../../../services/efficiency.service'\r\n\r\n\r\nconst styles = makeStyles((theme) => ({\r\n  bottomArrows:{\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: theme.spacing(1)*-2\r\n    // marginLeft: theme.spacing(5)\r\n  }\r\n}))\r\n\r\nfunction secondsToHours(seconds){\r\n  const hours = Math.floor(seconds/3600)\r\n  const minutes = Math.floor(seconds % 3600 / 60)\r\n  const sec = seconds % 3600 % 60\r\n\r\n  if (hours != 0){\r\n      if (minutes != 0){\r\n        if (sec != 0) return  hours+ 'h' + ' ' + minutes + 'm' + ' ' + sec + 's'\r\n        return hours+ 'h' + ' ' + minutes + 'm'\r\n      } \r\n      return hours+'h'\r\n  }\r\n  if (minutes != 0){\r\n    if (sec != 0) return minutes + 'm' + ' ' + sec + 's'\r\n    return  minutes + 'm'\r\n  }\r\n  return sec + 's'\r\n}   \r\n\r\nconst categories = [['00:00','-','01:00'],['01:00','-','2:00'], ['02:00','-','3:00'],['03:00','-','04:00'],['04:00','-','5:00'],['05:00','-','6:00'],['06:00','-','7:00'],\r\n['07:00','-','8:00'],['08:00','-','9:00'],['09:00','-','10:00'], ['10:00','-','11.00'], ['11:00','-','12:00'], ['12:00','-','13:00'],\r\n['13:00','-','14:00'], ['14:00','-','15:00'],['15.00','-','16:00'],['16.00','-','17:00'],['17.00','-','18:00'],\r\n['18.00','-','19:00'],['19.00','-','20:00'],['20.00','-','21:00'], ['21.00','-','22:00'], ['22.00','-','23:00'],['23.00','-','00:00']]\r\n  \r\n  const optionsDefault = {\r\n    chart: {\r\n      id: 'efficiency',\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      width: 50,\r\n      foreColor: '#373d3f',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'easeinout',\r\n        speed: 300,\r\n        animateGradually: {\r\n            enabled: true,\r\n            delay: 1\r\n        },\r\n        dynamicAnimation: {\r\n            enabled: true,\r\n            speed: 450\r\n        }\r\n      },\r\n      toolbar:{show: false}\r\n    },\r\n  \r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '25%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n      categories: categories.slice(8, 20)\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 3600,\r\n      tickAmount: 6,\r\n      labels: {\r\n        show: true,\r\n        align: 'right',\r\n        minWidth: 0,\r\n        maxWidth: 160,\r\n        style: {\r\n            colors: [],\r\n            fontSize: '12px',\r\n            fontFamily: 'Poppins, sans-serif',\r\n            fontWeight: 900,\r\n        },\r\n        formatter: (value) => { return secondsToHours(value) + 'm' },\r\n      },\r\n    },\r\n    fill: {\r\n      colors: ['#d90368', '#f5cc00', '#00cc99', '#bcb8b1'],\r\n      opacity: 1\r\n      },\r\n  }\r\n\r\n\r\n  \r\nconst seriesDay =  [\r\n  {\r\n    name: 'Ineffective',\r\n    data: [0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0,0,0]\r\n  },\r\n  {\r\n    name: 'Neutral',\r\n    data: [0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0,0,0]\r\n  }, \r\n  {\r\n    name: 'Effective',\r\n    data: [0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0,0,0]\r\n  },\r\n  {\r\n    name: 'Without',\r\n    data: [0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0,0,0,0]\r\n  }\r\n]\r\n\r\n\r\nconst seriesWeek =  [\r\n  {\r\n    name: 'Ineffective',\r\n    data: [0, 0, 119, 0, 0, 2345, 0]\r\n  },\r\n  {\r\n    name: 'Neutral',\r\n    data: [0, 0, 0, 0, 345, 0,0]\r\n  }, \r\n  {\r\n    name: 'Effective',\r\n    data: [0, 0, 244, 0, 1234, 0,0]\r\n  },\r\n  {\r\n    name: 'Without',\r\n    data: [0, 0, 0, 234, 0, 0, 0]\r\n  }\r\n]\r\n\r\n  \r\n  const optionsWeek = {\r\n    series: seriesWeek,\r\n    xaxis: {\r\n      categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n    },\r\n    yaxis:{\r\n      min: 0,\r\n      max: 28800,\r\n      tickAmount: 4,\r\n      labels: {\r\n        formatter: (value) => { return secondsToHours(value) },\r\n      },\r\n    },\r\n  }\r\n\r\n  // const optionsDay = {\r\n  //   // series: series,\r\n  //   xaxis: {\r\n  //     categories:  categories.slice(8, 20)\r\n  //   },\r\n  //   yaxis:{\r\n  //     min: 0,\r\n  //     max: 60,\r\n  //     tickAmount: 6,\r\n  //     labels: {\r\n  //       formatter: (value) => { return value + 'm'  },\r\n  //     },\r\n  //   },\r\n  // }\r\n\r\n\r\n  const getSeries = (efficiency, timePeriod, beginInd, endInd) =>{\r\n\r\n    let effective, neutral, ineffective, without\r\n    if (timePeriod === 1 || timePeriod == 0){\r\n      effective = efficiency.EFFECTIVE.slice(beginInd, endInd)\r\n      neutral = efficiency.NEUTRAL.slice(beginInd,endInd)\r\n      ineffective = efficiency.INEFFECTIVE.slice(beginInd,endInd)\r\n      without = efficiency.WITHOUT.slice(beginInd,endInd)\r\n    }\r\n    else{\r\n      effective = efficiency.EFFECTIVE\r\n      neutral = efficiency.NEUTRAL\r\n      ineffective = efficiency.INEFFECTIVE\r\n      without = efficiency.WITHOUT\r\n    }\r\n\r\n    return [ \r\n      {\r\n        name: 'Ineffective',\r\n        data: ineffective\r\n      },\r\n      {\r\n        name: 'Neutral',\r\n        data: neutral\r\n      },\r\n      {\r\n        name: 'Effective',\r\n        data: effective\r\n      },\r\n      {\r\n        name: 'Without category',\r\n        data: without\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  const getOptions = (series, timePeriod) => {\r\n    if (timePeriod === 0 || timePeriod === 1){\r\n\r\n      const opt = {\r\n          series: series,\r\n          // chart:{\r\n          //   animations: {\r\n          //     enabled: true,\r\n          //     easing: 'easeinout',\r\n          //     speed: 300,\r\n          //     animateGradually: {\r\n          //         enabled: true,\r\n          //         delay: 1\r\n          //     },\r\n          //     dynamicAnimation: {\r\n          //         enabled: true,\r\n          //         speed: 450\r\n          //     }\r\n          //   }\r\n          // },\r\n          xaxis: {\r\n            categories:  categories.slice(8, 20)\r\n          },\r\n          yaxis:{\r\n            // min: 0,\r\n            max: 3600,\r\n            tickAmount: 6,\r\n            labels: {\r\n              formatter: (value) => { return secondsToHours(value)},\r\n            },\r\n          },\r\n        }\r\n      return opt\r\n    }\r\n    \r\n   const opt =  {\r\n        series: series,\r\n        // chart:{\r\n        //   animations: {\r\n        //     enabled: true,\r\n        //     easing: 'easeinout',\r\n        //     speed: 300,\r\n        //     animateGradually: {\r\n        //         enabled: true,\r\n        //         delay: 1\r\n        //     },\r\n        //     dynamicAnimation: {\r\n        //         enabled: true,\r\n        //         speed: 450\r\n        //     }\r\n        //   }\r\n        // },\r\n        xaxis: {\r\n          categories: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],\r\n        },\r\n        yaxis:{\r\n          max: 28800,\r\n          tickAmount: 4,\r\n          labels: {\r\n            formatter: (value) => { return secondsToHours(value)},\r\n          },\r\n        },\r\n      }\r\n      return opt\r\n    }\r\n\r\n\r\n  export default function EfficiencyByHoursChart(props){\r\n\r\n    const classes = styles()\r\n    const [timePeriod, setTimePeriod] = React.useState(0)\r\n    const [beginInd, setBeginInd] = React.useState(8)\r\n    const employeeId = props.employeeId\r\n    console.log(\"ID\",employeeId)\r\n    const series = getSeries(EfficiencyService.getEfficiencyFromSessionStorage(employeeId).current, timePeriod)\r\n   \r\n    const handleLeftClick = event => {\r\n      if (beginInd == 0) return\r\n\r\n      let newBeginInd = beginInd\r\n      if (beginInd == 8){\r\n        newBeginInd = 0\r\n      }\r\n      else if (beginInd == 12){\r\n        newBeginInd = 8\r\n      }\r\n\r\n      const newOpt = {\r\n      series: getSeries(EfficiencyService.getEfficiencyFromSessionStorage(employeeId).current, 1, newBeginInd, newBeginInd + 12),\r\n        xaxis:{\r\n          categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n        }\r\n      }\r\n      setBeginInd(newBeginInd)\r\n      ReactApexChart.exec(\"efficiency\", 'updateOptions', newOpt, true)\r\n    }\r\n\r\n    const handleRightClick = event => {\r\n        if (beginInd == 12) return\r\n\r\n        let newBeginInd = beginInd\r\n        if (beginInd == 0) newBeginInd = 8\r\n        else if (beginInd == 8) newBeginInd = 12\r\n\r\n        const newOptions = {\r\n          series: getSeries(EfficiencyService.getEfficiencyFromSessionStorage(employeeId).current, 1, newBeginInd, newBeginInd + 12),\r\n          xaxis:{\r\n            categories: categories.slice(newBeginInd, newBeginInd + 12)\r\n          }\r\n        }\r\n        setBeginInd(newBeginInd)\r\n        ReactApexChart.exec(\"efficiency\", 'updateOptions', newOptions, true)\r\n    }\r\n    \r\n\r\n    React.useEffect(() => {\r\n        const newEfficiency = EfficiencyService.getEfficiencyFromSessionStorage(employeeId).current\r\n        let beginInd, endInd\r\n        if (props.timePeriod == 1 || props.timePeriod == 0) {\r\n          beginInd = 8\r\n          endInd = 20\r\n        }\r\n        else if (props.timePeriod == 2){\r\n          beginInd = 0 \r\n          endInd = 6\r\n        }\r\n\r\n        const ser = getSeries(newEfficiency, props.timePeriod, beginInd, endInd)\r\n        const newOptions = getOptions(ser, props.timePeriod)\r\n  \r\n        ReactApexChart.exec(\"efficiency\", 'updateOptions', newOptions, true)       \r\n    });\r\n\r\n    return(\r\n      <div>\r\n          <Chart options={optionsDefault} series={series} type=\"bar\" height={370}  width={'100%'}/>\r\n          {props.timePeriod == 1 ? (<div className={classes.bottomArrows}>\r\n            <Button onClick={handleLeftClick}><KeyboardArrowLeftIcon/></Button>\r\n            <Button onClick={handleRightClick}><KeyboardArrowRightIcon/></Button>\r\n          </div>) : (<div></div>)}\r\n      </div>\r\n    )\r\n  }\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\usageSum.js",["472","473","474","475","476","477","478","479","480","481","482"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Typography } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst series = [310,55]\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageSum'\r\n  },\r\n  labels: ['Using', 'Waste'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n\r\n                        // fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return minutesToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Total',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                          return minutesToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        },\r\n    },\r\n    \r\n    legend: {show: false},\r\n    tooltip: {enabled: false}\r\n}\r\n\r\nconst seriesWeek = [323,19]\r\n\r\nconst optionsWeek = {\r\n  series: seriesWeek,\r\n  plotOptions: {\r\n    pie: {\r\n        donut: {\r\n            labels: {\r\n                total: {label: 'Average'}\r\n            }\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\nconst optionsDay = {\r\n  series: series,\r\n  plotOptions: {\r\n    pie: {\r\n        donut: {\r\n            labels: {\r\n                total: {label: 'Total'}\r\n            }\r\n          }\r\n      }\r\n  }\r\n}\r\n\r\n  export default function UsageSum(props){\r\n\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n  \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsWeek, true) \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usageSum\", 'updateOptions', optionsDay, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n\r\n\r\n      return (\r\n        <Chart options={options} series={series} type=\"donut\" width={'100%'} height={'80%'}/>\r\n      )\r\n  }\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Employee\\byHoursChart.js",["483","484","485"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\table.js",["486","487","488","489","490","491","492","493"],"import React from 'react';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Typography from '../../wrappers/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AuthService from '../../services/auth.service'\r\nimport EfficiencyService from '../../services/efficiency.service'\r\nimport DateService from '../../services/date.service'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(3),\r\n      marginTop: theme.spacing(3),\r\n      boxShadow: \"0px 5px 12px rgba(10, 1, 50, 0.3)\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n    tableRow: {\r\n      \"&$hover:hover\": {\r\n        backgroundColor: \"blue\"\r\n      },\r\n      \"&$selected, &$selected:hover\": {\r\n        backgroundColor: \"blue\"\r\n      }\r\n    },\r\n  })); \r\n\r\n\r\nfunction createData(\r\n  id,\r\n  name, \r\n  position, \r\n  department, \r\n  status, \r\n  effective, \r\n  effectiveRate, \r\n  neutral, \r\n  neutralRate, \r\n  ineffective, \r\n  ineffectiveRate, \r\n  without, \r\n  withoutRate, \r\n  total) {\r\n  return { id, name, position, department, status, effective, effectiveRate, neutral, neutralRate, ineffective, ineffectiveRate, without, withoutRate, total};\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    a = a[orderBy]\r\n    b = b[orderBy]\r\n\r\n    if (typeof a === 'string' && (a.indexOf('h') != -1 || a.indexOf('m') != -1)){\r\n\r\n        const hoursA = a.indexOf('h') == -1 ? 0 : parseInt(a.substring(0, a.indexOf('h')))\r\n        const minutesA = a.indexOf('m') == -1 ? 0 : parseInt(a.substring(a.indexOf(' '), a.indexOf('m')))\r\n        const hoursB = b.indexOf('h') == -1 ? 0 : parseInt(b.substring(0, b.indexOf('h')))\r\n        const minutesB = b.indexOf('m') == -1 ? 0 : parseInt(b.substring(b.indexOf(' '), b.indexOf('m')))\r\n\r\n        if (hoursB < hoursA) return -1        \r\n        if (hoursB > hoursA) return 1\r\n        else{\r\n            if (minutesB < minutesA) return -1\r\n            if (minutesB > minutesA) return 1\r\n            return 0\r\n        }\r\n    }\r\n  if (b < a) return -1;\r\n  if (b > a) return 1;\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n        return order};\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', alignRight: false, disablePadding: true, label: 'Members' },\r\n  // { id: 'position', alignRight: false, disablePadding: true, label: 'Position' },\r\n  { id: 'department', alignRight: true, disablePadding: false, label: 'Department' },\r\n  { id: 'status', alignRight: true, disablePadding: false, label: 'Status' },\r\n  { id: 'effectiveRate', alignRight: true, disablePadding: false, label: 'Effective' },\r\n  { id: 'neutralRate', alignRight: true, disablePadding: false, label: 'Neutral' },\r\n  { id: 'ineffectiveRate', alignRight: true, disablePadding: false, label: 'Ineffective' },\r\n  { id: 'withoutRate', alignRight: true, disablePadding: false, label: 'Without category' },\r\n  { id: 'total', alignRight: true, disablePadding: false, label: 'Total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.alignRight ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              <Typography className=\"font-weight-bold\" value={headCell.label}/>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\n\r\n\r\n// const computeEfficiency = (efficiencyList) => {\r\n\r\n//   //day.Compute total\r\n//   if (efficiencyList.EFFECTIVE.length == 24){\r\n//     return {\r\n//       'effective': efficiencyList.EFFECTIVE.reduce((a, b) => a + b),\r\n//       'neutral': efficiencyList.NEUTRAL.reduce((a, b) => a + b),\r\n//       'ineffective': efficiencyList.INEFFECTIVE.reduce((a, b) => a + b),\r\n//       'without': efficiencyList.WITHOUT.reduce((a, b) => a + b)\r\n//     }\r\n//   }\r\n//   //Compute average\r\n//   let numberOfWorkingDays = 5\r\n//   return {\r\n//     'effective': Math.floor(efficiencyList.EFFECTIVE.reduce((a, b) => (a + b)) / numberOfWorkingDays),\r\n//     'neutral':  Math.floor(efficiencyList.NEUTRAL.reduce((a, b) => (a + b)) / numberOfWorkingDays),\r\n//     'ineffective': Math.floor(efficiencyList.INEFFECTIVE.reduce((a, b) => (a + b)) / numberOfWorkingDays),\r\n//     'without': Math.floor(efficiencyList.WITHOUT.reduce((a, b) => (a + b)) / numberOfWorkingDays)\r\n//   }\r\n//   //Compute average\r\n// }\r\n\r\n// const getEfficiencyRate = (efficiency) =>{\r\n//   const total = efficiency.effective + efficiency.ineffective + efficiency.neutral + efficiency.without\r\n//   const denominator = total == 0 ? 1 : total  \r\n//   return {\r\n//     'effective': Math.round(efficiency.effective/denominator) * 100 + '%',\r\n//     'neutral': Math.round(efficiency.neutral/denominator)* 100 + '%',\r\n//     'ineffective': Math.round(efficiency.ineffective/denominator)* 100 + '%' ,\r\n//     'without': Math.round(efficiency.without/denominator)* 100 + '%',\r\n//     'total': total\r\n//   }\r\n// }\r\n\r\nconst getRows = (employeeList) => {\r\n  let rows = []\r\n  employeeList.forEach(employee => {\r\n    const efficiencyList = EfficiencyService.getEfficiencyFromSessionStorage(employee.id).current\r\n    const efficiency = EfficiencyService.computeEfficiencyForPeriodOfTime(efficiencyList)\r\n\r\n    const rate = EfficiencyService.getEfficiencyRate(efficiency)\r\n    const res = createData(\r\n      employee.id, employee.fullName, employee.position, employee.department, true, \r\n      DateService.secondsToHours(efficiency.effective), rate.effective + '%',\r\n      DateService.secondsToHours(efficiency.neutral), rate.neutral + '%', \r\n      DateService.secondsToHours(efficiency.ineffective), rate.ineffective + '%', \r\n      DateService.secondsToHours(efficiency.without), rate.without + '%',\r\n      DateService.secondsToHours(rate.total))\r\n    rows.push(res)\r\n  })\r\n  return rows\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n\r\n\r\n  // const setSubjectOfChange = props.setSubjectOfChange;\r\n  const setEmployeeIdOrAllTeam = props.setEmployeeIdOrAllTeam\r\n  const setWriting = props.setWriting;\r\n  const writing = props.writing;\r\n  // const timePeriod = props.timePeriod;\r\n  // const date = props.selectedDate;\r\n\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('name');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [selectedMember, setSelectedMember] = React.useState(writing);\r\n\r\n  ///////////\r\n  // console.log(\"LLL\", getRows(AuthService.getCurrentUser().employees))\r\n  // const [rows, setRows] = React.useState(getRows(AuthService.getCurrentUser().employees))\r\n  const rows = getRows(AuthService.getCurrentUser().employees)\r\n  // console.log(\"RRR\", rows)\r\n  // console.log(\"EEE\", EfficiencyService.getEfficiencyFromSessionStorage(3).current)\r\n\r\n\r\n  // React.useEffect(()=>{\r\n  //   console.log('DSF')\r\n  //   setRows(getRows(AuthService.getCurrentUser().employees))\r\n  // }, [])\r\n\r\n\r\n  const handleCheck = (event, id,  name) =>{\r\n    console.time(\"CHECK\")\r\n    if (selectedMember === name){\r\n      // setSubjectOfChange(2)\r\n      setEmployeeIdOrAllTeam('all')\r\n      setWriting('All team')\r\n      setSelectedMember(null)\r\n    }\r\n    else{\r\n      // setSubjectOfChange(1)\r\n      setEmployeeIdOrAllTeam(id)\r\n      setWriting(name)\r\n      setSelectedMember(name)\r\n    }\r\n    console.timeEnd(\"CHECK\")\r\n  }\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = selectedMember === row.name;\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      classes={{ hover: classes.hover }}\r\n                      className={classes.tableRow}\r\n                      hover\r\n                      onClick={(event) => handleCheck(event, row.id, row.name)}\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      // selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          // color=\"primary\"\r\n                          checked={isItemSelected}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        <Typography value={row.name} style={{fontSize: \"16px\"}}/>\r\n                        <span className=\"text-black-50\">\r\n                            <Typography style={{fontSize:'11px'}} value={row.position}/>\r\n                        </span>\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                          {row.status ? <div className=\"badge badge-success h-auto\">\r\n                                            ACTIVE\r\n                                        </div>:\r\n                                            <div className=\"badge badge-danger h-auto\">\r\n                                                NOT ACTIVE\r\n                                            </div>\r\n                          }\r\n                        </TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                          {row.effectiveRate > '50%' ? (\r\n                            <Typography style={{display: 'inline-block', fontWeight:'500', color:'springgreen'}} value={row.effectiveRate}/>)\r\n                             : (<Typography style={{display: 'inline-block', fontWeight:'500'}} value={row.effectiveRate}/>)}\r\n                          <Typography className=\"text-black-50\" style={{fontSize:'11px'}} value={row.effective}/>\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                        <Typography style={{display: 'inline-block', fontWeight:'500'}} value={row.neutralRate}/>\r\n                        <Typography className=\"text-black-50\" style={{fontSize:'11px'}} value={row.neutral}/>\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                        {row.ineffectiveRate > '20%' ? \r\n                          (<Typography style={{display: 'inline-block', fontWeight:'500', color:'crimson'}} value={row.ineffectiveRate}/>) \r\n                          : \r\n                          (<Typography style={{display: 'inline-block', fontWeight:'500'}} value={row.ineffectiveRate}/>)\r\n                        }\r\n                        <Typography className=\"text-black-50\" style={{fontSize:'11px'}} value={row.ineffective}/>\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                        <Typography style={{display: 'inline-block', fontWeight:'500'}} value={row.withoutRate}/>\r\n                        <Typography className=\"text-black-50\" style={{fontSize:'11px'}} value={row.without}/>\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">\r\n                          {row.total}\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {/* {emptyRows > 0 && (\r\n                <TableRow >\r\n                  <TableCell colSpan={6}/>\r\n                </TableRow>\r\n              )} */}\r\n            </TableBody>\r\n            \r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\Team\\usageOfTeamSumChart.js",["494","495","496","497","498","499","500","501"],"import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport ReactApexChart from 'apexcharts'\r\n\r\n\r\nconst series = [404,55]\r\n\r\n\r\nfunction minutesToHours(minutes){\r\n  const hours = Math.floor(minutes/60)\r\n  const min = minutes % 60\r\n  if (hours != 0){\r\n      if (min != 0) return  hours+ 'h' + ' ' + minutes%60 + 'm'\r\n      return hours+'h'\r\n  }\r\n  return minutes%60+'m'\r\n}   \r\n\r\n\r\nconst options = {\r\n  chart: {\r\n    type: 'donut',\r\n    id: 'usageOfEmployeesSum'\r\n  },\r\n  labels: ['Using', 'Waste'],\r\n  fill: {\r\n    colors: ['#e91e63', '#031d44'],\r\n    opacity: 1\r\n    },\r\n  plotOptions: {\r\n        pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '25px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (val) {\r\n                            return val\r\n                        }\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16px',\r\n                        fontFamily: 'Roboto, sans-serif',\r\n                        fontWeight: 100,\r\n                        color: '#373d3f',\r\n                        offsetY: 16,\r\n                        formatter: function (val) {\r\n                            return minutesToHours(val)\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        showAlways: false,\r\n                        label: 'Average',\r\n                        fontSize: '22px',\r\n                        fontFamily: 'Roboto, sans-seri',\r\n                        fontWeight: 700,\r\n                        color: '#373d3f',\r\n                        formatter: function (w) {\r\n                            console.log(\"ASDSA\",w.globals)\r\n                          return minutesToHours(w.globals.seriesTotals.reduce((a, b) => {\r\n                            return a + b\r\n                          }, 0))\r\n                        }\r\n                      }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    tooltip:{enabled: false},\r\n\r\n    colors: ['#030C54', '#56cfe1', '#80ffdb'],\r\n    dataLabels: {\r\n        enabled: true,\r\n        dropShadow: {\r\n            enabled: false\r\n        },\r\n        background: {\r\n            enabled: false\r\n        },\r\n        style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Roboto, sans-seri',\r\n            fontWeight: 100,\r\n            colors: ['#ffffff', '#ffffff']\r\n        }\r\n      },\r\n    legend: {\r\n    show: false\r\n    },\r\n}\r\n\r\n\r\nconst seriesWeek = [450,77]\r\nconst optionsWeek = {\r\n  series: seriesWeek\r\n}\r\nconst optionsDay = {\r\n  series:series\r\n}\r\n\r\n\r\n\r\nexport default function UsageOfTeamSumChart(props){\r\n\r\n    const [timePeriod, setTimePeriod] = React.useState(0);\r\n    \r\n    React.useEffect(() => {\r\n  \r\n      if (timePeriod != 0 && timePeriod == props.timePeriod){}\r\n\r\n      else if(props.timePeriod == 2){\r\n        ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsWeek, true) \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n\r\n      else if(props.timePeriod == 1){\r\n        ReactApexChart.exec(\"usageOfEmployeesSum\", 'updateOptions', optionsDay, true)  \r\n        setTimePeriod(props.timePeriod)\r\n      }\r\n    });\r\n    return (\r\n      <Chart options={options} series={series} type=\"donut\" width={'100%'} height={'80%'}/>\r\n    )\r\n}\r\n  \r\n  ","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\date.service.js",["502","503","504","505","506","507","508","509","510","511","512","513","514","515","516"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\efficiency.service.js",["517","518","519","520","521","522"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\BigStatService.js",["523","524","525","526","527","528","529"],"import EfficiencyService from '../../services/efficiency.service'\r\nimport DateService from '../../services/date.service'\r\n\r\n\r\nclass AllTeamService{\r\n\r\n  getPercent(num1, num2){\r\n    const value = num2 == 0 ? 0 : Math.floor(Math.abs(num1 - num2)/num2) * 100\r\n    const profit = num1 > num2\r\n    return {\r\n      value : value,\r\n      profit: profit\r\n    }\r\n  }\r\n\r\n  computeEfficiency(employeeIdOrAllTeam){\r\n    if (employeeIdOrAllTeam != \"all\"){ \r\n\r\n        const currentEfficiencyList = EfficiencyService.getEfficiencyFromSessionStorage(employeeIdOrAllTeam).current\r\n        const currentEfficiency = EfficiencyService.computeEfficiencyForPeriodOfTime(currentEfficiencyList)\r\n        const currentEfficiencyRate = EfficiencyService.getEfficiencyRate(currentEfficiency)\r\n\r\n        const previousEfficiencyList = EfficiencyService.getEfficiencyFromSessionStorage(employeeIdOrAllTeam).previous\r\n        const previousEfficiency = EfficiencyService.computeEfficiencyForPeriodOfTime(previousEfficiencyList)\r\n        const previousEfficiencyRate = EfficiencyService.getEfficiencyRate(previousEfficiency)\r\n\r\n        return {\r\n          bigStat: [\r\n            {\r\n              category: \"Effective\",\r\n              total: {\r\n                value: currentEfficiency.effective,\r\n                percent: this.getPercent(currentEfficiency.effective, previousEfficiency.effective)\r\n              },\r\n              percentage: {\r\n                value: currentEfficiencyRate.effective,\r\n                percent: this.getPercent(currentEfficiencyRate.effective, previousEfficiencyRate.effective)\r\n              } \r\n            },\r\n            {\r\n              category: \"Neutral\",\r\n              total: {\r\n                value: currentEfficiency.neutral,\r\n                percent: this.getPercent(currentEfficiency.neutral, previousEfficiency.neutral)\r\n              },\r\n              percentage: {\r\n                value: currentEfficiencyRate.neutral,\r\n                percent: this.getPercent(currentEfficiencyRate.neutral, previousEfficiencyRate.neutral)\r\n              } \r\n            },\r\n            {\r\n              category: \"Ineffective\",\r\n              total: {\r\n                value: currentEfficiency.ineffective,\r\n                percent: this.getPercent(currentEfficiency.ineffective, previousEfficiency.ineffective)\r\n              },\r\n              percentage: {\r\n                value: currentEfficiencyRate.ineffective,\r\n                percent: this.getPercent(currentEfficiencyRate.ineffective, previousEfficiencyRate.ineffective)\r\n              } \r\n            },\r\n            {\r\n              category: \"Without\",\r\n              total: {\r\n                value: currentEfficiency.without,\r\n                percent: this.getPercent(currentEfficiency.without, previousEfficiency.without)\r\n              },\r\n              percentage: {\r\n                value: currentEfficiencyRate.without,\r\n                percent: this.getPercent(currentEfficiencyRate.without, previousEfficiencyRate.without)\r\n              } \r\n            }\r\n          ],\r\n        };    \r\n    }\r\n\r\n    const efficiencyForAllTeam = EfficiencyService.getEfficiencyFromSSAllTeam();\r\n    let effectiveCurrentTotal = 0\r\n    let effectivePreviousTotal = 0\r\n    let neutralCurrentTotal = 0\r\n    let neutralPreviousTotal = 0\r\n    let ineffectiveCurrentTotal = 0\r\n    let ineffectivePreviousTotal = 0\r\n    let withoutCurrentTotal = 0\r\n    let withoutPreviousTotal = 0\r\n\r\n    let counter = 0\r\n    let numOfWorkingDays = 1;\r\n    for (const [key, value] of Object.entries(efficiencyForAllTeam)){\r\n      // console.log(\"VALUE\", value.current.EFFECTIVE.reduce((a,b) => a + b))\r\n        if (counter == 0) {\r\n          if (value.current.EFFECTIVE.length == 24) numOfWorkingDays = 1\r\n          else if (value.current.EFFECTIVE.length == 7) numOfWorkingDays = 5\r\n        }\r\n        effectiveCurrentTotal += value.current.EFFECTIVE.reduce((a,b) => a + b)\r\n        neutralCurrentTotal += value.current.NEUTRAL.reduce((a,b) => a + b)\r\n        ineffectiveCurrentTotal += value.current.INEFFECTIVE.reduce((a,b) => a + b)\r\n        withoutCurrentTotal += value.current.WITHOUT.reduce((a,b) => a + b)\r\n\r\n        effectivePreviousTotal += value.previous.EFFECTIVE.reduce((a,b) => a + b)\r\n        neutralPreviousTotal += value.previous.NEUTRAL.reduce((a,b) => a + b)\r\n        ineffectivePreviousTotal += value.previous.INEFFECTIVE.reduce((a,b) => a + b)\r\n        withoutPreviousTotal += value.previous.WITHOUT.reduce((a,b) => a + b)\r\n\r\n        counter++\r\n    }\r\n\r\n    let effectiveCurrent = 0\r\n    let neutralCurrent = 0\r\n    let ineffectiveCurrent = 0\r\n    let withoutCurrent = 0\r\n    let effectivePrevious = 0\r\n    let neutralPrevious = 0\r\n    let ineffectivePrevious = 0\r\n    let withoutPrevious = 0\r\n\r\n    let currentEfficiencyRate  = 0\r\n    let previousEfficiencyRate = 0\r\n\r\n    if (counter !== 0){\r\n      // console.log(\"Curr\", effectiveCurrentTotal)\r\n      effectiveCurrent = Math.floor(effectiveCurrentTotal/(counter * numOfWorkingDays))\r\n      neutralCurrent = Math.floor(neutralCurrentTotal/(counter * numOfWorkingDays))\r\n      ineffectiveCurrent = Math.floor(ineffectiveCurrentTotal/(counter * numOfWorkingDays))\r\n      withoutCurrent =  Math.floor(withoutCurrentTotal/(counter * numOfWorkingDays))\r\n    \r\n      effectivePrevious = Math.floor(effectivePreviousTotal/(counter * numOfWorkingDays))\r\n      neutralPrevious = Math.floor(neutralPreviousTotal/(counter * numOfWorkingDays))\r\n      ineffectivePrevious = Math.floor(ineffectivePreviousTotal/(counter * numOfWorkingDays))\r\n      withoutPrevious =  Math.floor(withoutPreviousTotal/(counter * numOfWorkingDays))\r\n\r\n      currentEfficiencyRate = EfficiencyService.getEfficiencyRateWithCategories(effectiveCurrent, neutralCurrent, ineffectiveCurrent, withoutCurrent)\r\n      previousEfficiencyRate = EfficiencyService.getEfficiencyRateWithCategories(effectivePrevious, neutralPrevious, ineffectivePrevious, withoutPrevious)\r\n    }\r\n      return {\r\n        bigStat: [\r\n          {\r\n            category: \"Effective\",\r\n            total: {\r\n              value: effectiveCurrent,\r\n              percent: this.getPercent(effectiveCurrent, effectivePrevious)\r\n            },\r\n            percentage: {\r\n              value: currentEfficiencyRate.effective,\r\n              percent: this.getPercent(currentEfficiencyRate.effective, previousEfficiencyRate.effective)\r\n            } \r\n          },\r\n          {\r\n            category: \"Neutral\",\r\n            total: {\r\n              value: neutralCurrent,\r\n              percent: this.getPercent(neutralCurrent, neutralPrevious)\r\n            },\r\n            percentage: {\r\n              value: currentEfficiencyRate.neutral,\r\n              percent: this.getPercent(currentEfficiencyRate.neutral, previousEfficiencyRate.neutral)\r\n            } \r\n          },\r\n          {\r\n            category: \"Ineffective\",\r\n            total: {\r\n              value: ineffectiveCurrent,\r\n              percent: this.getPercent(ineffectiveCurrent, ineffectivePrevious)\r\n            },\r\n            percentage: {\r\n              value: currentEfficiencyRate.ineffective,\r\n              percent: this.getPercent(currentEfficiencyRate.ineffective, previousEfficiencyRate.ineffective)\r\n            } \r\n          },\r\n          {\r\n            category: \"Without\",\r\n            total: {\r\n              value: withoutCurrent,\r\n              percent: this.getPercent(withoutCurrent, withoutPrevious)\r\n            },\r\n            percentage: {\r\n              value: currentEfficiencyRate.without,\r\n              percent: this.getPercent(currentEfficiencyRate.without, previousEfficiencyRate.without)\r\n            } \r\n          }\r\n        ],\r\n      }; \r\n    }\r\n}\r\n\r\nexport default new AllTeamService()","D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\resources.js",["530","531","532","533","534","535","536","537","538","539","540"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\components\\Dashboard\\resourcesAllTime.js",["541","542","543","544","545","546","547","548"],"D:\\Programming\\JS\\React\\TimeTracker\\timetracker\\src\\services\\resources.service.js",["549","550"],{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"551","replacedBy":"555"},{"ruleId":"553","replacedBy":"556"},{"ruleId":"557","severity":1,"message":"558","line":3,"column":27,"nodeType":"559","messageId":"560","endLine":3,"endColumn":33},{"ruleId":"557","severity":1,"message":"561","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":19},{"ruleId":"557","severity":1,"message":"562","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":26},{"ruleId":"557","severity":1,"message":"563","line":48,"column":33,"nodeType":"559","messageId":"560","endLine":48,"endColumn":51},{"ruleId":"557","severity":1,"message":"564","line":49,"column":16,"nodeType":"559","messageId":"560","endLine":49,"endColumn":34},{"ruleId":"557","severity":1,"message":"565","line":49,"column":36,"nodeType":"559","messageId":"560","endLine":49,"endColumn":57},{"ruleId":"557","severity":1,"message":"566","line":51,"column":16,"nodeType":"559","messageId":"560","endLine":51,"endColumn":21},{"ruleId":"557","severity":1,"message":"567","line":51,"column":23,"nodeType":"559","messageId":"560","endLine":51,"endColumn":31},{"ruleId":"568","severity":1,"message":"569","line":68,"column":51,"nodeType":"570","messageId":"571","endLine":68,"endColumn":53},{"ruleId":"568","severity":1,"message":"569","line":69,"column":51,"nodeType":"570","messageId":"571","endLine":69,"endColumn":53},{"ruleId":"557","severity":1,"message":"562","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":26},{"ruleId":"557","severity":1,"message":"572","line":8,"column":48,"nodeType":"559","messageId":"560","endLine":8,"endColumn":57},{"ruleId":"557","severity":1,"message":"573","line":9,"column":10,"nodeType":"559","messageId":"560","endLine":9,"endColumn":38},{"ruleId":"557","severity":1,"message":"574","line":49,"column":12,"nodeType":"559","messageId":"560","endLine":49,"endColumn":19},{"ruleId":"568","severity":1,"message":"569","line":136,"column":51,"nodeType":"570","messageId":"571","endLine":136,"endColumn":53},{"ruleId":"557","severity":1,"message":"575","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"576","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":12},{"ruleId":"557","severity":1,"message":"577","line":23,"column":3,"nodeType":"559","messageId":"560","endLine":23,"endColumn":6},{"ruleId":"557","severity":1,"message":"578","line":23,"column":18,"nodeType":"559","messageId":"560","endLine":23,"endColumn":24},{"ruleId":"557","severity":1,"message":"579","line":25,"column":8,"nodeType":"559","messageId":"560","endLine":25,"endColumn":16},{"ruleId":"551","replacedBy":"580"},{"ruleId":"553","replacedBy":"581"},{"ruleId":"557","severity":1,"message":"582","line":1,"column":8,"nodeType":"559","messageId":"560","endLine":1,"endColumn":13},{"ruleId":"557","severity":1,"message":"583","line":2,"column":8,"nodeType":"559","messageId":"560","endLine":2,"endColumn":14},{"ruleId":"557","severity":1,"message":"584","line":7,"column":3,"nodeType":"559","messageId":"560","endLine":7,"endColumn":9},{"ruleId":"557","severity":1,"message":"585","line":8,"column":3,"nodeType":"559","messageId":"560","endLine":8,"endColumn":13},{"ruleId":"557","severity":1,"message":"586","line":11,"column":10,"nodeType":"559","messageId":"560","endLine":11,"endColumn":16},{"ruleId":"557","severity":1,"message":"587","line":52,"column":7,"nodeType":"559","messageId":"560","endLine":52,"endColumn":19},{"ruleId":"557","severity":1,"message":"561","line":5,"column":8,"nodeType":"559","messageId":"560","endLine":5,"endColumn":19},{"ruleId":"557","severity":1,"message":"588","line":6,"column":10,"nodeType":"559","messageId":"560","endLine":6,"endColumn":18},{"ruleId":"557","severity":1,"message":"589","line":123,"column":38,"nodeType":"559","messageId":"560","endLine":123,"endColumn":49},{"ruleId":"557","severity":1,"message":"590","line":123,"column":51,"nodeType":"559","messageId":"560","endLine":123,"endColumn":59},{"ruleId":"557","severity":1,"message":"591","line":197,"column":13,"nodeType":"559","messageId":"560","endLine":197,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":207,"column":42,"nodeType":"570","messageId":"571","endLine":207,"endColumn":44},{"ruleId":"568","severity":1,"message":"569","line":225,"column":34,"nodeType":"570","messageId":"571","endLine":225,"endColumn":36},{"ruleId":"557","severity":1,"message":"592","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"593","line":5,"column":13,"nodeType":"559","messageId":"560","endLine":5,"endColumn":28},{"ruleId":"557","severity":1,"message":"561","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":19},{"ruleId":"568","severity":1,"message":"569","line":43,"column":25,"nodeType":"570","messageId":"571","endLine":43,"endColumn":27},{"ruleId":"568","severity":1,"message":"569","line":44,"column":53,"nodeType":"570","messageId":"571","endLine":44,"endColumn":55},{"ruleId":"557","severity":1,"message":"594","line":53,"column":9,"nodeType":"559","messageId":"560","endLine":53,"endColumn":18},{"ruleId":"595","severity":1,"message":"596","line":69,"column":8,"nodeType":"597","endLine":69,"endColumn":23,"suggestions":"598"},{"ruleId":"557","severity":1,"message":"599","line":17,"column":7,"nodeType":"559","messageId":"560","endLine":17,"endColumn":11},{"ruleId":"568","severity":1,"message":"569","line":36,"column":53,"nodeType":"570","messageId":"571","endLine":36,"endColumn":55},{"ruleId":"568","severity":1,"message":"600","line":43,"column":44,"nodeType":"570","messageId":"571","endLine":43,"endColumn":46},{"ruleId":"557","severity":1,"message":"601","line":58,"column":9,"nodeType":"559","messageId":"560","endLine":58,"endColumn":18},{"ruleId":"557","severity":1,"message":"602","line":61,"column":9,"nodeType":"559","messageId":"560","endLine":61,"endColumn":20},{"ruleId":"557","severity":1,"message":"603","line":3,"column":8,"nodeType":"559","messageId":"560","endLine":3,"endColumn":16},{"ruleId":"557","severity":1,"message":"604","line":5,"column":8,"nodeType":"559","messageId":"560","endLine":5,"endColumn":32},{"ruleId":"557","severity":1,"message":"605","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":33},{"ruleId":"557","severity":1,"message":"606","line":3,"column":8,"nodeType":"559","messageId":"560","endLine":3,"endColumn":24},{"ruleId":"557","severity":1,"message":"607","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"608","line":5,"column":10,"nodeType":"559","messageId":"560","endLine":5,"endColumn":15},{"ruleId":"557","severity":1,"message":"609","line":5,"column":29,"nodeType":"559","messageId":"560","endLine":5,"endColumn":33},{"ruleId":"557","severity":1,"message":"604","line":6,"column":8,"nodeType":"559","messageId":"560","endLine":6,"endColumn":32},{"ruleId":"557","severity":1,"message":"610","line":16,"column":10,"nodeType":"559","messageId":"560","endLine":16,"endColumn":17},{"ruleId":"568","severity":1,"message":"569","line":114,"column":25,"nodeType":"570","messageId":"571","endLine":114,"endColumn":27},{"ruleId":"568","severity":1,"message":"569","line":115,"column":53,"nodeType":"570","messageId":"571","endLine":115,"endColumn":55},{"ruleId":"568","severity":1,"message":"569","line":127,"column":42,"nodeType":"570","messageId":"571","endLine":127,"endColumn":44},{"ruleId":"595","severity":1,"message":"611","line":138,"column":7,"nodeType":"597","endLine":138,"endColumn":9,"suggestions":"612"},{"ruleId":"568","severity":1,"message":"569","line":177,"column":50,"nodeType":"570","messageId":"571","endLine":177,"endColumn":52},{"ruleId":"557","severity":1,"message":"613","line":386,"column":21,"nodeType":"559","messageId":"560","endLine":386,"endColumn":25},{"ruleId":"557","severity":1,"message":"613","line":395,"column":21,"nodeType":"559","messageId":"560","endLine":395,"endColumn":25},{"ruleId":"568","severity":1,"message":"569","line":426,"column":50,"nodeType":"570","messageId":"571","endLine":426,"endColumn":52},{"ruleId":"557","severity":1,"message":"614","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":73,"column":38,"nodeType":"570","messageId":"571","endLine":73,"endColumn":40},{"ruleId":"568","severity":1,"message":"569","line":99,"column":29,"nodeType":"570","messageId":"571","endLine":99,"endColumn":31},{"ruleId":"557","severity":1,"message":"614","line":1,"column":10,"nodeType":"559","messageId":"560","endLine":1,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":79,"column":38,"nodeType":"570","messageId":"571","endLine":79,"endColumn":40},{"ruleId":"557","severity":1,"message":"589","line":94,"column":38,"nodeType":"559","messageId":"560","endLine":94,"endColumn":49},{"ruleId":"557","severity":1,"message":"590","line":94,"column":51,"nodeType":"559","messageId":"560","endLine":94,"endColumn":59},{"ruleId":"557","severity":1,"message":"615","line":148,"column":9,"nodeType":"559","messageId":"560","endLine":148,"endColumn":21},{"ruleId":"557","severity":1,"message":"616","line":149,"column":9,"nodeType":"559","messageId":"560","endLine":149,"endColumn":16},{"ruleId":"557","severity":1,"message":"617","line":150,"column":9,"nodeType":"559","messageId":"560","endLine":150,"endColumn":22},{"ruleId":"557","severity":1,"message":"618","line":151,"column":9,"nodeType":"559","messageId":"560","endLine":151,"endColumn":37},{"ruleId":"568","severity":1,"message":"569","line":205,"column":34,"nodeType":"570","messageId":"571","endLine":205,"endColumn":36},{"ruleId":"557","severity":1,"message":"619","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"586","line":6,"column":60,"nodeType":"559","messageId":"560","endLine":6,"endColumn":66},{"ruleId":"557","severity":1,"message":"620","line":13,"column":3,"nodeType":"559","messageId":"560","endLine":13,"endColumn":21},{"ruleId":"557","severity":1,"message":"621","line":19,"column":8,"nodeType":"559","messageId":"560","endLine":19,"endColumn":19},{"ruleId":"557","severity":1,"message":"622","line":119,"column":12,"nodeType":"559","messageId":"560","endLine":119,"endColumn":27},{"ruleId":"557","severity":1,"message":"623","line":119,"column":29,"nodeType":"559","messageId":"560","endLine":119,"endColumn":47},{"ruleId":"595","severity":1,"message":"624","line":167,"column":7,"nodeType":"597","endLine":167,"endColumn":9,"suggestions":"625"},{"ruleId":"568","severity":1,"message":"569","line":265,"column":31,"nodeType":"570","messageId":"571","endLine":265,"endColumn":33},{"ruleId":"557","severity":1,"message":"592","line":1,"column":17,"nodeType":"559","messageId":"560","endLine":1,"endColumn":25},{"ruleId":"557","severity":1,"message":"626","line":2,"column":10,"nodeType":"559","messageId":"560","endLine":2,"endColumn":14},{"ruleId":"557","severity":1,"message":"578","line":2,"column":16,"nodeType":"559","messageId":"560","endLine":2,"endColumn":22},{"ruleId":"557","severity":1,"message":"627","line":2,"column":24,"nodeType":"559","messageId":"560","endLine":2,"endColumn":32},{"ruleId":"557","severity":1,"message":"628","line":2,"column":34,"nodeType":"559","messageId":"560","endLine":2,"endColumn":39},{"ruleId":"557","severity":1,"message":"629","line":3,"column":26,"nodeType":"559","messageId":"560","endLine":3,"endColumn":42},{"ruleId":"557","severity":1,"message":"630","line":5,"column":10,"nodeType":"559","messageId":"560","endLine":5,"endColumn":18},{"ruleId":"557","severity":1,"message":"631","line":5,"column":20,"nodeType":"559","messageId":"560","endLine":5,"endColumn":23},{"ruleId":"557","severity":1,"message":"632","line":7,"column":8,"nodeType":"559","messageId":"560","endLine":7,"endColumn":18},{"ruleId":"557","severity":1,"message":"633","line":10,"column":8,"nodeType":"559","messageId":"560","endLine":10,"endColumn":25},{"ruleId":"557","severity":1,"message":"634","line":12,"column":8,"nodeType":"559","messageId":"560","endLine":12,"endColumn":18},{"ruleId":"557","severity":1,"message":"635","line":13,"column":8,"nodeType":"559","messageId":"560","endLine":13,"endColumn":19},{"ruleId":"557","severity":1,"message":"636","line":14,"column":8,"nodeType":"559","messageId":"560","endLine":14,"endColumn":22},{"ruleId":"557","severity":1,"message":"637","line":67,"column":7,"nodeType":"559","messageId":"560","endLine":67,"endColumn":12},{"ruleId":"568","severity":1,"message":"569","line":104,"column":38,"nodeType":"570","messageId":"571","endLine":104,"endColumn":40},{"ruleId":"568","severity":1,"message":"569","line":110,"column":38,"nodeType":"570","messageId":"571","endLine":110,"endColumn":40},{"ruleId":"557","severity":1,"message":"638","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"568","severity":1,"message":"569","line":224,"column":20,"nodeType":"570","messageId":"571","endLine":224,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":227,"column":20,"nodeType":"570","messageId":"571","endLine":227,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":230,"column":25,"nodeType":"570","messageId":"571","endLine":230,"endColumn":27},{"ruleId":"568","severity":1,"message":"569","line":249,"column":22,"nodeType":"570","messageId":"571","endLine":249,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":253,"column":22,"nodeType":"570","messageId":"571","endLine":253,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":254,"column":27,"nodeType":"570","messageId":"571","endLine":254,"endColumn":29},{"ruleId":"595","severity":1,"message":"639","line":270,"column":5,"nodeType":"640","endLine":270,"endColumn":20,"suggestions":"641"},{"ruleId":"568","severity":1,"message":"600","line":277,"column":22,"nodeType":"570","messageId":"571","endLine":277,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":277,"column":41,"nodeType":"570","messageId":"571","endLine":277,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":277,"column":78,"nodeType":"570","messageId":"571","endLine":277,"endColumn":80},{"ruleId":"568","severity":1,"message":"569","line":279,"column":27,"nodeType":"570","messageId":"571","endLine":279,"endColumn":29},{"ruleId":"568","severity":1,"message":"569","line":288,"column":32,"nodeType":"570","messageId":"571","endLine":288,"endColumn":34},{"ruleId":"557","severity":1,"message":"642","line":293,"column":9,"nodeType":"559","messageId":"560","endLine":293,"endColumn":19},{"ruleId":"568","severity":1,"message":"569","line":298,"column":30,"nodeType":"570","messageId":"571","endLine":298,"endColumn":32},{"ruleId":"568","severity":1,"message":"569","line":302,"column":35,"nodeType":"570","messageId":"571","endLine":302,"endColumn":37},{"ruleId":"568","severity":1,"message":"569","line":306,"column":35,"nodeType":"570","messageId":"571","endLine":306,"endColumn":37},{"ruleId":"568","severity":1,"message":"569","line":320,"column":29,"nodeType":"570","messageId":"571","endLine":320,"endColumn":31},{"ruleId":"557","severity":1,"message":"572","line":6,"column":10,"nodeType":"559","messageId":"560","endLine":6,"endColumn":19},{"ruleId":"557","severity":1,"message":"643","line":28,"column":25,"nodeType":"559","messageId":"560","endLine":28,"endColumn":31},{"ruleId":"557","severity":1,"message":"638","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"557","severity":1,"message":"644","line":25,"column":10,"nodeType":"559","messageId":"560","endLine":25,"endColumn":24},{"ruleId":"568","severity":1,"message":"600","line":28,"column":13,"nodeType":"570","messageId":"571","endLine":28,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":29,"column":15,"nodeType":"570","messageId":"571","endLine":29,"endColumn":17},{"ruleId":"645","severity":1,"message":"646","line":29,"column":40,"nodeType":"570","messageId":"647","endLine":29,"endColumn":41},{"ruleId":"557","severity":1,"message":"648","line":35,"column":7,"nodeType":"559","messageId":"560","endLine":35,"endColumn":20},{"ruleId":"557","severity":1,"message":"649","line":36,"column":7,"nodeType":"559","messageId":"560","endLine":36,"endColumn":18},{"ruleId":"557","severity":1,"message":"650","line":37,"column":7,"nodeType":"559","messageId":"560","endLine":37,"endColumn":22},{"ruleId":"557","severity":1,"message":"651","line":38,"column":7,"nodeType":"559","messageId":"560","endLine":38,"endColumn":18},{"ruleId":"557","severity":1,"message":"652","line":40,"column":7,"nodeType":"559","messageId":"560","endLine":40,"endColumn":24},{"ruleId":"557","severity":1,"message":"653","line":41,"column":7,"nodeType":"559","messageId":"560","endLine":41,"endColumn":22},{"ruleId":"557","severity":1,"message":"654","line":42,"column":7,"nodeType":"559","messageId":"560","endLine":42,"endColumn":26},{"ruleId":"557","severity":1,"message":"655","line":43,"column":7,"nodeType":"559","messageId":"560","endLine":43,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":104,"column":31,"nodeType":"570","messageId":"571","endLine":104,"endColumn":33},{"ruleId":"557","severity":1,"message":"656","line":138,"column":12,"nodeType":"559","messageId":"560","endLine":138,"endColumn":22},{"ruleId":"557","severity":1,"message":"657","line":138,"column":24,"nodeType":"559","messageId":"560","endLine":138,"endColumn":37},{"ruleId":"557","severity":1,"message":"658","line":95,"column":15,"nodeType":"559","messageId":"560","endLine":95,"endColumn":18},{"ruleId":"568","severity":1,"message":"569","line":96,"column":19,"nodeType":"570","messageId":"571","endLine":96,"endColumn":21},{"ruleId":"568","severity":1,"message":"569","line":97,"column":44,"nodeType":"570","messageId":"571","endLine":97,"endColumn":46},{"ruleId":"568","severity":1,"message":"569","line":98,"column":49,"nodeType":"570","messageId":"571","endLine":98,"endColumn":51},{"ruleId":"557","severity":1,"message":"638","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"568","severity":1,"message":"600","line":21,"column":13,"nodeType":"570","messageId":"571","endLine":21,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":22,"column":15,"nodeType":"570","messageId":"571","endLine":22,"endColumn":17},{"ruleId":"645","severity":1,"message":"646","line":22,"column":40,"nodeType":"570","messageId":"647","endLine":22,"endColumn":41},{"ruleId":"595","severity":1,"message":"659","line":197,"column":5,"nodeType":"640","endLine":197,"endColumn":20,"suggestions":"660"},{"ruleId":"568","severity":1,"message":"600","line":198,"column":22,"nodeType":"570","messageId":"571","endLine":198,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":198,"column":41,"nodeType":"570","messageId":"571","endLine":198,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":200,"column":32,"nodeType":"570","messageId":"571","endLine":200,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":206,"column":32,"nodeType":"570","messageId":"571","endLine":206,"endColumn":34},{"ruleId":"557","severity":1,"message":"638","line":267,"column":10,"nodeType":"559","messageId":"560","endLine":267,"endColumn":14},{"ruleId":"568","severity":1,"message":"600","line":288,"column":13,"nodeType":"570","messageId":"571","endLine":288,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":289,"column":15,"nodeType":"570","messageId":"571","endLine":289,"endColumn":17},{"ruleId":"645","severity":1,"message":"646","line":289,"column":40,"nodeType":"570","messageId":"647","endLine":289,"endColumn":41},{"ruleId":"568","severity":1,"message":"569","line":434,"column":20,"nodeType":"570","messageId":"571","endLine":434,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":437,"column":20,"nodeType":"570","messageId":"571","endLine":437,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":440,"column":25,"nodeType":"570","messageId":"571","endLine":440,"endColumn":27},{"ruleId":"568","severity":1,"message":"569","line":462,"column":22,"nodeType":"570","messageId":"571","endLine":462,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":465,"column":22,"nodeType":"570","messageId":"571","endLine":465,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":466,"column":27,"nodeType":"570","messageId":"571","endLine":466,"endColumn":29},{"ruleId":"595","severity":1,"message":"661","line":486,"column":5,"nodeType":"640","endLine":486,"endColumn":20,"suggestions":"662"},{"ruleId":"568","severity":1,"message":"600","line":487,"column":22,"nodeType":"570","messageId":"571","endLine":487,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":487,"column":41,"nodeType":"570","messageId":"571","endLine":487,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":489,"column":32,"nodeType":"570","messageId":"571","endLine":489,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":494,"column":32,"nodeType":"570","messageId":"571","endLine":494,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":506,"column":29,"nodeType":"570","messageId":"571","endLine":506,"endColumn":31},{"ruleId":"557","severity":1,"message":"663","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":31},{"ruleId":"568","severity":1,"message":"569","line":11,"column":18,"nodeType":"570","messageId":"571","endLine":11,"endColumn":20},{"ruleId":"568","severity":1,"message":"569","line":11,"column":37,"nodeType":"570","messageId":"571","endLine":11,"endColumn":39},{"ruleId":"557","severity":1,"message":"664","line":47,"column":7,"nodeType":"559","messageId":"560","endLine":47,"endColumn":18},{"ruleId":"568","severity":1,"message":"569","line":56,"column":17,"nodeType":"570","messageId":"571","endLine":56,"endColumn":19},{"ruleId":"568","severity":1,"message":"569","line":56,"column":36,"nodeType":"570","messageId":"571","endLine":56,"endColumn":38},{"ruleId":"568","severity":1,"message":"569","line":62,"column":23,"nodeType":"570","messageId":"571","endLine":62,"endColumn":25},{"ruleId":"557","severity":1,"message":"608","line":12,"column":8,"nodeType":"559","messageId":"560","endLine":12,"endColumn":13},{"ruleId":"557","severity":1,"message":"589","line":99,"column":36,"nodeType":"559","messageId":"560","endLine":99,"endColumn":47},{"ruleId":"557","severity":1,"message":"590","line":99,"column":49,"nodeType":"559","messageId":"560","endLine":99,"endColumn":57},{"ruleId":"551","replacedBy":"665"},{"ruleId":"553","replacedBy":"666"},{"ruleId":"557","severity":1,"message":"638","line":4,"column":10,"nodeType":"559","messageId":"560","endLine":4,"endColumn":14},{"ruleId":"568","severity":1,"message":"600","line":27,"column":13,"nodeType":"570","messageId":"571","endLine":27,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":28,"column":19,"nodeType":"570","messageId":"571","endLine":28,"endColumn":21},{"ruleId":"568","severity":1,"message":"600","line":29,"column":17,"nodeType":"570","messageId":"571","endLine":29,"endColumn":19},{"ruleId":"645","severity":1,"message":"646","line":29,"column":42,"nodeType":"570","messageId":"647","endLine":29,"endColumn":43},{"ruleId":"645","severity":1,"message":"646","line":29,"column":64,"nodeType":"570","messageId":"647","endLine":29,"endColumn":65},{"ruleId":"645","severity":1,"message":"646","line":30,"column":27,"nodeType":"570","messageId":"647","endLine":30,"endColumn":28},{"ruleId":"568","severity":1,"message":"600","line":34,"column":15,"nodeType":"570","messageId":"571","endLine":34,"endColumn":17},{"ruleId":"568","severity":1,"message":"600","line":35,"column":13,"nodeType":"570","messageId":"571","endLine":35,"endColumn":15},{"ruleId":"645","severity":1,"message":"646","line":35,"column":40,"nodeType":"570","messageId":"647","endLine":35,"endColumn":41},{"ruleId":"557","severity":1,"message":"667","line":110,"column":7,"nodeType":"559","messageId":"560","endLine":110,"endColumn":16},{"ruleId":"557","severity":1,"message":"668","line":150,"column":9,"nodeType":"559","messageId":"560","endLine":150,"endColumn":20},{"ruleId":"568","severity":1,"message":"569","line":184,"column":40,"nodeType":"570","messageId":"571","endLine":184,"endColumn":42},{"ruleId":"557","severity":1,"message":"657","line":288,"column":24,"nodeType":"559","messageId":"560","endLine":288,"endColumn":37},{"ruleId":"568","severity":1,"message":"569","line":295,"column":20,"nodeType":"570","messageId":"571","endLine":295,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":298,"column":20,"nodeType":"570","messageId":"571","endLine":298,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":301,"column":25,"nodeType":"570","messageId":"571","endLine":301,"endColumn":27},{"ruleId":"568","severity":1,"message":"569","line":316,"column":22,"nodeType":"570","messageId":"571","endLine":316,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":319,"column":22,"nodeType":"570","messageId":"571","endLine":319,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":320,"column":27,"nodeType":"570","messageId":"571","endLine":320,"endColumn":29},{"ruleId":"568","severity":1,"message":"569","line":336,"column":30,"nodeType":"570","messageId":"571","endLine":336,"endColumn":32},{"ruleId":"568","severity":1,"message":"569","line":336,"column":55,"nodeType":"570","messageId":"571","endLine":336,"endColumn":57},{"ruleId":"568","severity":1,"message":"569","line":340,"column":35,"nodeType":"570","messageId":"571","endLine":340,"endColumn":37},{"ruleId":"568","severity":1,"message":"569","line":354,"column":29,"nodeType":"570","messageId":"571","endLine":354,"endColumn":31},{"ruleId":"557","severity":1,"message":"669","line":5,"column":10,"nodeType":"559","messageId":"560","endLine":5,"endColumn":20},{"ruleId":"557","severity":1,"message":"638","line":6,"column":10,"nodeType":"559","messageId":"560","endLine":6,"endColumn":14},{"ruleId":"557","severity":1,"message":"670","line":6,"column":16,"nodeType":"559","messageId":"560","endLine":6,"endColumn":26},{"ruleId":"568","severity":1,"message":"600","line":14,"column":13,"nodeType":"570","messageId":"571","endLine":14,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":15,"column":15,"nodeType":"570","messageId":"571","endLine":15,"endColumn":17},{"ruleId":"645","severity":1,"message":"646","line":15,"column":40,"nodeType":"570","messageId":"647","endLine":15,"endColumn":41},{"ruleId":"595","severity":1,"message":"661","line":134,"column":5,"nodeType":"640","endLine":134,"endColumn":20,"suggestions":"671"},{"ruleId":"568","severity":1,"message":"600","line":136,"column":22,"nodeType":"570","messageId":"571","endLine":136,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":136,"column":41,"nodeType":"570","messageId":"571","endLine":136,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":138,"column":32,"nodeType":"570","messageId":"571","endLine":138,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":143,"column":32,"nodeType":"570","messageId":"571","endLine":143,"endColumn":34},{"ruleId":"557","severity":1,"message":"672","line":9,"column":7,"nodeType":"559","messageId":"560","endLine":9,"endColumn":13},{"ruleId":"557","severity":1,"message":"673","line":19,"column":10,"nodeType":"559","messageId":"560","endLine":19,"endColumn":20},{"ruleId":"674","severity":1,"message":"675","line":123,"column":5,"nodeType":"676","messageId":"571","endLine":123,"endColumn":11},{"ruleId":"568","severity":1,"message":"600","line":82,"column":50,"nodeType":"570","messageId":"571","endLine":82,"endColumn":52},{"ruleId":"568","severity":1,"message":"600","line":82,"column":74,"nodeType":"570","messageId":"571","endLine":82,"endColumn":76},{"ruleId":"568","severity":1,"message":"569","line":84,"column":39,"nodeType":"570","messageId":"571","endLine":84,"endColumn":41},{"ruleId":"568","severity":1,"message":"569","line":85,"column":41,"nodeType":"570","messageId":"571","endLine":85,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":86,"column":39,"nodeType":"570","messageId":"571","endLine":86,"endColumn":41},{"ruleId":"568","severity":1,"message":"569","line":87,"column":41,"nodeType":"570","messageId":"571","endLine":87,"endColumn":43},{"ruleId":"557","severity":1,"message":"589","line":132,"column":36,"nodeType":"559","messageId":"560","endLine":132,"endColumn":47},{"ruleId":"557","severity":1,"message":"590","line":132,"column":49,"nodeType":"559","messageId":"560","endLine":132,"endColumn":57},{"ruleId":"568","severity":1,"message":"600","line":12,"column":13,"nodeType":"570","messageId":"571","endLine":12,"endColumn":15},{"ruleId":"568","severity":1,"message":"600","line":13,"column":15,"nodeType":"570","messageId":"571","endLine":13,"endColumn":17},{"ruleId":"645","severity":1,"message":"646","line":13,"column":40,"nodeType":"570","messageId":"647","endLine":13,"endColumn":41},{"ruleId":"595","severity":1,"message":"661","line":114,"column":5,"nodeType":"640","endLine":114,"endColumn":20,"suggestions":"677"},{"ruleId":"568","severity":1,"message":"600","line":116,"column":22,"nodeType":"570","messageId":"571","endLine":116,"endColumn":24},{"ruleId":"568","severity":1,"message":"569","line":116,"column":41,"nodeType":"570","messageId":"571","endLine":116,"endColumn":43},{"ruleId":"568","severity":1,"message":"569","line":118,"column":32,"nodeType":"570","messageId":"571","endLine":118,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":123,"column":32,"nodeType":"570","messageId":"571","endLine":123,"endColumn":34},{"ruleId":"678","severity":1,"message":"679","line":16,"column":9,"nodeType":"680","messageId":"681","endLine":23,"endColumn":10},{"ruleId":"568","severity":1,"message":"600","line":31,"column":19,"nodeType":"570","messageId":"571","endLine":31,"endColumn":21},{"ruleId":"568","severity":1,"message":"600","line":32,"column":25,"nodeType":"570","messageId":"571","endLine":32,"endColumn":27},{"ruleId":"568","severity":1,"message":"600","line":33,"column":23,"nodeType":"570","messageId":"571","endLine":33,"endColumn":25},{"ruleId":"645","severity":1,"message":"646","line":33,"column":48,"nodeType":"570","messageId":"647","endLine":33,"endColumn":49},{"ruleId":"645","severity":1,"message":"646","line":33,"column":70,"nodeType":"570","messageId":"647","endLine":33,"endColumn":71},{"ruleId":"645","severity":1,"message":"646","line":34,"column":33,"nodeType":"570","messageId":"647","endLine":34,"endColumn":34},{"ruleId":"568","severity":1,"message":"600","line":38,"column":21,"nodeType":"570","messageId":"571","endLine":38,"endColumn":23},{"ruleId":"568","severity":1,"message":"600","line":39,"column":19,"nodeType":"570","messageId":"571","endLine":39,"endColumn":21},{"ruleId":"645","severity":1,"message":"646","line":39,"column":46,"nodeType":"570","messageId":"647","endLine":39,"endColumn":47},{"ruleId":"568","severity":1,"message":"600","line":42,"column":17,"nodeType":"570","messageId":"571","endLine":42,"endColumn":19},{"ruleId":"568","severity":1,"message":"600","line":52,"column":19,"nodeType":"570","messageId":"571","endLine":52,"endColumn":21},{"ruleId":"568","severity":1,"message":"600","line":53,"column":25,"nodeType":"570","messageId":"571","endLine":53,"endColumn":27},{"ruleId":"645","severity":1,"message":"646","line":54,"column":33,"nodeType":"570","messageId":"647","endLine":54,"endColumn":34},{"ruleId":"568","severity":1,"message":"600","line":58,"column":21,"nodeType":"570","messageId":"571","endLine":58,"endColumn":23},{"ruleId":"557","severity":1,"message":"682","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":146,"column":38,"nodeType":"570","messageId":"571","endLine":146,"endColumn":40},{"ruleId":"568","severity":1,"message":"569","line":172,"column":20,"nodeType":"570","messageId":"571","endLine":172,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":187,"column":45,"nodeType":"570","messageId":"571","endLine":187,"endColumn":47},{"ruleId":"568","severity":1,"message":"569","line":210,"column":31,"nodeType":"570","messageId":"571","endLine":210,"endColumn":33},{"ruleId":"568","severity":1,"message":"569","line":223,"column":35,"nodeType":"570","messageId":"571","endLine":223,"endColumn":37},{"ruleId":"557","severity":1,"message":"621","line":2,"column":8,"nodeType":"559","messageId":"560","endLine":2,"endColumn":19},{"ruleId":"568","severity":1,"message":"569","line":8,"column":24,"nodeType":"570","messageId":"571","endLine":8,"endColumn":26},{"ruleId":"568","severity":1,"message":"600","line":17,"column":29,"nodeType":"570","messageId":"571","endLine":17,"endColumn":31},{"ruleId":"557","severity":1,"message":"658","line":89,"column":17,"nodeType":"559","messageId":"560","endLine":89,"endColumn":20},{"ruleId":"568","severity":1,"message":"569","line":91,"column":21,"nodeType":"570","messageId":"571","endLine":91,"endColumn":23},{"ruleId":"568","severity":1,"message":"569","line":92,"column":46,"nodeType":"570","messageId":"571","endLine":92,"endColumn":48},{"ruleId":"568","severity":1,"message":"569","line":93,"column":51,"nodeType":"570","messageId":"571","endLine":93,"endColumn":53},{"ruleId":"557","severity":1,"message":"683","line":8,"column":8,"nodeType":"559","messageId":"560","endLine":8,"endColumn":19},{"ruleId":"557","severity":1,"message":"684","line":11,"column":55,"nodeType":"559","messageId":"560","endLine":11,"endColumn":68},{"ruleId":"557","severity":1,"message":"685","line":27,"column":8,"nodeType":"559","messageId":"560","endLine":27,"endColumn":24},{"ruleId":"674","severity":1,"message":"686","line":86,"column":5,"nodeType":"676","messageId":"571","endLine":86,"endColumn":15},{"ruleId":"557","severity":1,"message":"687","line":134,"column":7,"nodeType":"559","messageId":"560","endLine":134,"endColumn":14},{"ruleId":"557","severity":1,"message":"688","line":189,"column":9,"nodeType":"559","messageId":"560","endLine":189,"endColumn":13},{"ruleId":"557","severity":1,"message":"689","line":191,"column":16,"nodeType":"559","messageId":"560","endLine":191,"endColumn":23},{"ruleId":"557","severity":1,"message":"591","line":206,"column":9,"nodeType":"559","messageId":"560","endLine":206,"endColumn":18},{"ruleId":"557","severity":1,"message":"690","line":246,"column":9,"nodeType":"559","messageId":"560","endLine":246,"endColumn":19},{"ruleId":"691","severity":1,"message":"692","line":386,"column":19,"nodeType":"693","messageId":"694","endLine":386,"endColumn":21},{"ruleId":"557","severity":1,"message":"695","line":453,"column":18,"nodeType":"559","messageId":"560","endLine":453,"endColumn":27},{"ruleId":"557","severity":1,"message":"683","line":8,"column":8,"nodeType":"559","messageId":"560","endLine":8,"endColumn":19},{"ruleId":"557","severity":1,"message":"696","line":11,"column":68,"nodeType":"559","messageId":"560","endLine":11,"endColumn":71},{"ruleId":"557","severity":1,"message":"697","line":24,"column":10,"nodeType":"559","messageId":"560","endLine":24,"endColumn":23},{"ruleId":"557","severity":1,"message":"698","line":26,"column":10,"nodeType":"559","messageId":"560","endLine":26,"endColumn":33},{"ruleId":"595","severity":1,"message":"699","line":159,"column":10,"nodeType":"597","endLine":159,"endColumn":17,"suggestions":"700"},{"ruleId":"557","severity":1,"message":"690","line":207,"column":9,"nodeType":"559","messageId":"560","endLine":207,"endColumn":19},{"ruleId":"557","severity":1,"message":"701","line":212,"column":9,"nodeType":"559","messageId":"560","endLine":212,"endColumn":23},{"ruleId":"691","severity":1,"message":"692","line":441,"column":19,"nodeType":"693","messageId":"694","endLine":441,"endColumn":21},{"ruleId":"557","severity":1,"message":"682","line":4,"column":8,"nodeType":"559","messageId":"560","endLine":4,"endColumn":22},{"ruleId":"568","severity":1,"message":"569","line":76,"column":38,"nodeType":"570","messageId":"571","endLine":76,"endColumn":40},"no-native-reassign",["702"],"no-negated-in-lhs",["703"],["702"],["703"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AuthService' is defined but never used.","'Component' is defined but never used.","'setEmailErrMessage' is assigned a value but never used.","'passwordErrMessage' is assigned a value but never used.","'setPasswordErrMessage' is assigned a value but never used.","'valid' is assigned a value but never used.","'setValid' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TextField' is defined but never used.","'SubdirectoryArrowLeftRounded' is defined but never used.","'message' is assigned a value but never used.","'Hidden' is defined but never used.","'Grow' is defined but never used.","'Box' is defined but never used.","'Select' is defined but never used.","'MenuIcon' is defined but never used.",["702"],["703"],"'React' is defined but never used.","'Navbar' is defined but never used.","'NavBtn' is defined but never used.","'NavBtnLink' is defined but never used.","'Button' is defined but never used.","'handleLogOut' is assigned a value but never used.","'Redirect' is defined but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'useState' is defined but never used.","'employeeService' is defined but never used.","'resetForm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["704"],"'json' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'employees' is assigned a value but never used.","'departments' is assigned a value but never used.","'Controls' is defined but never used.","'PermIdentityOutlinedIcon' is defined but never used.","'AccountCircleOutlinedIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'Icon' is defined but never used.","'useForm' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.id'. Either include it or remove the dependency array.",["705"],"'name' is assigned a value but never used.","'AlternateEmail' is defined but never used.","'TblContainer' is assigned a value but never used.","'TblHead' is assigned a value but never used.","'TblPagination' is assigned a value but never used.","'recordsAfterPagingAndSorting' is assigned a value but never used.","'Fragment' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'DateService' is defined but never used.","'subjectOfChange' is assigned a value but never used.","'setSubjectOfChange' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'selectedDate' and 'timePeriod'. Either include them or remove the dependency array.",["706"],"'Grid' is defined but never used.","'MenuItem' is defined but never used.","'Input' is defined but never used.","'ArrowForwardIcon' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'classnames' is defined but never used.","'EfficiencyService' is defined but never used.","'ButtonBase' is defined but never used.","'CardContent' is defined but never used.","'CardActionArea' is defined but never used.","'theme' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, props.effectiveType, effectiveType] as a second argument to the useEffect Hook.","MemberExpression",["707"],"'optionsMix' is assigned a value but never used.","'weight' is assigned a value but never used.","'minutesToHours' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'dataEffective' is assigned a value but never used.","'dataNeutral' is assigned a value but never used.","'dataIneffective' is assigned a value but never used.","'dataWithout' is assigned a value but never used.","'dataEffectiveWeek' is assigned a value but never used.","'dataNeutralWeek' is assigned a value but never used.","'dataIneffectiveWeek' is assigned a value but never used.","'dataWithoutWeek' is assigned a value but never used.","'timePeriod' is assigned a value but never used.","'setTimePeriod' is assigned a value but never used.","'key' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod, beginInd, endInd] as a second argument to the useEffect Hook.",["708"],"React Hook useEffect contains a call to 'setTimePeriod'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [timePeriod, props.timePeriod] as a second argument to the useEffect Hook.",["709"],"'FaRegClosedCaptioning' is defined but never used.","'updateChart' is assigned a value but never used.",["702"],["703"],"'seriesDay' is assigned a value but never used.","'optionsWeek' is assigned a value but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.",["710"],"'styles' is assigned a value but never used.","'createData' is defined but never used.","no-dupe-keys","Duplicate key 'legend'.","ObjectExpression",["711"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'ManagerService' is defined but never used.","'TableFooter' is defined but never used.","'DialogActions' is defined but never used.","'resourcesService' is defined but never used.","Duplicate key 'fontWeight'.","'keylogs' is assigned a value but never used.","'date' is assigned a value but never used.","'setRows' is assigned a value but never used.","'updateRows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setScroll' is assigned a value but never used.","'Fab' is defined but never used.","'arrayIncludes' is defined but never used.","'FormatColorResetRounded' is defined but never used.","React Hook React.useEffect has an unnecessary dependency: 'items'. Either exclude it or remove the dependency array. Outer scope values like 'items' aren't valid dependencies because mutating them doesn't re-render the component.",["712"],"'handleAddClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"723","fix":"725"},{"desc":"723","fix":"726"},{"desc":"727","fix":"728"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"729","text":"730"},"Update the dependencies array to be: [userInfo.id]",{"range":"731","text":"732"},"Update the dependencies array to be: [selectedDate, timePeriod]",{"range":"733","text":"734"},"Add dependencies array: [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",{"range":"735","text":"736"},"Add dependencies array: [timePeriod, props.timePeriod, beginInd, endInd]",{"range":"737","text":"738"},"Add dependencies array: [timePeriod, props.timePeriod]",{"range":"739","text":"740"},{"range":"741","text":"740"},{"range":"742","text":"740"},"Update the dependencies array to be: []",{"range":"743","text":"744"},[2073,2088],"[recordForEdit, setValues]",[4362,4364],"[userInfo.id]",[5056,5058],"[selectedDate, timePeriod]",[8103,8103],", [timePeriod, props.timePeriod, props.effectiveType, effectiveType]",[5784,5784],", [timePeriod, props.timePeriod, beginInd, endInd]",[13770,13770],", [timePeriod, props.timePeriod]",[3854,3854],[3469,3469],[4554,4561],"[]"]